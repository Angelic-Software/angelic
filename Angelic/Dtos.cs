using System.CodeDom.Compiler;
using System.Collections.Generic;
using Newtonsoft.Json;

namespace Angelic.Dtos;


    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Area
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("toplevel_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel_id { get; set; } 

        [JsonProperty("toplevel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Toplevel_name { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("confirmemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Confirmemail { get; set; } 

        [JsonProperty("actionemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionemail { get; set; } 

        [JsonProperty("clearemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clearemail { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("from_address_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From_address_override { get; set; } 

        [JsonProperty("override_org_logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Override_org_logo { get; set; } 

        [JsonProperty("override_org_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_name { get; set; } 

        [JsonProperty("override_org_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Override_org_address { get; set; } 

        [JsonProperty("override_org_phone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_phone { get; set; } 

        [JsonProperty("override_org_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_email { get; set; } 

        [JsonProperty("override_org_website", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_website { get; set; } 

        [JsonProperty("override_org_portalurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_portalurl { get; set; } 

        [JsonProperty("mailbox_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_override { get; set; } 

        [JsonProperty("default_mailbox_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_mailbox_id { get; set; } 

        [JsonProperty("calldate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Calldate { get; set; } 

        [JsonProperty("item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_tax_code { get; set; } 

        [JsonProperty("service_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_tax_code { get; set; } 

        [JsonProperty("prepay_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepay_tax_code { get; set; } 

        [JsonProperty("contract_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_tax_code { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment>? Attachments { get; set; } 

        [JsonProperty("site_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldHelper>? Site_fields { get; set; } 

        [JsonProperty("pritech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pritech { get; set; } 

        [JsonProperty("sectech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sectech { get; set; } 

        [JsonProperty("accountmanagertech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Accountmanagertech { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("thirdpartynhdapiurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartynhdapiurl { get; set; } 

        [JsonProperty("xeroid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xeroid { get; set; } 

        [JsonProperty("open_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_ticket_count { get; set; } 

        [JsonProperty("opps_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opps_ticket_count { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("createdfrom_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Createdfrom_id { get; set; } 

        [JsonProperty("announce", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Announce { get; set; } 

        [JsonProperty("announcedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Announcedate { get; set; } 

        [JsonProperty("pritech_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pritech_name { get; set; } 

        [JsonProperty("sectech_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sectech_name { get; set; } 

        [JsonProperty("prinotify", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prinotify { get; set; } 

        [JsonProperty("secnotify", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Secnotify { get; set; } 

        [JsonProperty("priassign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Priassign { get; set; } 

        [JsonProperty("secassign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Secassign { get; set; } 

        [JsonProperty("accountmanagertech_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountmanagertech_name { get; set; } 

        [JsonProperty("accountmanagertech_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountmanagertech_email { get; set; } 

        [JsonProperty("chargeperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargeperiod { get; set; } 

        [JsonProperty("chargehours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Chargehours { get; set; } 

        [JsonProperty("chargecarryover", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Chargecarryover { get; set; } 

        [JsonProperty("invoiceyes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Invoiceyes { get; set; } 

        [JsonProperty("fluserdef1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fluserdef1 { get; set; } 

        [JsonProperty("fluserdef2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fluserdef2 { get; set; } 

        [JsonProperty("fluserdef3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fluserdef3 { get; set; } 

        [JsonProperty("fluserdef4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fluserdef4 { get; set; } 

        [JsonProperty("fluserdef5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fluserdef5 { get; set; } 

        [JsonProperty("floverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Floverride { get; set; } 

        [JsonProperty("fluserdef1hide", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef1hide { get; set; } 

        [JsonProperty("fluserdef2hide", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef2hide { get; set; } 

        [JsonProperty("fluserdef3hide", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef3hide { get; set; } 

        [JsonProperty("fluserdef4hide", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef4hide { get; set; } 

        [JsonProperty("fluserdef5hide", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef5hide { get; set; } 

        [JsonProperty("fluserdef1mand", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef1mand { get; set; } 

        [JsonProperty("fluserdef2mand", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef2mand { get; set; } 

        [JsonProperty("fluserdef3mand", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef3mand { get; set; } 

        [JsonProperty("fluserdef4mand", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef4mand { get; set; } 

        [JsonProperty("fluserdef5mand", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fluserdef5mand { get; set; } 

        [JsonProperty("includeactions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includeactions { get; set; } 

        [JsonProperty("needsinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Needsinvoice { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("startbalance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Startbalance { get; set; } 

        [JsonProperty("hourlyrate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hourlyrate { get; set; } 

        [JsonProperty("periodcharge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Periodcharge { get; set; } 

        [JsonProperty("dontinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontinvoice { get; set; } 

        [JsonProperty("invoicetemplate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoicetemplate { get; set; } 

        [JsonProperty("invoicecomment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoicecomment { get; set; } 

        [JsonProperty("lastinvoiceenddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastinvoiceenddate { get; set; } 

        [JsonProperty("showslaonweb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showslaonweb { get; set; } 

        [JsonProperty("item_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_tax_code_name { get; set; } 

        [JsonProperty("service_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_tax_code_name { get; set; } 

        [JsonProperty("contract_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_tax_code_name { get; set; } 

        [JsonProperty("prepay_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Prepay_tax_code_name { get; set; } 

        [JsonProperty("imageindex", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Imageindex { get; set; } 

        [JsonProperty("chargehours2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Chargehours2 { get; set; } 

        [JsonProperty("hourlyrate2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hourlyrate2 { get; set; } 

        [JsonProperty("cat2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cat2 { get; set; } 

        [JsonProperty("cat3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cat3 { get; set; } 

        [JsonProperty("cat4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cat4 { get; set; } 

        [JsonProperty("cat5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cat5 { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("ucemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ucemail { get; set; } 

        [JsonProperty("fcemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fcemail { get; set; } 

        [JsonProperty("actguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Actguid { get; set; } 

        [JsonProperty("smsbalance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Smsbalance { get; set; } 

        [JsonProperty("html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Html { get; set; } 

        [JsonProperty("hv", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hv { get; set; } 

        [JsonProperty("hvdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Hvdate { get; set; } 

        [JsonProperty("emailinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailinvoice { get; set; } 

        [JsonProperty("dont_auto_send_invoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_auto_send_invoices { get; set; } 

        [JsonProperty("seriousnesslevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seriousnesslevel { get; set; } 

        [JsonProperty("defcat1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defcat1 { get; set; } 

        [JsonProperty("defcat2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defcat2 { get; set; } 

        [JsonProperty("defcat3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defcat3 { get; set; } 

        [JsonProperty("defcat4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defcat4 { get; set; } 

        [JsonProperty("thresholdbreached", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Thresholdbreached { get; set; } 

        [JsonProperty("monthlyreportinclude", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Monthlyreportinclude { get; set; } 

        [JsonProperty("monthlyreportlastrun", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Monthlyreportlastrun { get; set; } 

        [JsonProperty("monthlyreportemaildirect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Monthlyreportemaildirect { get; set; } 

        [JsonProperty("monthlyreportemailmanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Monthlyreportemailmanager { get; set; } 

        [JsonProperty("monthlyreportshowonweb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Monthlyreportshowonweb { get; set; } 

        [JsonProperty("areatype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Areatype { get; set; } 

        [JsonProperty("unmatchedcombinations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unmatchedcombinations { get; set; } 

        [JsonProperty("prepayrecurringchargenextdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Prepayrecurringchargenextdate { get; set; } 

        [JsonProperty("billforrecurringprepayamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Billforrecurringprepayamount { get; set; } 

        [JsonProperty("prepayrecurringcharge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringcharge { get; set; } 

        [JsonProperty("prepayrecurringhours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringhours { get; set; } 

        [JsonProperty("prepayrecurringchargebp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepayrecurringchargebp { get; set; } 

        [JsonProperty("accountsemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsemailaddress { get; set; } 

        [JsonProperty("disclaimermatchstring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Disclaimermatchstring { get; set; } 

        [JsonProperty("paymentterms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Paymentterms { get; set; } 

        [JsonProperty("showallnonbillable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showallnonbillable { get; set; } 

        [JsonProperty("billinggroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billinggroup { get; set; } 

        [JsonProperty("autotopupthreshhold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopupthreshhold { get; set; } 

        [JsonProperty("autotopuptoamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopuptoamount { get; set; } 

        [JsonProperty("autotopupcostperhour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopupcostperhour { get; set; } 

        [JsonProperty("autotopupbyamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopupbyamount { get; set; } 

        [JsonProperty("surchargeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Surchargeid { get; set; } 

        [JsonProperty("billingtemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingtemplate_id { get; set; } 

        [JsonProperty("billingtemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billingtemplate_name { get; set; } 

        [JsonProperty("overidegreeting", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Overidegreeting { get; set; } 

        [JsonProperty("clientpackage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clientpackage { get; set; } 

        [JsonProperty("scopeofbusiness", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Scopeofbusiness { get; set; } 

        [JsonProperty("preferredagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Preferredagent { get; set; } 

        [JsonProperty("callhandlingnotes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Callhandlingnotes { get; set; } 

        [JsonProperty("automatic_callscript_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automatic_callscript_id { get; set; } 

        [JsonProperty("automatic_callscript_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Automatic_callscript_name { get; set; } 

        [JsonProperty("teamviewerpassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teamviewerpassword { get; set; } 

        [JsonProperty("customertype_new", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customertype_new { get; set; } 

        [JsonProperty("discountperc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Discountperc { get; set; } 

        [JsonProperty("showfaqfortoplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showfaqfortoplevel { get; set; } 

        [JsonProperty("accountsccemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsccemailaddress { get; set; } 

        [JsonProperty("isopportunity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Isopportunity { get; set; } 

        [JsonProperty("snowname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snowname { get; set; } 

        [JsonProperty("main_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Main_site_id { get; set; } 

        [JsonProperty("main_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Main_site_name { get; set; } 

        [JsonProperty("linked_organisation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_organisation_id { get; set; } 

        [JsonProperty("all_organisations_allowed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? All_organisations_allowed { get; set; } 

        [JsonProperty("allowed_organisations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Organisation>? Allowed_organisations { get; set; } 

        [JsonProperty("override_signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_signature { get; set; } 

        [JsonProperty("contractaccountsdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contractaccountsdesc { get; set; } 

        [JsonProperty("prepayaccountsdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Prepayaccountsdesc { get; set; } 

        [JsonProperty("site_update", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Site>? Site_update { get; set; } 

        [JsonProperty("newclient_sitename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newclient_sitename { get; set; } 

        [JsonProperty("newclient_phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newclient_phonenumber { get; set; } 

        [JsonProperty("newclient_domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newclient_domain { get; set; } 

        [JsonProperty("newclient_timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newclient_timezone { get; set; } 

        [JsonProperty("newclient_contactname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newclient_contactname { get; set; } 

        [JsonProperty("newclient_contactemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newclient_contactemail { get; set; } 

        [JsonProperty("newclient_contacttitle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newclient_contacttitle { get; set; } 

        [JsonProperty("newclient_web_access_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newclient_web_access_level { get; set; } 

        [JsonProperty("newclient_sendwelcomeemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newclient_sendwelcomeemail { get; set; } 

        [JsonProperty("newclient_delivery_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Newclient_delivery_address { get; set; } 

        [JsonProperty("newclient_countrycode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newclient_countrycode { get; set; } 

        [JsonProperty("newclient_regioncode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newclient_regioncode { get; set; } 

        [JsonProperty("faqlists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FAQListHead>? Faqlists { get; set; } 

        [JsonProperty("popup_notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaPopup>? Popup_notes { get; set; } 

        [JsonProperty("_reassign_all_to_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _reassign_all_to_user { get; set; } 

        [JsonProperty("allowall_tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_tickettypes { get; set; } 

        [JsonProperty("allowed_tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestType_List>? Allowed_tickettypes { get; set; } 

        [JsonProperty("allowall_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category1 { get; set; } 

        [JsonProperty("allowed_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category1 { get; set; } 

        [JsonProperty("allowall_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category2 { get; set; } 

        [JsonProperty("allowed_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category2 { get; set; } 

        [JsonProperty("allowall_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category3 { get; set; } 

        [JsonProperty("allowed_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category3 { get; set; } 

        [JsonProperty("allowall_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category4 { get; set; } 

        [JsonProperty("alocked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Alocked { get; set; } 

        [JsonProperty("allowed_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category4 { get; set; } 

        [JsonProperty("onhold_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onhold_ticket_count { get; set; } 

        [JsonProperty("total_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_ticket_count { get; set; } 

        [JsonProperty("opened_thismonth_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opened_thismonth_count { get; set; } 

        [JsonProperty("billingplans", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractDetail>? Billingplans { get; set; } 

        [JsonProperty("overriding_rates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChargeRate>? Overriding_rates { get; set; } 

        [JsonProperty("allowallchargerates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowallchargerates { get; set; } 

        [JsonProperty("chargerates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChargeRateArea>? Chargerates { get; set; } 

        [JsonProperty("newclient_siteguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newclient_siteguid { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("allow_api_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_api_access { get; set; } 

        [JsonProperty("api_access_clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Api_access_clientid { get; set; } 

        [JsonProperty("api_access_clientsecret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Api_access_clientsecret { get; set; } 

        [JsonProperty("thirdpartynhdauthurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartynhdauthurl { get; set; } 

        [JsonProperty("thirdpartynhdtenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartynhdtenant { get; set; } 

        [JsonProperty("thirdpartynhdapiclientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartynhdapiclientid { get; set; } 

        [JsonProperty("new_thirdpartynhdapiclientsecret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_thirdpartynhdapiclientsecret { get; set; } 

        [JsonProperty("areaitems", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaItem>? Areaitems { get; set; } 

        [JsonProperty("portal_logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_logo { get; set; } 

        [JsonProperty("override_portalcolour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Override_portalcolour { get; set; } 

        [JsonProperty("portalcolour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(7)]
        public string? Portalcolour { get; set; } 

        [JsonProperty("portalbackgroundimageurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string? Portalbackgroundimageurl { get; set; } 

        [JsonProperty("ninjarmmid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ninjarmmid { get; set; } 

        [JsonProperty("sales_tax_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sales_tax_type { get; set; } 

        [JsonProperty("purchase_tax_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_tax_type { get; set; } 

        [JsonProperty("isarchived_xero", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isarchived_xero { get; set; } 

        [JsonProperty("accountsfirstname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsfirstname { get; set; } 

        [JsonProperty("accountslastname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountslastname { get; set; } 

        [JsonProperty("sales_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sales_tax_code { get; set; } 

        [JsonProperty("purchase_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchase_tax_code { get; set; } 

        [JsonProperty("purchase_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_tax_code_name { get; set; } 

        [JsonProperty("prepayhistory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PrepayHistory>? Prepayhistory { get; set; } 

        [JsonProperty("periods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PrepayPeriod>? Periods { get; set; } 

        [JsonProperty("prepayrecurringminimumdeduction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringminimumdeduction { get; set; } 

        [JsonProperty("prepayrecurringminimumdeductiononlyactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prepayrecurringminimumdeductiononlyactive { get; set; } 

        [JsonProperty("prepayrecurringautomaticdeduction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringautomaticdeduction { get; set; } 

        [JsonProperty("prepaytotal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepaytotal { get; set; } 

        [JsonProperty("prepayused", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayused { get; set; } 

        [JsonProperty("prepaybalance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepaybalance { get; set; } 

        [JsonProperty("preferreddeliverymethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Preferreddeliverymethod { get; set; } 

        [JsonProperty("qbodefaulttax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qbodefaulttax { get; set; } 

        [JsonProperty("default_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_contract { get; set; } 

        [JsonProperty("device42id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device42id { get; set; } 

        [JsonProperty("xerodetails_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Xerodetails_id { get; set; } 

        [JsonProperty("xero_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_name { get; set; } 

        [JsonProperty("xero_tracking_category_1_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tracking_category_1_name { get; set; } 

        [JsonProperty("xero_tracking_category_2_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tracking_category_2_name { get; set; } 

        [JsonProperty("servicenowid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenowid { get; set; } 

        [JsonProperty("isnhserveremaildefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isnhserveremaildefault { get; set; } 

        [JsonProperty("datto_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_id { get; set; } 

        [JsonProperty("datto_alternate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Datto_alternate_id { get; set; } 

        [JsonProperty("datto_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_url { get; set; } 

        [JsonProperty("dattocommerce_tenantid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dattocommerce_tenantid { get; set; } 

        [JsonProperty("qbodefaulttaxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qbodefaulttaxcode { get; set; } 

        [JsonProperty("qbodefaulttaxcodename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbodefaulttaxcodename { get; set; } 

        [JsonProperty("qbo_default_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Qbo_default_tax_code { get; set; } 

        [JsonProperty("connectwiseid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connectwiseid { get; set; } 

        [JsonProperty("autotaskid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autotaskid { get; set; } 

        [JsonProperty("import_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Import_address { get; set; } 

        [JsonProperty("import_notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaNote>? Import_notes { get; set; } 

        [JsonProperty("ateraid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ateraid { get; set; } 

        [JsonProperty("kashflowid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflowid { get; set; } 

        [JsonProperty("kashflow_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kashflow_tenant_name { get; set; } 

        [JsonProperty("website", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Website { get; set; } 

        [JsonProperty("alastupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Alastupdate { get; set; } 

        [JsonProperty("service_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServiceRestriction>? Service_access { get; set; } 

        [JsonProperty("service_subscriptions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServiceUser>? Service_subscriptions { get; set; } 

        [JsonProperty("snelstart_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snelstart_id { get; set; } 

        [JsonProperty("default_currency_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_currency_code_name { get; set; } 

        [JsonProperty("_apply_billingtemplate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _apply_billingtemplate { get; set; } 

        [JsonProperty("datto_commerce_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Datto_commerce_id { get; set; } 

        [JsonProperty("datto_commerce_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_commerce_url { get; set; } 

        [JsonProperty("import_azure_tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public CSPCustomer? Import_azure_tenant { get; set; } 

        [JsonProperty("import_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_details_id { get; set; } 

        [JsonProperty("syncroid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Syncroid { get; set; } 

        [JsonProperty("kbentries", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KBEntry_List>? Kbentries { get; set; } 

        [JsonProperty("auvik_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auvik_id { get; set; } 

        [JsonProperty("hubspot_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hubspot_id { get; set; } 

        [JsonProperty("hubspot_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hubspot_url { get; set; } 

        [JsonProperty("hubspot_dont_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hubspot_dont_sync { get; set; } 

        [JsonProperty("hubspot_archived", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hubspot_archived { get; set; } 

        [JsonProperty("domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domain { get; set; } 

        [JsonProperty("passportal_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Passportal_id { get; set; } 

        [JsonProperty("update_licences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_licences { get; set; } 

        [JsonProperty("prepayasamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prepayasamount { get; set; } 

        [JsonProperty("synced_to_intacct", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Synced_to_intacct { get; set; } 

        [JsonProperty("qbo_company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_name { get; set; } 

        [JsonProperty("oppid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Oppid { get; set; } 

        [JsonProperty("tax_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_number { get; set; } 

        [JsonProperty("isclientdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isclientdetails { get; set; } 

        [JsonProperty("hubspot_lifecycle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hubspot_lifecycle { get; set; } 

        [JsonProperty("hudu_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hudu_url { get; set; } 

        [JsonProperty("prepayrecurringexpirymonths", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepayrecurringexpirymonths { get; set; } 

        [JsonProperty("accountsbccemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsbccemailaddress { get; set; } 

        [JsonProperty("defaultcontractoverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultcontractoverride { get; set; } 

        [JsonProperty("defaultcontractoverride_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultcontractoverride_ref { get; set; } 

        [JsonProperty("sqlimport_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sqlimport_id { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("donotimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Donotimport { get; set; } 

        [JsonProperty("liongardid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Liongardid { get; set; } 

        [JsonProperty("liongard_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Liongard_url { get; set; } 

        [JsonProperty("sync_to_liongard", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_to_liongard { get; set; } 

        [JsonProperty("regmanagertech_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Regmanagertech_name { get; set; } 

        [JsonProperty("logmanagertech_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logmanagertech_name { get; set; } 

        [JsonProperty("salesreptech_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Salesreptech_name { get; set; } 

        [JsonProperty("default_team_to_salesrep_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_team_to_salesrep_override { get; set; } 

        [JsonProperty("default_team_to_salesrep_override_team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_team_to_salesrep_override_team { get; set; } 

        [JsonProperty("cxmleadtech_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cxmleadtech_name { get; set; } 

        [JsonProperty("portalchatprofile", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portalchatprofile { get; set; } 

        [JsonProperty("portalchatprofile_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portalchatprofile_name { get; set; } 

        [JsonProperty("kaseyaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kaseyaid { get; set; } 

        [JsonProperty("trading_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Trading_name { get; set; } 

        [JsonProperty("dbc_company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dbc_company_name { get; set; } 

        [JsonProperty("salesforce_dontsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Salesforce_dontsync { get; set; } 

        [JsonProperty("stripe_customer_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stripe_customer_id { get; set; } 

        [JsonProperty("stripe_payment_method_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stripe_payment_method_id { get; set; } 

        [JsonProperty("stripe_payment_method_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stripe_payment_method_name { get; set; } 

        [JsonProperty("stripe_paymentmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public StripePaymentMethod? Stripe_paymentmethod { get; set; } 

        [JsonProperty("current_licences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Current_licences { get; set; } 

        [JsonProperty("servicenow_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_url { get; set; } 

        [JsonProperty("servicenow_locale", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_locale { get; set; } 

        [JsonProperty("servicenow_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_username { get; set; } 

        [JsonProperty("new_servicenowkey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_servicenowkey { get; set; } 

        [JsonProperty("servicenow_priority_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_priority_mappings { get; set; } 

        [JsonProperty("servicenow_status_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_status_mappings { get; set; } 

        [JsonProperty("servicenow_impact_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_impact_mappings { get; set; } 

        [JsonProperty("servicenow_urgency_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_urgency_mappings { get; set; } 

        [JsonProperty("servicenow_category_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_category_mappings { get; set; } 

        [JsonProperty("servicenow_assignment_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_assignment_group { get; set; } 

        [JsonProperty("servicenow_assignment_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_assignment_group_name { get; set; } 

        [JsonProperty("servicenow_assignmentgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Servicenow_assignmentgroup { get; set; } 

        [JsonProperty("servicenow_defaultuser_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_defaultuser_id { get; set; } 

        [JsonProperty("servicenow_defaultuser_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_defaultuser_name { get; set; } 

        [JsonProperty("servicenow_defaultuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Servicenow_defaultuser { get; set; } 

        [JsonProperty("test_servicenow", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Test_servicenow { get; set; } 

        [JsonProperty("sage_business_cloud_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sage_business_cloud_details_id { get; set; } 

        [JsonProperty("sage_business_cloud_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sage_business_cloud_details_name { get; set; } 

        [JsonProperty("exact_division", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Exact_division { get; set; } 

        [JsonProperty("exact_division_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exact_division_name { get; set; } 

        [JsonProperty("ncentral_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ncentral_details_id { get; set; } 

        [JsonProperty("currencyisocode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currencyisocode { get; set; } 

        [JsonProperty("intacct_location_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_location_id { get; set; } 

        [JsonProperty("intacct_location_id_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Intacct_location_id_list { get; set; } 

        [JsonProperty("intacct_location_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_location_type { get; set; } 

        [JsonProperty("new_categories", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? New_categories { get; set; } 

        [JsonProperty("jira_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_url { get; set; } 

        [JsonProperty("jira_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_username { get; set; } 

        [JsonProperty("new_jirakey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_jirakey { get; set; } 

        [JsonProperty("test_jira", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Test_jira { get; set; } 

        [JsonProperty("jira_servicedesk_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_servicedesk_id { get; set; } 

        [JsonProperty("jira_servicedesk_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_servicedesk_name { get; set; } 

        [JsonProperty("jira_servicedesk", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Jira_servicedesk { get; set; } 

        [JsonProperty("jira_requesttype_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Jira_requesttype_mappings { get; set; } 

        [JsonProperty("jira_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_user_id { get; set; } 

        [JsonProperty("jira_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_user_name { get; set; } 

        [JsonProperty("jira_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Jira_user { get; set; } 

        [JsonProperty("jira_priority_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Jira_priority_mappings { get; set; } 

        [JsonProperty("jira_status_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Jira_status_mappings { get; set; } 

        [JsonProperty("create_jira_webhook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_jira_webhook { get; set; } 

        [JsonProperty("jira_webhook_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Jira_webhook_created { get; set; } 

        [JsonProperty("defaultpdftemplateinvoicetickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultpdftemplateinvoicetickets { get; set; } 

        [JsonProperty("defaultpdftemplateinvoiceorders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultpdftemplateinvoiceorders { get; set; } 

        [JsonProperty("defaultpdftemplateinvoicerecurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultpdftemplateinvoicerecurring { get; set; } 

        [JsonProperty("defaultpdftemplateinvoicetickets_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultpdftemplateinvoicetickets_name { get; set; } 

        [JsonProperty("defaultpdftemplateinvoiceorders_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultpdftemplateinvoiceorders_name { get; set; } 

        [JsonProperty("defaultpdftemplateinvoicerecurring_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultpdftemplateinvoicerecurring_name { get; set; } 

        [JsonProperty("intacct_invoice_save_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_invoice_save_location { get; set; } 

        [JsonProperty("ingram_micro_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ingram_micro_details_id { get; set; } 

        [JsonProperty("_dont_fire_automations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dont_fire_automations { get; set; } 

        [JsonProperty("main_delivery_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Main_delivery_address { get; set; } 

        [JsonProperty("main_invoice_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Main_invoice_address { get; set; } 

        [JsonProperty("main_contact_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Main_contact_name { get; set; } 

        [JsonProperty("main_contact_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Main_contact_email { get; set; } 

        [JsonProperty("main_contact_phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Main_contact_phonenumber { get; set; } 

        [JsonProperty("main_contact_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Main_contact_id { get; set; } 

        [JsonProperty("main_phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Main_phonenumber { get; set; } 

        [JsonProperty("auvik_site_inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Auvik_site_inactive { get; set; } 

        [JsonProperty("invoice_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_class { get; set; } 

        [JsonProperty("new_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_icon { get; set; } 

        [JsonProperty("fortnox_tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fortnox_tenant { get; set; } 

        [JsonProperty("fortnox_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fortnox_tenant_name { get; set; } 

        [JsonProperty("servicenow_enable_webhook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Servicenow_enable_webhook { get; set; } 

        [JsonProperty("new_servicenow_webhooksecret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_servicenow_webhooksecret { get; set; } 

        [JsonProperty("servicenow_webhook_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicenow_webhook_user { get; set; } 

        [JsonProperty("servicenow_webhook_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_webhook_user_name { get; set; } 

        [JsonProperty("servicenow_webhook_tickettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicenow_webhook_tickettype { get; set; } 

        [JsonProperty("servicenow_webhook_tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_webhook_tickettype_name { get; set; } 

        [JsonProperty("myob_tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Myob_tenant { get; set; } 

        [JsonProperty("myob_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Myob_tenant_name { get; set; } 

        [JsonProperty("sync_servicenow_attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sync_servicenow_attachments { get; set; } 

        [JsonProperty("twilio_subaccount_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Twilio_subaccount_name { get; set; } 

        [JsonProperty("twilio_subaccount_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Twilio_subaccount_created { get; set; } 

        [JsonProperty("twilio_subaccount_sid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Twilio_subaccount_sid { get; set; } 

        [JsonProperty("twilio_subaccount_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Twilio_subaccount_status { get; set; } 

        [JsonProperty("twilio_subaccount_authtoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Twilio_subaccount_authtoken { get; set; } 

        [JsonProperty("_create_twilio_subaccount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _create_twilio_subaccount { get; set; } 

        [JsonProperty("_close_twilio_subaccount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _close_twilio_subaccount { get; set; } 

        [JsonProperty("_pauseunpause_twilio_subaccount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _pauseunpause_twilio_subaccount { get; set; } 

        [JsonProperty("_create_twilio_recurringinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _create_twilio_recurringinvoice { get; set; } 

        [JsonProperty("twilio_recurring_invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Twilio_recurring_invoice_id { get; set; } 

        [JsonProperty("override_layout_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_layout_id { get; set; } 

        [JsonProperty("override_layout_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_layout_name { get; set; } 

        [JsonProperty("extratabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tabname>? Extratabs { get; set; } 

        [JsonProperty("servicenow_team_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_team_mappings { get; set; } 

        [JsonProperty("servicenow_ticket_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_ticket_sync { get; set; } 

        [JsonProperty("servicenow_ticket_sync_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Servicenow_ticket_sync_list { get; set; } 

        [JsonProperty("servicenow_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_fieldmappings { get; set; } 

        [JsonProperty("matching_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matching_value { get; set; } 

        [JsonProperty("jira_webhook_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Jira_webhook_user { get; set; } 

        [JsonProperty("jira_webhook_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_webhook_username { get; set; } 

        [JsonProperty("avalara_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_code { get; set; } 

        [JsonProperty("avalara_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_tenant_name { get; set; } 

        [JsonProperty("avalara_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_id { get; set; } 

        [JsonProperty("invoice_mailbox_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_mailbox_override { get; set; } 

        [JsonProperty("quote_mailbox_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quote_mailbox_override { get; set; } 

        [JsonProperty("_merge_client_into", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _merge_client_into { get; set; } 

        [JsonProperty("invoice_tickets_seperately_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Invoice_tickets_seperately_override { get; set; } 

        [JsonProperty("servicenow_authtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicenow_authtype { get; set; } 

        [JsonProperty("portal_title_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Portal_title_override { get; set; } 

        [JsonProperty("portal_title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_title { get; set; } 

        [JsonProperty("reply_address_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reply_address_override { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Table { get; set; } 

        [JsonProperty("logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logo { get; set; } 

        [JsonProperty("regmanagertech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Regmanagertech { get; set; } 

        [JsonProperty("logmanagertech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Logmanagertech { get; set; } 

        [JsonProperty("salesreptech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesreptech { get; set; } 

        [JsonProperty("accountownertech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Accountownertech { get; set; } 

        [JsonProperty("cxmleadtech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cxmleadtech { get; set; } 

        [JsonProperty("xero_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_id { get; set; } 

        [JsonProperty("accountsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsid { get; set; } 

        [JsonProperty("excludefrominvoicesync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Excludefrominvoicesync { get; set; } 

        [JsonProperty("gficlientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Gficlientid { get; set; } 

        [JsonProperty("overridepdftemplateinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Overridepdftemplateinvoice { get; set; } 

        [JsonProperty("overridepdftemplateinvoice_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Overridepdftemplateinvoice_name { get; set; } 

        [JsonProperty("kashflow_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflow_tenant_id { get; set; } 

        [JsonProperty("client_to_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_to_invoice { get; set; } 

        [JsonProperty("client_to_invoice_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_to_invoice_name { get; set; } 

        [JsonProperty("invoiceduedaysextraclient", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoiceduedaysextraclient { get; set; } 

        [JsonProperty("itglue_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itglue_id { get; set; } 

        [JsonProperty("clientcurrency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clientcurrency { get; set; } 

        [JsonProperty("sentinel_subscription_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_subscription_id { get; set; } 

        [JsonProperty("sentinel_workspace_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_workspace_name { get; set; } 

        [JsonProperty("sentinel_resource_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_resource_group_name { get; set; } 

        [JsonProperty("sentinel_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sentinel_tenant_id { get; set; } 

        [JsonProperty("sentinel_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_tenant_name { get; set; } 

        [JsonProperty("default_currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_currency_code { get; set; } 

        [JsonProperty("client_to_invoice_recurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_to_invoice_recurring { get; set; } 

        [JsonProperty("client_to_invoice_recurring_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_to_invoice_recurring_name { get; set; } 

        [JsonProperty("azure_tenants", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaAzureTenant>? Azure_tenants { get; set; } 

        [JsonProperty("azure_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_tenant_id { get; set; } 

        [JsonProperty("snow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Snow_id { get; set; } 

        [JsonProperty("snowLicences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SnowLicenseAbstract>? SnowLicences { get; set; } 

        [JsonProperty("qbo_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_id { get; set; } 

        [JsonProperty("automatic_sales_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Automatic_sales_tax { get; set; } 

        [JsonProperty("cautomateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cautomateid { get; set; } 

        [JsonProperty("dbc_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dbc_company_id { get; set; } 

        [JsonProperty("stopped", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stopped { get; set; } 

        [JsonProperty("customertype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customertype { get; set; } 

        [JsonProperty("customer_relationship", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Customer_relationship { get; set; } 

        [JsonProperty("customer_relationship_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customer_relationship_list { get; set; } 

        [JsonProperty("servicenow_validated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Servicenow_validated { get; set; } 

        [JsonProperty("sentinel_default_user_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sentinel_default_user_override { get; set; } 

        [JsonProperty("sentinel_default_user_override_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_default_user_override_name { get; set; } 

        [JsonProperty("jira_validated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Jira_validated { get; set; } 

        [JsonProperty("ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ref { get; set; } 

        [JsonProperty("ticket_invoices_for_each_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ticket_invoices_for_each_site { get; set; } 

        [JsonProperty("intacct_save_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_save_location { get; set; } 

        [JsonProperty("is_vip", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_vip { get; set; } 

        [JsonProperty("accountownertech_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountownertech_name { get; set; } 

        [JsonProperty("taxable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Taxable { get; set; } 

        [JsonProperty("quickbooks_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public QuickBooksDetails? Quickbooks_details { get; set; } 

        [JsonProperty("percentage_to_survey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Percentage_to_survey { get; set; } 

        [JsonProperty("billing_plan_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billing_plan_text { get; set; } 

        [JsonProperty("overridepdftemplatequote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Overridepdftemplatequote { get; set; } 

        [JsonProperty("overridepdftemplatequote_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Overridepdftemplatequote_name { get; set; } 

        [JsonProperty("avalara_tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Avalara_tenant { get; set; } 

        [JsonProperty("due_date_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Due_date_type { get; set; } 

        [JsonProperty("toplevel_quote_currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel_quote_currency { get; set; } 

        [JsonProperty("is_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_account { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AreaAzureTenant
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("azure_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_tenant_id { get; set; } 

        [JsonProperty("azure_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_tenant_name { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Details_name { get; set; } 

        [JsonProperty("azure_tenant_domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_tenant_domain { get; set; } 

        [JsonProperty("licence_import_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_import_type { get; set; } 

        [JsonProperty("relationship_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relationship_type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AreaField
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AreaItem
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity { get; set; } 

        [JsonProperty("areaitemdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Areaitemdesc { get; set; } 

        [JsonProperty("billingperiod_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingperiod_id { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("invoicenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoicenumber { get; set; } 

        [JsonProperty("lastinvoicedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastinvoicedate { get; set; } 

        [JsonProperty("nextinvoicedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextinvoicedate { get; set; } 

        [JsonProperty("autorenew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autorenew { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("costprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costprice { get; set; } 

        [JsonProperty("sellingprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Sellingprice { get; set; } 

        [JsonProperty("accounts_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accounts_id { get; set; } 

        [JsonProperty("numberdayswarning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Numberdayswarning { get; set; } 

        [JsonProperty("dsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dsite { get; set; } 

        [JsonProperty("ddevnum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ddevnum { get; set; } 

        [JsonProperty("technician", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technician { get; set; } 

        [JsonProperty("billingcategory_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingcategory_id { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("dontinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontinvoice { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AreaNote
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("sales_order_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sales_order_id { get; set; } 

        [JsonProperty("purchase_order_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchase_order_id { get; set; } 

        [JsonProperty("quote_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quote_id { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_id { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime { get; set; } 

        [JsonProperty("who_agentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Who_agentid { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("detail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Detail { get; set; } 

        [JsonProperty("timetaken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Timetaken { get; set; } 

        [JsonProperty("mailentryid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailentryid { get; set; } 

        [JsonProperty("nextcalldate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextcalldate { get; set; } 

        [JsonProperty("satisfaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Satisfaction { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("ticketid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticketid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("hide_time_taken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_time_taken { get; set; } 

        [JsonProperty("add_to_calendar", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Add_to_calendar { get; set; } 

        [JsonProperty("app_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? App_user_id { get; set; } 

        [JsonProperty("app_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? App_agent_id { get; set; } 

        [JsonProperty("app_subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? App_subject { get; set; } 

        [JsonProperty("nextcallduration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Nextcallduration { get; set; } 

        [JsonProperty("createdfromaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Createdfromaction { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AreaPopup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("date_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_created { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("dismissable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dismissable { get; set; } 

        [JsonProperty("read_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Read_status { get; set; } 

        [JsonProperty("displaymodal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Displaymodal { get; set; } 

        [JsonProperty("displayhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Displayhtml { get; set; } 

        [JsonProperty("limitdaterange", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Limitdaterange { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AreaRequestType
    {
        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("request_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Request_type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AreaSectionDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ticket_area_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_area_id { get; set; } 

        [JsonProperty("ticket_area_id_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Ticket_area_id_guid { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Team_id { get; set; } 

        [JsonProperty("team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Team_guid { get; set; } 

        [JsonProperty("team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AreaToDo
    {
        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Template_id { get; set; } 

        [JsonProperty("todo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Todo_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Area_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("toplevel_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel_id { get; set; } 

        [JsonProperty("toplevel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Toplevel_name { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("confirmemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Confirmemail { get; set; } 

        [JsonProperty("actionemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionemail { get; set; } 

        [JsonProperty("clearemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clearemail { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("from_address_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From_address_override { get; set; } 

        [JsonProperty("override_org_logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Override_org_logo { get; set; } 

        [JsonProperty("override_org_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_name { get; set; } 

        [JsonProperty("override_org_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Override_org_address { get; set; } 

        [JsonProperty("override_org_phone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_phone { get; set; } 

        [JsonProperty("override_org_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_email { get; set; } 

        [JsonProperty("override_org_website", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_website { get; set; } 

        [JsonProperty("override_org_portalurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_org_portalurl { get; set; } 

        [JsonProperty("mailbox_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_override { get; set; } 

        [JsonProperty("default_mailbox_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_mailbox_id { get; set; } 

        [JsonProperty("calldate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Calldate { get; set; } 

        [JsonProperty("item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_tax_code { get; set; } 

        [JsonProperty("service_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_tax_code { get; set; } 

        [JsonProperty("prepay_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepay_tax_code { get; set; } 

        [JsonProperty("contract_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_tax_code { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment>? Attachments { get; set; } 

        [JsonProperty("site_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldHelper>? Site_fields { get; set; } 

        [JsonProperty("pritech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pritech { get; set; } 

        [JsonProperty("sectech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sectech { get; set; } 

        [JsonProperty("accountmanagertech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Accountmanagertech { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("thirdpartynhdapiurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartynhdapiurl { get; set; } 

        [JsonProperty("xeroid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xeroid { get; set; } 

        [JsonProperty("open_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_ticket_count { get; set; } 

        [JsonProperty("opps_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opps_ticket_count { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Table { get; set; } 

        [JsonProperty("logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logo { get; set; } 

        [JsonProperty("regmanagertech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Regmanagertech { get; set; } 

        [JsonProperty("logmanagertech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Logmanagertech { get; set; } 

        [JsonProperty("salesreptech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesreptech { get; set; } 

        [JsonProperty("accountownertech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Accountownertech { get; set; } 

        [JsonProperty("cxmleadtech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cxmleadtech { get; set; } 

        [JsonProperty("xero_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_id { get; set; } 

        [JsonProperty("accountsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsid { get; set; } 

        [JsonProperty("excludefrominvoicesync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Excludefrominvoicesync { get; set; } 

        [JsonProperty("gficlientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Gficlientid { get; set; } 

        [JsonProperty("overridepdftemplateinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Overridepdftemplateinvoice { get; set; } 

        [JsonProperty("overridepdftemplateinvoice_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Overridepdftemplateinvoice_name { get; set; } 

        [JsonProperty("kashflow_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflow_tenant_id { get; set; } 

        [JsonProperty("client_to_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_to_invoice { get; set; } 

        [JsonProperty("client_to_invoice_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_to_invoice_name { get; set; } 

        [JsonProperty("invoiceduedaysextraclient", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoiceduedaysextraclient { get; set; } 

        [JsonProperty("itglue_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itglue_id { get; set; } 

        [JsonProperty("clientcurrency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clientcurrency { get; set; } 

        [JsonProperty("sentinel_subscription_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_subscription_id { get; set; } 

        [JsonProperty("sentinel_workspace_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_workspace_name { get; set; } 

        [JsonProperty("sentinel_resource_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_resource_group_name { get; set; } 

        [JsonProperty("sentinel_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sentinel_tenant_id { get; set; } 

        [JsonProperty("sentinel_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_tenant_name { get; set; } 

        [JsonProperty("default_currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_currency_code { get; set; } 

        [JsonProperty("client_to_invoice_recurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_to_invoice_recurring { get; set; } 

        [JsonProperty("client_to_invoice_recurring_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_to_invoice_recurring_name { get; set; } 

        [JsonProperty("azure_tenants", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaAzureTenant>? Azure_tenants { get; set; } 

        [JsonProperty("azure_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_tenant_id { get; set; } 

        [JsonProperty("snow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Snow_id { get; set; } 

        [JsonProperty("snowLicences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SnowLicenseAbstract>? SnowLicences { get; set; } 

        [JsonProperty("qbo_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_id { get; set; } 

        [JsonProperty("automatic_sales_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Automatic_sales_tax { get; set; } 

        [JsonProperty("cautomateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cautomateid { get; set; } 

        [JsonProperty("dbc_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dbc_company_id { get; set; } 

        [JsonProperty("stopped", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stopped { get; set; } 

        [JsonProperty("customertype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customertype { get; set; } 

        [JsonProperty("customer_relationship", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Customer_relationship { get; set; } 

        [JsonProperty("customer_relationship_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customer_relationship_list { get; set; } 

        [JsonProperty("servicenow_validated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Servicenow_validated { get; set; } 

        [JsonProperty("sentinel_default_user_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sentinel_default_user_override { get; set; } 

        [JsonProperty("sentinel_default_user_override_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_default_user_override_name { get; set; } 

        [JsonProperty("jira_validated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Jira_validated { get; set; } 

        [JsonProperty("ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ref { get; set; } 

        [JsonProperty("ticket_invoices_for_each_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ticket_invoices_for_each_site { get; set; } 

        [JsonProperty("intacct_save_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_save_location { get; set; } 

        [JsonProperty("is_vip", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_vip { get; set; } 

        [JsonProperty("accountownertech_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountownertech_name { get; set; } 

        [JsonProperty("taxable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Taxable { get; set; } 

        [JsonProperty("quickbooks_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public QuickBooksDetails? Quickbooks_details { get; set; } 

        [JsonProperty("percentage_to_survey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Percentage_to_survey { get; set; } 

        [JsonProperty("billing_plan_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billing_plan_text { get; set; } 

        [JsonProperty("overridepdftemplatequote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Overridepdftemplatequote { get; set; } 

        [JsonProperty("overridepdftemplatequote_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Overridepdftemplatequote_name { get; set; } 

        [JsonProperty("avalara_tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Avalara_tenant { get; set; } 

        [JsonProperty("due_date_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Due_date_type { get; set; } 

        [JsonProperty("toplevel_quote_currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel_quote_currency { get; set; } 

        [JsonProperty("is_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_account { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AssignSchedule
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("day", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Day { get; set; } 

        [JsonProperty("time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Time { get; set; } 

        [JsonProperty("assignto_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assignto_agent_id { get; set; } 

        [JsonProperty("status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_id { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("last_run_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_run_date { get; set; } 

        [JsonProperty("interval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Interval { get; set; } 

        [JsonProperty("paused", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Paused { get; set; } 

        [JsonProperty("asslinked_tickettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asslinked_tickettype { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AteraAlert
    {
        [JsonProperty("alertID", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? AlertID { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Code { get; set; } 

        [JsonProperty("source", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Source { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("severity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Severity { get; set; } 

        [JsonProperty("created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Created { get; set; } 

        [JsonProperty("snoozedEndDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? SnoozedEndDate { get; set; } 

        [JsonProperty("deviceGuid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? DeviceGuid { get; set; } 

        [JsonProperty("archived", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Archived { get; set; } 

        [JsonProperty("alertCategoryID", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertCategoryID { get; set; } 

        [JsonProperty("archivedDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? ArchivedDate { get; set; } 

        [JsonProperty("alertMessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertMessage { get; set; } 

        [JsonProperty("deviceName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? DeviceName { get; set; } 

        [JsonProperty("customerID", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? CustomerID { get; set; } 

        [JsonProperty("customerName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CustomerName { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Attachment
    {
        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Link { get; set; } 

        [JsonProperty("content_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Content_type { get; set; } 

        [JsonProperty("last_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_updated { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("filename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filename { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("filesize", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filesize { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("unique_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unique_id { get; set; } 

        [JsonProperty("desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Desc { get; set; } 

        [JsonProperty("isimage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isimage { get; set; } 

        [JsonProperty("data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public byte[]? Data { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("attachmentaction_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Attachmentaction_id { get; set; } 

        [JsonProperty("_canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("image_upload_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Image_upload_id { get; set; } 

        [JsonProperty("image_upload_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Image_upload_key { get; set; } 

        [JsonProperty("file", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public byte[]? File { get; set; } 

        [JsonProperty("_enduserportalpdfprint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _enduserportalpdfprint { get; set; } 

        [JsonProperty("anon_outcomeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Anon_outcomeid { get; set; } 

        [JsonProperty("has_scanned", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Has_scanned { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_is_new_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_new_version { get; set; } 

        [JsonProperty("parent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parent_name { get; set; } 

        [JsonProperty("version_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Version_count { get; set; } 

        [JsonProperty("_alreadyuploaded", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _alreadyuploaded { get; set; } 

        [JsonProperty("copy_from_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Copy_from_id { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("import_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_details_id { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("showforusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showforusers { get; set; } 

        [JsonProperty("showonchild", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonchild { get; set; } 

        [JsonProperty("showonrelated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonrelated { get; set; } 

        [JsonProperty("data_base64", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Data_base64 { get; set; } 

        [JsonProperty("download_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Download_url { get; set; } 

        [JsonProperty("third_party_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_token { get; set; } 

        [JsonProperty("already_posted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Already_posted { get; set; } 

        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("s3url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? S3url { get; set; } 

        [JsonProperty("att_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Att_link { get; set; } 

        [JsonProperty("child_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_count { get; set; } 

        [JsonProperty("parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent_id { get; set; } 

        [JsonProperty("linked_version_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_version_id { get; set; } 

        [JsonProperty("allow_anon_upload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_anon_upload { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("tickettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_guid { get; set; } 

        [JsonProperty("validate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Validate_guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Attachment_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("filename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filename { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("filesize", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filesize { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("unique_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unique_id { get; set; } 

        [JsonProperty("desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Desc { get; set; } 

        [JsonProperty("isimage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isimage { get; set; } 

        [JsonProperty("showforusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showforusers { get; set; } 

        [JsonProperty("showonchild", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonchild { get; set; } 

        [JsonProperty("showonrelated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonrelated { get; set; } 

        [JsonProperty("data_base64", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Data_base64 { get; set; } 

        [JsonProperty("download_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Download_url { get; set; } 

        [JsonProperty("third_party_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_token { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("already_posted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Already_posted { get; set; } 

        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("s3url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? S3url { get; set; } 

        [JsonProperty("att_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Att_link { get; set; } 

        [JsonProperty("child_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_count { get; set; } 

        [JsonProperty("parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent_id { get; set; } 

        [JsonProperty("linked_version_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_version_id { get; set; } 

        [JsonProperty("allow_anon_upload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_anon_upload { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("tickettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_guid { get; set; } 

        [JsonProperty("validate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Validate_guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Attachment_View
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("unique_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unique_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action_id { get; set; } 

        [JsonProperty("record_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Record_count { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment_List>? Attachments { get; set; } 

        [JsonProperty("page_no", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Page_no { get; set; } 

        [JsonProperty("page_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Page_size { get; set; } 

        [JsonProperty("folders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair4>? Folders { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Audit
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? To { get; set; } 

        [JsonProperty("from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From { get; set; } 

        [JsonProperty("table_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Table_name { get; set; } 

        [JsonProperty("id1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id1 { get; set; } 

        [JsonProperty("id2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id2 { get; set; } 

        [JsonProperty("clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clientid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("actoutcome", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Actoutcome { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("datetime_to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime_to { get; set; } 

        [JsonProperty("datetime_from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime_from { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AuditPasswordField
    {
        [JsonProperty("object_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Object_type { get; set; } 

        [JsonProperty("object_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Object_id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("object", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public PasswordObjectType? Object { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Autoassign
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("precedence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Precedence { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Use { get; set; } 

        [JsonProperty("stopmatching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Stopmatching { get; set; } 

        [JsonProperty("new_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_agent_id { get; set; } 

        [JsonProperty("new_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_agent_name { get; set; } 

        [JsonProperty("new_team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_team { get; set; } 

        [JsonProperty("new_priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_priority_id { get; set; } 

        [JsonProperty("new_status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_status_id { get; set; } 

        [JsonProperty("newstatus_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Newstatus_guid { get; set; } 

        [JsonProperty("new_sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_sla_id { get; set; } 

        [JsonProperty("new_sla_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? New_sla_guid { get; set; } 

        [JsonProperty("new_category_1_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_category_1_id { get; set; } 

        [JsonProperty("new_category_1_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? New_category_1_guid { get; set; } 

        [JsonProperty("new_category_1_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_category_1_name { get; set; } 

        [JsonProperty("new_product_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_product_id { get; set; } 

        [JsonProperty("new_product_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_product_name { get; set; } 

        [JsonProperty("new_workflow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_workflow_id { get; set; } 

        [JsonProperty("newworkflow_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Newworkflow_guid { get; set; } 

        [JsonProperty("new_workflow_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_workflow_name { get; set; } 

        [JsonProperty("dontshownotification", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontshownotification { get; set; } 

        [JsonProperty("criteria", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutoassignCriteria>? Criteria { get; set; } 

        [JsonProperty("outcomes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutoassignOutcome>? Outcomes { get; set; } 

        [JsonProperty("_domatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _domatch { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Users? User { get; set; } 

        [JsonProperty("matched_rule_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Matched_rule_count { get; set; } 

        [JsonProperty("matched_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matched_ids { get; set; } 

        [JsonProperty("outcome_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome_id { get; set; } 

        [JsonProperty("outcome_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Outcome_name { get; set; } 

        [JsonProperty("new_category_2_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_category_2_id { get; set; } 

        [JsonProperty("new_category_2_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? New_category_2_guid { get; set; } 

        [JsonProperty("new_category_2_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_category_2_name { get; set; } 

        [JsonProperty("new_category_3_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_category_3_id { get; set; } 

        [JsonProperty("new_category_3_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? New_category_3_guid { get; set; } 

        [JsonProperty("new_category_3_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_category_3_name { get; set; } 

        [JsonProperty("new_category_4_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_category_4_id { get; set; } 

        [JsonProperty("new_category_4_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? New_category_4_guid { get; set; } 

        [JsonProperty("new_category_4_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_category_4_name { get; set; } 

        [JsonProperty("script_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Script_id { get; set; } 

        [JsonProperty("script_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Script_name { get; set; } 

        [JsonProperty("rule_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Rule_ids { get; set; } 

        [JsonProperty("new_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_template_id { get; set; } 

        [JsonProperty("newtemplate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Newtemplate_guid { get; set; } 

        [JsonProperty("new_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_template_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("popupmsg", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Popupmsg { get; set; } 

        [JsonProperty("popup_notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaPopup>? Popup_notes { get; set; } 

        [JsonProperty("flowdetail_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flowdetail_id { get; set; } 

        [JsonProperty("batch_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Batch_size { get; set; } 

        [JsonProperty("batch_sleep", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Batch_sleep { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("events", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameNotification>? Events { get; set; } 

        [JsonProperty("new_colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_colour { get; set; } 

        [JsonProperty("set_colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Set_colour { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("olas", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<WorkflowTarget>? Olas { get; set; } 

        [JsonProperty("database_lookups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PartsLookup>? Database_lookups { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AutoassignCriteria
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_id { get; set; } 

        [JsonProperty("autoassign_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Autoassign_guid { get; set; } 

        [JsonProperty("qualification_criteria_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qualification_criteria_id { get; set; } 

        [JsonProperty("fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldname { get; set; } 

        [JsonProperty("value_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_type { get; set; } 

        [JsonProperty("value_type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_type_id { get; set; } 

        [JsonProperty("value_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_int { get; set; } 

        [JsonProperty("valueint_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Valueint_guid { get; set; } 

        [JsonProperty("value_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_string { get; set; } 

        [JsonProperty("value_datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Value_datetime { get; set; } 

        [JsonProperty("partialmatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partialmatch { get; set; } 

        [JsonProperty("value_float", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Value_float { get; set; } 

        [JsonProperty("matchseparatedvalues", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Matchseparatedvalues { get; set; } 

        [JsonProperty("value_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_display { get; set; } 

        [JsonProperty("alt_value_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alt_value_display { get; set; } 

        [JsonProperty("tablename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tablename { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("flowsubdetails_criteria_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flowsubdetails_criteria_id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Use { get; set; } 

        [JsonProperty("chatprofile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chatprofile_id { get; set; } 

        [JsonProperty("chatprofile_flow_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chatprofile_flow_seq { get; set; } 

        [JsonProperty("timezonestring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timezonestring { get; set; } 

        [JsonProperty("match_after_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Match_after_start { get; set; } 

        [JsonProperty("match_after_target", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Match_after_target { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("stdid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stdid { get; set; } 

        [JsonProperty("contract_rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_rule_id { get; set; } 

        [JsonProperty("utcoffset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Utcoffset { get; set; } 

        [JsonProperty("eventrule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Eventrule_id { get; set; } 

        [JsonProperty("eventrule_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Eventrule_guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AutoassignOutcome
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_id { get; set; } 

        [JsonProperty("autoassign_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Autoassign_guid { get; set; } 

        [JsonProperty("fieldid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fieldid { get; set; } 

        [JsonProperty("fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldname { get; set; } 

        [JsonProperty("value_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_type { get; set; } 

        [JsonProperty("value_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_int { get; set; } 

        [JsonProperty("value_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_string { get; set; } 

        [JsonProperty("value_datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Value_datetime { get; set; } 

        [JsonProperty("value_float", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Value_float { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Value { get; set; } 

        [JsonProperty("value_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_display { get; set; } 

        [JsonProperty("value_type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_type_id { get; set; } 

        [JsonProperty("is_dummy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_dummy { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AutomateAlert
    {
        [JsonProperty("action", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action { get; set; } 

        [JsonProperty("ticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AutomateTicket? Ticket { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AutomateComment
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AutomateUser? User { get; set; } 

        [JsonProperty("createdDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreatedDate { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AutomateReference
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AutomateTicket
    {
        [JsonProperty("ticketId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TicketId { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AutomateReference? Status { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body { get; set; } 

        [JsonProperty("category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AutomateReference? Category { get; set; } 

        [JsonProperty("priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AutomateReference? Priority { get; set; } 

        [JsonProperty("client", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AutomateReference? Client { get; set; } 

        [JsonProperty("location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AutomateReference? Location { get; set; } 

        [JsonProperty("computer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AutomateReference? Computer { get; set; } 

        [JsonProperty("dueDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? DueDate { get; set; } 

        [JsonProperty("startDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? StartDate { get; set; } 

        [JsonProperty("contactDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? ContactDate { get; set; } 

        [JsonProperty("updateDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdateDate { get; set; } 

        [JsonProperty("from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From { get; set; } 

        [JsonProperty("cc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cc { get; set; } 

        [JsonProperty("supportLevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? SupportLevel { get; set; } 

        [JsonProperty("externalId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? ExternalId { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Guid { get; set; } 

        [JsonProperty("comments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutomateComment>? Comments { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AutomateUser
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("emailAddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EmailAddress { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AuvikAlert
    {
        [JsonProperty("entityId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EntityId { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("alertStatusString", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertStatusString { get; set; } 

        [JsonProperty("alertId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertId { get; set; } 

        [JsonProperty("alertName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertName { get; set; } 

        [JsonProperty("entityName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EntityName { get; set; } 

        [JsonProperty("companyName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CompanyName { get; set; } 

        [JsonProperty("entityType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EntityType { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Link { get; set; } 

        [JsonProperty("alertStatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? AlertStatus { get; set; } 

        [JsonProperty("alertDescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertDescription { get; set; } 

        [JsonProperty("alertSeverityString", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertSeverityString { get; set; } 

        [JsonProperty("alertSeverity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? AlertSeverity { get; set; } 

        [JsonProperty("companyId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CompanyId { get; set; } 

        [JsonProperty("correlationId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CorrelationId { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AuvikTenantMod
    {
        [JsonProperty("parentId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ParentId { get; set; } 

        [JsonProperty("parentName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ParentName { get; set; } 

        [JsonProperty("tenantId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TenantId { get; set; } 

        [JsonProperty("tenantName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TenantName { get; set; } 

        [JsonProperty("tenantDomain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TenantDomain { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AvalaraDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("environment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Environment { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("companyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Companyid { get; set; } 

        [JsonProperty("client_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_top_level { get; set; } 

        [JsonProperty("supplier_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_top_level { get; set; } 

        [JsonProperty("client_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_top_level_name { get; set; } 

        [JsonProperty("supplier_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_top_level_name { get; set; } 

        [JsonProperty("company_object", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair? Company_object { get; set; } 

        [JsonProperty("defaulttax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaulttax { get; set; } 

        [JsonProperty("defaultitem", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultitem { get; set; } 

        [JsonProperty("autosyncentities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autosyncentities { get; set; } 

        [JsonProperty("autosyncentitiesonupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autosyncentitiesonupdate { get; set; } 

        [JsonProperty("showmessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showmessage { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("syncentities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncentities { get; set; } 

        [JsonProperty("defaultcustomercode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultcustomercode { get; set; } 

        [JsonProperty("default_customer_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_customer_name { get; set; } 

        [JsonProperty("disablerecording", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disablerecording { get; set; } 

        [JsonProperty("address_mapping_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Address_mapping_type { get; set; } 

        [JsonProperty("sync_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sync_entities_list { get; set; } 

        [JsonProperty("sync_committed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_committed { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureADConnection
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domain { get; set; } 

        [JsonProperty("directoryid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Directoryid { get; set; } 

        [JsonProperty("applicationid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Applicationid { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

        [JsonProperty("_authcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _authcode { get; set; } 

        [JsonProperty("_exchangecodefortoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecodefortoken { get; set; } 

        [JsonProperty("mappings_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_user { get; set; } 

        [JsonProperty("mappings_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_agent { get; set; } 

        [JsonProperty("mappings_agent_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_agent_roles { get; set; } 

        [JsonProperty("mappings_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AzureADMapping>? Mappings_site { get; set; } 

        [JsonProperty("user_matching_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_matching_fields { get; set; } 

        [JsonProperty("agent_matching_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_matching_fields { get; set; } 

        [JsonProperty("user_matching_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? User_matching_list { get; set; } 

        [JsonProperty("agent_matching_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Agent_matching_list { get; set; } 

        [JsonProperty("halointegratorenabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegratorenabled { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("redirect_uri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirect_uri { get; set; } 

        [JsonProperty("mappings_cab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_cab { get; set; } 

        [JsonProperty("manage_licenses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Manage_licenses { get; set; } 

        [JsonProperty("licensed_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Licensed_roles { get; set; } 

        [JsonProperty("licensed_roles_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Licensed_roles_list { get; set; } 

        [JsonProperty("tenant_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tenant_type { get; set; } 

        [JsonProperty("mappings_device", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_device { get; set; } 

        [JsonProperty("defaultsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultsite { get; set; } 

        [JsonProperty("defaultsite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultsite_name { get; set; } 

        [JsonProperty("assettype_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_choice { get; set; } 

        [JsonProperty("default_assetgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup { get; set; } 

        [JsonProperty("default_assetgroup_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Default_assetgroup_guid { get; set; } 

        [JsonProperty("default_assetgroup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroup_name { get; set; } 

        [JsonProperty("default_assettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assettype { get; set; } 

        [JsonProperty("default_assettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Default_assettype_guid { get; set; } 

        [JsonProperty("default_assettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assettype_name { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_field { get; set; } 

        [JsonProperty("assettype_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_fieldname { get; set; } 

        [JsonProperty("import_identifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_identifier { get; set; } 

        [JsonProperty("import_identifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_identifier_fieldname { get; set; } 

        [JsonProperty("accountenabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Accountenabled { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("createunmatchedusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Createunmatchedusers { get; set; } 

        [JsonProperty("unmatchedusersite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unmatchedusersite { get; set; } 

        [JsonProperty("unmatchedusersite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Unmatchedusersite_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Top_level { get; set; } 

        [JsonProperty("auto_create_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Auto_create_mappings { get; set; } 

        [JsonProperty("auto_allow_sso", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Auto_allow_sso { get; set; } 

        [JsonProperty("top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Top_level_name { get; set; } 

        [JsonProperty("mappings_client", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaAzureTenant>? Mappings_client { get; set; } 

        [JsonProperty("default_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_ticket_type { get; set; } 

        [JsonProperty("default_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_ticket_type_name { get; set; } 

        [JsonProperty("default_classification", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_classification { get; set; } 

        [JsonProperty("default_classification_reason", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_classification_reason { get; set; } 

        [JsonProperty("default_priority_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_priority_name { get; set; } 

        [JsonProperty("mappings_ticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_ticket { get; set; } 

        [JsonProperty("intune_dont_update_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Intune_dont_update_type { get; set; } 

        [JsonProperty("halo_integrator_import_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_integrator_import_list { get; set; } 

        [JsonProperty("halo_integrator_import_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Halo_integrator_import_types { get; set; } 

        [JsonProperty("intune_enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Intune_enabled { get; set; } 

        [JsonProperty("licence_import_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_import_type { get; set; } 

        [JsonProperty("graphendpoint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Graphendpoint { get; set; } 

        [JsonProperty("intuneusermatchingfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intuneusermatchingfield { get; set; } 

        [JsonProperty("current_scopes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Current_scopes { get; set; } 

        [JsonProperty("_dosave", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dosave { get; set; } 

        [JsonProperty("dont_sync_new_tenants", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_sync_new_tenants { get; set; } 

        [JsonProperty("importunmatchedgroupasserviceaccount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Importunmatchedgroupasserviceaccount { get; set; } 

        [JsonProperty("deactivate_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deactivate_users { get; set; } 

        [JsonProperty("mappings_priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_priority { get; set; } 

        [JsonProperty("allow_subscription_management", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_subscription_management { get; set; } 

        [JsonProperty("receive_subscription_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_subscription_updated { get; set; } 

        [JsonProperty("graph_host", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Graph_host { get; set; } 

        [JsonProperty("mappings_user_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_user_roles { get; set; } 

        [JsonProperty("alternate_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alternate_client_id { get; set; } 

        [JsonProperty("new_alternate_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_alternate_client_secret { get; set; } 

        [JsonProperty("default_relationship_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_relationship_type { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("intune_delete_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intune_delete_status { get; set; } 

        [JsonProperty("intune_delete_status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intune_delete_status_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("sentinel_default_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sentinel_default_user { get; set; } 

        [JsonProperty("sentinel_default_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_default_user_name { get; set; } 

        [JsonProperty("named_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Named_roles { get; set; } 

        [JsonProperty("named_roles_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Named_roles_list { get; set; } 

        [JsonProperty("new_user_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_user_template { get; set; } 

        [JsonProperty("new_user_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_user_type { get; set; } 

        [JsonProperty("mappings_new_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_new_user { get; set; } 

        [JsonProperty("new_user_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_user_template_name { get; set; } 

        [JsonProperty("software_import_licence_matching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Software_import_licence_matching { get; set; } 

        [JsonProperty("default_intune_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_intune_status { get; set; } 

        [JsonProperty("default_intune_status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_intune_status_name { get; set; } 

        [JsonProperty("no_manager_role", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? No_manager_role { get; set; } 

        [JsonProperty("no_manager_role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? No_manager_role_name { get; set; } 

        [JsonProperty("track_sign_in_activity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Track_sign_in_activity { get; set; } 

        [JsonProperty("halointegrator_allowedclientidslist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair3>? Halointegrator_allowedclientidslist { get; set; } 

        [JsonProperty("halointegrator_allowedclientids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_allowedclientids { get; set; } 

        [JsonProperty("user_licence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? User_licence { get; set; } 

        [JsonProperty("user_licence_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_licence_list { get; set; } 

        [JsonProperty("check_licence_list_for_service_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Check_licence_list_for_service_user { get; set; } 

        [JsonProperty("exclude_mssense_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exclude_mssense_devices { get; set; } 

        [JsonProperty("authentication_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Authentication_type { get; set; } 

        [JsonProperty("_confirmmanagedidentitysetup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _confirmmanagedidentitysetup { get; set; } 

        [JsonProperty("_confirmclientcredentialssetup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _confirmclientcredentialssetup { get; set; } 

        [JsonProperty("allow_presence_notifications", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_presence_notifications { get; set; } 

        [JsonProperty("licence_import_client", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_import_client { get; set; } 

        [JsonProperty("licence_import_client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Licence_import_client_name { get; set; } 

        [JsonProperty("assign_licences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Assign_licences { get; set; } 

        [JsonProperty("resource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resource { get; set; } 

        [JsonProperty("only_import_sentinel_comments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Only_import_sentinel_comments { get; set; } 

        [JsonProperty("use_delta_queries", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_delta_queries { get; set; } 

        [JsonProperty("_deltareset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AzureDeltaReset? _deltareset { get; set; } 

        [JsonProperty("intune_user_matching_integration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intune_user_matching_integration { get; set; } 

        [JsonProperty("intune_recovered_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intune_recovered_status { get; set; } 

        [JsonProperty("intune_recovered_status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intune_recovered_status_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureADFilter
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("mapping_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mapping_id { get; set; } 

        [JsonProperty("filter_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_field { get; set; } 

        [JsonProperty("filter_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_type { get; set; } 

        [JsonProperty("filter_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_value { get; set; } 

        [JsonProperty("query_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Query_string { get; set; } 

        [JsonProperty("version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureADMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("connectionid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connectionid { get; set; } 

        [JsonProperty("siteid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Siteid { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("roleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Roleid { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant_id { get; set; } 

        [JsonProperty("tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant_name { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AzureADFilter>? Filters { get; set; } 

        [JsonProperty("filter_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_count { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("external_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? External_users { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("sequenceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequenceid { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("site_mapping_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_mapping_type { get; set; } 

        [JsonProperty("clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clientid { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("site_mapping_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_mapping_field { get; set; } 

        [JsonProperty("default_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_site_id { get; set; } 

        [JsonProperty("default_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_site_name { get; set; } 

        [JsonProperty("userroleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userroleid { get; set; } 

        [JsonProperty("import_photo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Import_photo { get; set; } 

        [JsonProperty("site_mappings_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Site_mappings_user { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureAssignedLicenses
    {
        [JsonProperty("skuId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SkuId { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureDelta
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("related_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Related_guid { get; set; } 

        [JsonProperty("tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Tenant_id { get; set; } 

        [JsonProperty("entity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity { get; set; } 

        [JsonProperty("next_delta", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Next_delta { get; set; } 

        [JsonProperty("last_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_updated { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureDeltaReset
    {
        [JsonProperty("tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Result { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureDevOpsDetails
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("instance_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Instance_url { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("fields_to_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fields_to_sync { get; set; } 

        [JsonProperty("fields_to_sync_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Fields_to_sync_list { get; set; } 

        [JsonProperty("sync_mapped_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_mapped_fields { get; set; } 

        [JsonProperty("sync_attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_attachments { get; set; } 

        [JsonProperty("sync_area_path", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_area_path { get; set; } 

        [JsonProperty("sync_iteration_path", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_iteration_path { get; set; } 

        [JsonProperty("sync_priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_priority { get; set; } 

        [JsonProperty("sync_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_status { get; set; } 

        [JsonProperty("sync_start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_start_date { get; set; } 

        [JsonProperty("sync_target_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_target_date { get; set; } 

        [JsonProperty("status_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Status_mappings { get; set; } 

        [JsonProperty("priority_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Priority_mappings { get; set; } 

        [JsonProperty("areapath_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Areapath_mappings { get; set; } 

        [JsonProperty("iterationpath_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Iterationpath_mappings { get; set; } 

        [JsonProperty("otherfield_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Otherfield_mappings { get; set; } 

        [JsonProperty("area_path_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Area_path_field { get; set; } 

        [JsonProperty("iteration_path_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Iteration_path_field { get; set; } 

        [JsonProperty("work_item_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Work_item_description { get; set; } 

        [JsonProperty("webhook_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_username { get; set; } 

        [JsonProperty("new_webhook_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_webhook_password { get; set; } 

        [JsonProperty("webhook_salt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_salt { get; set; } 

        [JsonProperty("webhook_iterations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Webhook_iterations { get; set; } 

        [JsonProperty("ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_type { get; set; } 

        [JsonProperty("ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_type_name { get; set; } 

        [JsonProperty("ticket_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_user { get; set; } 

        [JsonProperty("ticket_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_user_name { get; set; } 

        [JsonProperty("user_is_created_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? User_is_created_by { get; set; } 

        [JsonProperty("sync_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_summary { get; set; } 

        [JsonProperty("private_updates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Private_updates { get; set; } 

        [JsonProperty("new_webhook_password_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_webhook_password_method { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("update_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Update_days { get; set; } 

        [JsonProperty("enablepipelines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enablepipelines { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFilter>? Filters { get; set; } 

        [JsonProperty("import_entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_entities { get; set; } 

        [JsonProperty("import_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Import_entities_list { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureMonitorData
    {
        [JsonProperty("essentials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AzureMonitorEssentials? Essentials { get; set; } 

        [JsonProperty("alertContext", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? AlertContext { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureMonitorEssentials
    {
        [JsonProperty("alertId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertId { get; set; } 

        [JsonProperty("alertRule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertRule { get; set; } 

        [JsonProperty("severity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Severity { get; set; } 

        [JsonProperty("signalType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SignalType { get; set; } 

        [JsonProperty("monitorCondition", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MonitorCondition { get; set; } 

        [JsonProperty("monitoringService", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MonitoringService { get; set; } 

        [JsonProperty("alertTargetIds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? AlertTargetIds { get; set; } 

        [JsonProperty("configurationItems", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? ConfigurationItems { get; set; } 

        [JsonProperty("originAlertId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? OriginAlertId { get; set; } 

        [JsonProperty("firedDateTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? FiredDateTime { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("essentialsVersion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EssentialsVersion { get; set; } 

        [JsonProperty("alertContextVersion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertContextVersion { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class AzureMonitorWebhook
    {
        [JsonProperty("schemaId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SchemaId { get; set; } 

        [JsonProperty("data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AzureMonitorData? Data { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class BookingType
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("duration_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Duration_type { get; set; } 

        [JsonProperty("duration_mins", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Duration_mins { get; set; } 

        [JsonProperty("duration_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Duration_days { get; set; } 

        [JsonProperty("appointment_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Appointment_type { get; set; } 

        [JsonProperty("customslots", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Timeslot>? Customslots { get; set; } 

        [JsonProperty("messagehtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Messagehtml { get; set; } 

        [JsonProperty("resourcebooking_buffer_minutes_before", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resourcebooking_buffer_minutes_before { get; set; } 

        [JsonProperty("resourcebooking_buffer_minutes_after", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resourcebooking_buffer_minutes_after { get; set; } 

        [JsonProperty("type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class BookingTypeTimeslot
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("resources", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair4>? Resources { get; set; } 

        [JsonProperty("bookedResourceId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? BookedResourceId { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Bookmark
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id { get; set; } 

        [JsonProperty("entity_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_type { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("bookmarked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Bookmarked { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class BudgetType
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("defaultrate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Defaultrate { get; set; } 

        [JsonProperty("chargerate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class BulkEmail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("serviceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Serviceid { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_id { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("next_retry_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Next_retry_date { get; set; } 

        [JsonProperty("last_attempt_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_attempt_date { get; set; } 

        [JsonProperty("mailcampaignid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailcampaignid { get; set; } 

        [JsonProperty("mailcampaignemailid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailcampaignemailid { get; set; } 

        [JsonProperty("mailboxfrom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailboxfrom { get; set; } 

        [JsonProperty("mailboxreplyto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailboxreplyto { get; set; } 

        [JsonProperty("trace", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Trace>? Trace { get; set; } 

        [JsonProperty("request_body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Request_body { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("fault_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fault_id { get; set; } 

        [JsonProperty("actionnumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionnumber { get; set; } 

        [JsonProperty("distribution_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Distribution_list { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class BusinessCentralCompany
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("systemVersion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SystemVersion { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("displayName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? DisplayName { get; set; } 

        [JsonProperty("businessProfileId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? BusinessProfileId { get; set; } 

        [JsonProperty("systemCreatedAt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? SystemCreatedAt { get; set; } 

        [JsonProperty("systemCreatedBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SystemCreatedBy { get; set; } 

        [JsonProperty("systemModifiedAt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? SystemModifiedAt { get; set; } 

        [JsonProperty("systemModifiedBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SystemModifiedBy { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class BusinessCentralCustomer
    {
        [JsonProperty("odataetag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Odataetag { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Number { get; set; } 

        [JsonProperty("displayName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? DisplayName { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("addressLine1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AddressLine1 { get; set; } 

        [JsonProperty("addressLine2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AddressLine2 { get; set; } 

        [JsonProperty("city", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? City { get; set; } 

        [JsonProperty("state", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? State { get; set; } 

        [JsonProperty("country", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Country { get; set; } 

        [JsonProperty("postalCode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PostalCode { get; set; } 

        [JsonProperty("phoneNumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PhoneNumber { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("website", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Website { get; set; } 

        [JsonProperty("salespersonCode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SalespersonCode { get; set; } 

        [JsonProperty("balanceDue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public float? BalanceDue { get; set; } 

        [JsonProperty("creditLimit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? CreditLimit { get; set; } 

        [JsonProperty("taxLiable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? TaxLiable { get; set; } 

        [JsonProperty("taxAreaId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TaxAreaId { get; set; } 

        [JsonProperty("taxAreaDisplayName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TaxAreaDisplayName { get; set; } 

        [JsonProperty("taxRegistrationNumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TaxRegistrationNumber { get; set; } 

        [JsonProperty("currencyId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CurrencyId { get; set; } 

        [JsonProperty("currencyCode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CurrencyCode { get; set; } 

        [JsonProperty("paymentTermsId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PaymentTermsId { get; set; } 

        [JsonProperty("shipmentMethodId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ShipmentMethodId { get; set; } 

        [JsonProperty("paymentMethodId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PaymentMethodId { get; set; } 

        [JsonProperty("blocked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Blocked { get; set; } 

        [JsonProperty("lastModifiedDateTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastModifiedDateTime { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class BusinessCentralDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant_id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("redirect_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirect_url { get; set; } 

        [JsonProperty("authorization_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Authorization_code { get; set; } 

        [JsonProperty("_exchangecodefortoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecodefortoken { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

        [JsonProperty("_authcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _authcode { get; set; } 

        [JsonProperty("environment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public BusinessCentralEnvironment? Environment { get; set; } 

        [JsonProperty("environment_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Environment_name { get; set; } 

        [JsonProperty("environment_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Environment_type { get; set; } 

        [JsonProperty("web_service_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Web_service_url { get; set; } 

        [JsonProperty("country", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Country { get; set; } 

        [JsonProperty("company", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public BusinessCentralCompany? Company { get; set; } 

        [JsonProperty("company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Company_id { get; set; } 

        [JsonProperty("company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Company_name { get; set; } 

        [JsonProperty("company_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Company_version { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("client_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_top_level { get; set; } 

        [JsonProperty("client_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_top_level_name { get; set; } 

        [JsonProperty("client_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_mappings { get; set; } 

        [JsonProperty("item_group_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Item_group_mappings { get; set; } 

        [JsonProperty("item_default_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_default_group { get; set; } 

        [JsonProperty("item_default_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_default_group_name { get; set; } 

        [JsonProperty("default_sales_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_sales_account { get; set; } 

        [JsonProperty("default_sales_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_sales_account_name { get; set; } 

        [JsonProperty("default_purchase_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_purchase_account { get; set; } 

        [JsonProperty("default_purchase_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_purchase_account_name { get; set; } 

        [JsonProperty("enable_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_sync { get; set; } 

        [JsonProperty("sync_entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sync_entities { get; set; } 

        [JsonProperty("sync_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sync_entities_list { get; set; } 

        [JsonProperty("show_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_message { get; set; } 

        [JsonProperty("default_invoice_item", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_invoice_item { get; set; } 

        [JsonProperty("default_invoice_item_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_invoice_item_name { get; set; } 

        [JsonProperty("graph_host", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Graph_host { get; set; } 

        [JsonProperty("sync_inv_groups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_inv_groups { get; set; } 

        [JsonProperty("use_advanced_cost_endpoint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_advanced_cost_endpoint { get; set; } 

        [JsonProperty("group_increment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_increment { get; set; } 

        [JsonProperty("line_increment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Line_increment { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class BusinessCentralEnvironment
    {
        [JsonProperty("aadTenantId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AadTenantId { get; set; } 

        [JsonProperty("applicationFamily", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ApplicationFamily { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("countryCode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CountryCode { get; set; } 

        [JsonProperty("webServiceUrl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? WebServiceUrl { get; set; } 

        [JsonProperty("webClientLoginUrl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? WebClientLoginUrl { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CSPCustomer
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("companyProfile", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public CSPCustomerProfile? CompanyProfile { get; set; } 

        [JsonProperty("relationshipToPartner", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? RelationshipToPartner { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CSPCustomerProfile
    {
        [JsonProperty("tenantId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TenantId { get; set; } 

        [JsonProperty("domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domain { get; set; } 

        [JsonProperty("companyName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CompanyName { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CSVTemplate
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("groupingtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Groupingtype { get; set; } 

        [JsonProperty("detailcolumns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CSVTemplateDetail>? Detailcolumns { get; set; } 

        [JsonProperty("is_preview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_preview { get; set; } 

        [JsonProperty("is_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_generate { get; set; } 

        [JsonProperty("printcsv", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printcsv { get; set; } 

        [JsonProperty("invoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceHeader>? Invoices { get; set; } 

        [JsonProperty("csv_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Csv_attachment_id { get; set; } 

        [JsonProperty("csv_attachment_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Csv_attachment_name { get; set; } 

        [JsonProperty("update_posted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_posted { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("background_task", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Background_task { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CSVTemplateDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("csvtid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Csvtid { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("systemuse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Systemuse { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("content", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Content { get; set; } 

        [JsonProperty("default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CabHeader
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("all_must_approve", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? All_must_approve { get; set; } 

        [JsonProperty("approvals_needed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approvals_needed { get; set; } 

        [JsonProperty("rejection_threshold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rejection_threshold { get; set; } 

        [JsonProperty("members", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CabMember>? Members { get; set; } 

        [JsonProperty("ldapstring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ldapstring { get; set; } 

        [JsonProperty("roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CabRole>? Roles { get; set; } 

        [JsonProperty("teams_webhook_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teams_webhook_url { get; set; } 

        [JsonProperty("slack_channel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Slack_channel { get; set; } 

        [JsonProperty("slack_channel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Slack_channel_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CabMember
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cab_id { get; set; } 

        [JsonProperty("cab_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Cab_guid { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("member_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Member_name { get; set; } 

        [JsonProperty("emailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress { get; set; } 

        [JsonProperty("is_mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_mandatory { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CabRole
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cab_id { get; set; } 

        [JsonProperty("cab_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Cab_guid { get; set; } 

        [JsonProperty("mandatory_approvers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mandatory_approvers { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("mandatory_rejecters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mandatory_rejecters { get; set; } 

        [JsonProperty("mandatory_voters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mandatory_voters { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CallLog
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("timetaken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Timetaken { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("client_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Area? Client_details { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("site_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Site? Site_details { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("user_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Users? User_details { get; set; } 

        [JsonProperty("callerid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Callerid { get; set; } 

        [JsonProperty("diallednumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Diallednumber { get; set; } 

        [JsonProperty("caller_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Caller_name { get; set; } 

        [JsonProperty("caller_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Caller_email { get; set; } 

        [JsonProperty("user_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_number { get; set; } 

        [JsonProperty("caller_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Caller_address { get; set; } 

        [JsonProperty("outcome_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("action_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action_number { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("call_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Call_status { get; set; } 

        [JsonProperty("_complete", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _complete { get; set; } 

        [JsonProperty("_canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("start_date_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Start_date_note { get; set; } 

        [JsonProperty("form_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Form_id { get; set; } 

        [JsonProperty("update_user_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_user_number { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("displayname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Displayname { get; set; } 

        [JsonProperty("existingticketid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Existingticketid { get; set; } 

        [JsonProperty("call_direction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Call_direction { get; set; } 

        [JsonProperty("call_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Call_type { get; set; } 

        [JsonProperty("call_transcript", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Call_transcript { get; set; } 

        [JsonProperty("calllog_attachment_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Calllog_attachment_count { get; set; } 

        [JsonProperty("transferred_agentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Transferred_agentid { get; set; } 

        [JsonProperty("transferred_teamid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Transferred_teamid { get; set; } 

        [JsonProperty("call_category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Call_category { get; set; } 

        [JsonProperty("transferred_team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Transferred_team_name { get; set; } 

        [JsonProperty("category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category1 { get; set; } 

        [JsonProperty("category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category2 { get; set; } 

        [JsonProperty("category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category3 { get; set; } 

        [JsonProperty("category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category4 { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CannedText
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Html { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restriction_type { get; set; } 

        [JsonProperty("department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Department_id { get; set; } 

        [JsonProperty("department_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Department_guid { get; set; } 

        [JsonProperty("department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Department_name { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Team_id { get; set; } 

        [JsonProperty("team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Team_guid { get; set; } 

        [JsonProperty("team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_name { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("_canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tag>? Tags { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CategoryDetail
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("category_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_name { get; set; } 

        [JsonProperty("type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type_id { get; set; } 

        [JsonProperty("sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_id { get; set; } 

        [JsonProperty("priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority_id { get; set; } 

        [JsonProperty("chargerate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate { get; set; } 

        [JsonProperty("category_group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Category_group_id { get; set; } 

        [JsonProperty("_isnew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isnew { get; set; } 

        [JsonProperty("include_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Include_note { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("user_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_note { get; set; } 

        [JsonProperty("itilrequesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itilrequesttype { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("is_integration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_integration { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CategoryRestriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Team_id { get; set; } 

        [JsonProperty("team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Team_guid { get; set; } 

        [JsonProperty("service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_id { get; set; } 

        [JsonProperty("category_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Category_id { get; set; } 

        [JsonProperty("category_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Category_guid { get; set; } 

        [JsonProperty("category_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_value { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("partial_match_category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partial_match_category { get; set; } 

        [JsonProperty("category_name_partial", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_name_partial { get; set; } 

        [JsonProperty("is_integration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_integration { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Certificate
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("issuer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Issuer { get; set; } 

        [JsonProperty("thumbprint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thumbprint { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Attachment_id { get; set; } 

        [JsonProperty("attachment_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Attachment_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ChangeType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChargeRate
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("area", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Area { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("charge_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Charge_id { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("expirydate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Expirydate { get; set; } 

        [JsonProperty("rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Rate { get; set; } 

        [JsonProperty("org", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Org { get; set; } 

        [JsonProperty("minimum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Minimum { get; set; } 

        [JsonProperty("increment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Increment { get; set; } 

        [JsonProperty("oohmultiplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Oohmultiplier { get; set; } 

        [JsonProperty("holidaymultiplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Holidaymultiplier { get; set; } 

        [JsonProperty("weekendmultiplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Weekendmultiplier { get; set; } 

        [JsonProperty("surcharge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Surcharge { get; set; } 

        [JsonProperty("round", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Round { get; set; } 

        [JsonProperty("useagentworkinghours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Useagentworkinghours { get; set; } 

        [JsonProperty("use_budget_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_budget_rate { get; set; } 

        [JsonProperty("current", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Current { get; set; } 

        [JsonProperty("current_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Current_rate { get; set; } 

        [JsonProperty("use_for_travel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_for_travel { get; set; } 

        [JsonProperty("use_for_mileage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_for_mileage { get; set; } 

        [JsonProperty("travel_surchargeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Travel_surchargeid { get; set; } 

        [JsonProperty("contractmultiplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contractmultiplier { get; set; } 

        [JsonProperty("rateoverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Rateoverride { get; set; } 

        [JsonProperty("override_surcharge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Override_surcharge { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChargeRateArea
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("area", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Area { get; set; } 

        [JsonProperty("chargerate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChatFlowProcess
    {
        [JsonProperty("chat_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chat_id { get; set; } 

        [JsonProperty("chat_profile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chat_profile_id { get; set; } 

        [JsonProperty("flow_step", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flow_step { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChatInputField
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("lookup_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Lookup_values { get; set; } 

        [JsonProperty("input_suggestions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChatInputSuggestion_UI>? Input_suggestions { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChatInputSuggestion
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("flowdetail_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flowdetail_id { get; set; } 

        [JsonProperty("suggestion_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Suggestion_text { get; set; } 

        [JsonProperty("message_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message_text { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChatInputSuggestion_UI
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("suggestion_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Suggestion_text { get; set; } 

        [JsonProperty("message_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message_text { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChatPopupMessage
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("chat_profile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chat_profile_id { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChatProfile
    {
        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key { get; set; } 

        [JsonProperty("access_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_type { get; set; } 

        [JsonProperty("chatnameoverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chatnameoverride { get; set; } 

        [JsonProperty("greeting", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Greeting { get; set; } 

        [JsonProperty("bot_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bot_name { get; set; } 

        [JsonProperty("technamevisibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technamevisibility { get; set; } 

        [JsonProperty("technamevisibilitytext", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technamevisibilitytext { get; set; } 

        [JsonProperty("techmustonline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Techmustonline { get; set; } 

        [JsonProperty("workdays_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workdays_id { get; set; } 

        [JsonProperty("workdays_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workdays_name { get; set; } 

        [JsonProperty("logticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Logticket { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_name { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("icon_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Icon_size { get; set; } 

        [JsonProperty("colour_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Colour_type { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("theme", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Theme { get; set; } 

        [JsonProperty("enable_feedback", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_feedback { get; set; } 

        [JsonProperty("feedback_message_before", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Feedback_message_before { get; set; } 

        [JsonProperty("feedback_message_after", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Feedback_message_after { get; set; } 

        [JsonProperty("cors_whitelist_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Cors_whitelist_list { get; set; } 

        [JsonProperty("steps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FlowDetail>? Steps { get; set; } 

        [JsonProperty("flow_chart_json", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Flow_chart_json { get; set; } 

        [JsonProperty("in_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? In_use { get; set; } 

        [JsonProperty("_chat_available", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _chat_available { get; set; } 

        [JsonProperty("_chat_mode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _chat_mode { get; set; } 

        [JsonProperty("_chatserviceurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _chatserviceurl { get; set; } 

        [JsonProperty("_tenantid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _tenantid { get; set; } 

        [JsonProperty("bubble_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bubble_type { get; set; } 

        [JsonProperty("message_box_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Message_box_size { get; set; } 

        [JsonProperty("use_bubble_popup_message_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_bubble_popup_message_mappings { get; set; } 

        [JsonProperty("popup_message_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChatPopupMessage>? Popup_message_mappings { get; set; } 

        [JsonProperty("default_ticket_clientsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_ticket_clientsite { get; set; } 

        [JsonProperty("default_ticket_clientsite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_ticket_clientsite_name { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("email_storage_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_storage_key { get; set; } 

        [JsonProperty("name_storage_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name_storage_key { get; set; } 

        [JsonProperty("fullscreen_threshold_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fullscreen_threshold_override { get; set; } 

        [JsonProperty("bot_width_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bot_width_override { get; set; } 

        [JsonProperty("bot_height_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bot_height_override { get; set; } 

        [JsonProperty("bot_height_units", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bot_height_units { get; set; } 

        [JsonProperty("textcolour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Textcolour { get; set; } 

        [JsonProperty("textcolour_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Textcolour_type { get; set; } 

        [JsonProperty("agent_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<NHD_Roles>? Agent_roles { get; set; } 

        [JsonProperty("enable_start_message_mapping", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_start_message_mapping { get; set; } 

        [JsonProperty("new_chat_window_controls", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_chat_window_controls { get; set; } 

        [JsonProperty("abandoned_live_chat_check_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Abandoned_live_chat_check_period { get; set; } 

        [JsonProperty("start_message_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChatStartMessage>? Start_message_mappings { get; set; } 

        [JsonProperty("default_wait_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Default_wait_time { get; set; } 

        [JsonProperty("wait_time_calc_mins", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Wait_time_calc_mins { get; set; } 

        [JsonProperty("anon_token_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Anon_token_method { get; set; } 

        [JsonProperty("enable_user_matching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_user_matching { get; set; } 

        [JsonProperty("new_hmac_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_hmac_secret { get; set; } 

        [JsonProperty("validate_lifetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Validate_lifetime { get; set; } 

        [JsonProperty("use_subject_matching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_subject_matching { get; set; } 

        [JsonProperty("new_user_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_user_site_id { get; set; } 

        [JsonProperty("new_user_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_user_site_name { get; set; } 

        [JsonProperty("usermappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Usermappings { get; set; } 

        [JsonProperty("enable_feedback_comments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_feedback_comments { get; set; } 

        [JsonProperty("feedback_message_before_comments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Feedback_message_before_comments { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChatStartMessage
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("chat_profile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chat_profile_id { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("flowstep_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flowstep_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChatStepQuestion
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("flowdetail_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flowdetail_id { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("question", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Question { get; set; } 

        [JsonProperty("answer_field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Answer_field_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ChildRequestType
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("child_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_tickettype_id { get; set; } 

        [JsonProperty("child_tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Child_tickettype_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Company
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("toplevel_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel_id { get; set; } 

        [JsonProperty("toplevel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Toplevel_name { get; set; } 

        [JsonProperty("contact_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contact_name { get; set; } 

        [JsonProperty("email_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_address { get; set; } 

        [JsonProperty("support_email_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Support_email_address { get; set; } 

        [JsonProperty("phone_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone_number { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("emailtemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailtemplate_id { get; set; } 

        [JsonProperty("default_contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_contract_id { get; set; } 

        [JsonProperty("default_contract_sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_contract_sla_id { get; set; } 

        [JsonProperty("thirdpartynhdapiurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartynhdapiurl { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("contract_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_count { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("phone_number_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone_number_2 { get; set; } 

        [JsonProperty("phone_number_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone_number_3 { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address { get; set; } 

        [JsonProperty("switchslatosupplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Switchslatosupplier { get; set; } 

        [JsonProperty("emailoverduefixby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailoverduefixby { get; set; } 

        [JsonProperty("emailoverdueresponse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailoverdueresponse { get; set; } 

        [JsonProperty("webserviceurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webserviceurl { get; set; } 

        [JsonProperty("emailtemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailtemplate_name { get; set; } 

        [JsonProperty("accounts_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accounts_id { get; set; } 

        [JsonProperty("portal_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_url { get; set; } 

        [JsonProperty("portal_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_ref { get; set; } 

        [JsonProperty("portal_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_username { get; set; } 

        [JsonProperty("portal_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_password { get; set; } 

        [JsonProperty("contact_title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contact_title { get; set; } 

        [JsonProperty("fax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fax { get; set; } 

        [JsonProperty("email_start_tag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_start_tag { get; set; } 

        [JsonProperty("email_end_tag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_end_tag { get; set; } 

        [JsonProperty("usesnhd", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Usesnhd { get; set; } 

        [JsonProperty("nhdurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nhdurl { get; set; } 

        [JsonProperty("nhdemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nhdemailaddress { get; set; } 

        [JsonProperty("nhdpassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nhdpassword { get; set; } 

        [JsonProperty("parentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parentid { get; set; } 

        [JsonProperty("emaildomain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emaildomain { get; set; } 

        [JsonProperty("users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users_List>? Users { get; set; } 

        [JsonProperty("allow_api_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_api_access { get; set; } 

        [JsonProperty("api_access_clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Api_access_clientid { get; set; } 

        [JsonProperty("api_access_clientsecret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Api_access_clientsecret { get; set; } 

        [JsonProperty("thirdpartynhdauthurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartynhdauthurl { get; set; } 

        [JsonProperty("thirdpartynhdtenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartynhdtenant { get; set; } 

        [JsonProperty("thirdpartynhdapiclientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartynhdapiclientid { get; set; } 

        [JsonProperty("new_thirdpartynhdapiclientsecret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_thirdpartynhdapiclientsecret { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("kashflowid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflowid { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("kashflow_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflow_tenant_id { get; set; } 

        [JsonProperty("kashflow_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kashflow_tenant_name { get; set; } 

        [JsonProperty("xero_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_id { get; set; } 

        [JsonProperty("xero_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_name { get; set; } 

        [JsonProperty("xero_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_id { get; set; } 

        [JsonProperty("is_xero_archived", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_xero_archived { get; set; } 

        [JsonProperty("qbo_company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("issupplierdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Issupplierdetails { get; set; } 

        [JsonProperty("jira_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_url { get; set; } 

        [JsonProperty("jira_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_username { get; set; } 

        [JsonProperty("new_jirakey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_jirakey { get; set; } 

        [JsonProperty("test_jira", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Test_jira { get; set; } 

        [JsonProperty("jira_servicedesk_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_servicedesk_id { get; set; } 

        [JsonProperty("jira_servicedesk_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_servicedesk_name { get; set; } 

        [JsonProperty("jira_servicedesk", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Jira_servicedesk { get; set; } 

        [JsonProperty("jira_requesttype_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Jira_requesttype_mappings { get; set; } 

        [JsonProperty("jira_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_user_id { get; set; } 

        [JsonProperty("jira_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_user_name { get; set; } 

        [JsonProperty("jira_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Jira_user { get; set; } 

        [JsonProperty("jira_priority_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Jira_priority_mappings { get; set; } 

        [JsonProperty("jira_status_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Jira_status_mappings { get; set; } 

        [JsonProperty("create_jira_webhook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_jira_webhook { get; set; } 

        [JsonProperty("jira_webhook_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Jira_webhook_created { get; set; } 

        [JsonProperty("synced_to_intacct", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Synced_to_intacct { get; set; } 

        [JsonProperty("intacct_location_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_location_id { get; set; } 

        [JsonProperty("intacct_location_id_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Intacct_location_id_list { get; set; } 

        [JsonProperty("intacct_location_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_location_type { get; set; } 

        [JsonProperty("intacct_save_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_save_location { get; set; } 

        [JsonProperty("default_currency_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_currency_code_name { get; set; } 

        [JsonProperty("ignore_from_accounting_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignore_from_accounting_sync { get; set; } 

        [JsonProperty("intacct_default_save_loc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_default_save_loc { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("new_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_icon { get; set; } 

        [JsonProperty("servicenow_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_url { get; set; } 

        [JsonProperty("servicenow_locale", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_locale { get; set; } 

        [JsonProperty("servicenow_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_username { get; set; } 

        [JsonProperty("new_servicenowkey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_servicenowkey { get; set; } 

        [JsonProperty("servicenow_priority_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_priority_mappings { get; set; } 

        [JsonProperty("servicenow_status_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_status_mappings { get; set; } 

        [JsonProperty("servicenow_impact_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_impact_mappings { get; set; } 

        [JsonProperty("servicenow_urgency_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_urgency_mappings { get; set; } 

        [JsonProperty("servicenow_category_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_category_mappings { get; set; } 

        [JsonProperty("servicenow_assignment_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_assignment_group { get; set; } 

        [JsonProperty("servicenow_assignment_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_assignment_group_name { get; set; } 

        [JsonProperty("servicenow_assignmentgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Servicenow_assignmentgroup { get; set; } 

        [JsonProperty("servicenow_defaultuser_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_defaultuser_id { get; set; } 

        [JsonProperty("servicenow_defaultuser_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_defaultuser_name { get; set; } 

        [JsonProperty("servicenow_defaultuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Servicenow_defaultuser { get; set; } 

        [JsonProperty("test_servicenow", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Test_servicenow { get; set; } 

        [JsonProperty("myob_tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Myob_tenant { get; set; } 

        [JsonProperty("myob_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Myob_tenant_name { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("purchase_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchase_tax_code { get; set; } 

        [JsonProperty("purchase_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_tax_code_name { get; set; } 

        [JsonProperty("sync_servicenow_attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sync_servicenow_attachments { get; set; } 

        [JsonProperty("last_modified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_modified { get; set; } 

        [JsonProperty("servicenow_team_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_team_mappings { get; set; } 

        [JsonProperty("servicenow_ticket_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_ticket_sync { get; set; } 

        [JsonProperty("servicenow_ticket_sync_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Servicenow_ticket_sync_list { get; set; } 

        [JsonProperty("servicenow_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Servicenow_fieldmappings { get; set; } 

        [JsonProperty("jira_webhook_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Jira_webhook_user { get; set; } 

        [JsonProperty("jira_webhook_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_webhook_username { get; set; } 

        [JsonProperty("supplier_invoice_due_date_extra_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_invoice_due_date_extra_days { get; set; } 

        [JsonProperty("is_supplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_supplier { get; set; } 

        [JsonProperty("is_manufacturer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_manufacturer { get; set; } 

        [JsonProperty("servicenow_authtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicenow_authtype { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logo { get; set; } 

        [JsonProperty("qbo_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_id { get; set; } 

        [JsonProperty("jira_validated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Jira_validated { get; set; } 

        [JsonProperty("default_currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_currency_code { get; set; } 

        [JsonProperty("supplier_mailbox_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_mailbox_override { get; set; } 

        [JsonProperty("supplier_mailbox_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_mailbox_address { get; set; } 

        [JsonProperty("servicenow_validated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Servicenow_validated { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("website", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Website { get; set; } 

        [JsonProperty("mobile", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mobile { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ConfigCommit
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("source_instance_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Source_instance_id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("object_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Object_guid { get; set; } 

        [JsonProperty("operation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Operation { get; set; } 

        [JsonProperty("payload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Payload { get; set; } 

        [JsonProperty("rollback_operation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Rollback_operation { get; set; } 

        [JsonProperty("rollback_payload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Rollback_payload { get; set; } 

        [JsonProperty("rolled_back", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Rolled_back { get; set; } 

        [JsonProperty("rolled_back_timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Rolled_back_timestamp { get; set; } 

        [JsonProperty("rolled_back_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rolled_back_agent_id { get; set; } 

        [JsonProperty("is_merge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_merge { get; set; } 

        [JsonProperty("original_json", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Original_json { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_rollback", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _rollback { get; set; } 

        [JsonProperty("_push_to_instance_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _push_to_instance_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ConfirmClosure
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key { get; set; } 

        [JsonProperty("result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Result { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("comment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Comment { get; set; } 

        [JsonProperty("user_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_message { get; set; } 

        [JsonProperty("withfeedback", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Withfeedback { get; set; } 

        [JsonProperty("feedbackhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Feedbackhtml { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ConfluenceDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("newmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newmethod { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("faq_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Faq_links { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ConfluenceWebhookEndpoint
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("events", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Events { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Filters { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("self", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Self { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ConnectedInstance
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("apiurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Apiurl { get; set; } 

        [JsonProperty("authurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Authurl { get; set; } 

        [JsonProperty("tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant { get; set; } 

        [JsonProperty("clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clientid { get; set; } 

        [JsonProperty("new_clientsecret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_clientsecret { get; set; } 

        [JsonProperty("_test", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _test { get; set; } 

        [JsonProperty("_test_ok", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _test_ok { get; set; } 

        [JsonProperty("_test_result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? _test_result { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ConsignmentDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("consignment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Consignment_id { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_id { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("salesorder_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_line { get; set; } 

        [JsonProperty("stocklocation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stocklocation_id { get; set; } 

        [JsonProperty("costprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costprice { get; set; } 

        [JsonProperty("price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Price { get; set; } 

        [JsonProperty("itemstock_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itemstock_id { get; set; } 

        [JsonProperty("item_assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_assettype_id { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("stockadjustedamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Stockadjustedamount { get; set; } 

        [JsonProperty("serialised_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Serialised_assets { get; set; } 

        [JsonProperty("stockbin_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stockbin_id { get; set; } 

        [JsonProperty("serialise_only_one", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Serialise_only_one { get; set; } 

        [JsonProperty("is_return", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_return { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("item_internalreference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_internalreference { get; set; } 

        [JsonProperty("item_externalreference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_externalreference { get; set; } 

        [JsonProperty("item_supplier_part_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_supplier_part_code { get; set; } 

        [JsonProperty("item_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_description { get; set; } 

        [JsonProperty("item_purchase_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_purchase_description { get; set; } 

        [JsonProperty("item_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_location { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ConsignmentHeader
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ConsignmentDetail>? Lines { get; set; } 

        [JsonProperty("assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Assets { get; set; } 

        [JsonProperty("_print_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_generate { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("printhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printhtml { get; set; } 

        [JsonProperty("pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_attachment_id { get; set; } 

        [JsonProperty("stockbin_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stockbin_id { get; set; } 

        [JsonProperty("assettomoveback", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettomoveback { get; set; } 

        [JsonProperty("ignoreserialisation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignoreserialisation { get; set; } 

        [JsonProperty("is_return", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_return { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Contactgroup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("ownerunum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ownerunum { get; set; } 

        [JsonProperty("allowall", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall { get; set; } 

        [JsonProperty("allowalledit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowalledit { get; set; } 

        [JsonProperty("contactgroupcontacts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Contactgroupcontacts>? Contactgroupcontacts { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Contactgroupcontacts
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ccgid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ccgid { get; set; } 

        [JsonProperty("cuid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cuid { get; set; } 

        [JsonProperty("cunum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cunum { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("emailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress { get; set; } 

        [JsonProperty("contacttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contacttype { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContentDisposition
    {
        [JsonProperty("disposition", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Disposition { get; set; } 

        [JsonProperty("isAttachment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsAttachment { get; set; } 

        [JsonProperty("parameters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Parameter>? Parameters { get; set; } 

        [JsonProperty("fileName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? FileName { get; set; } 

        [JsonProperty("creationDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreationDate { get; set; } 

        [JsonProperty("modificationDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? ModificationDate { get; set; } 

        [JsonProperty("readDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? ReadDate { get; set; } 

        [JsonProperty("size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Size { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContentType
    {
        [JsonProperty("mediaType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MediaType { get; set; } 

        [JsonProperty("mediaSubtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MediaSubtype { get; set; } 

        [JsonProperty("parameters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Parameter>? Parameters { get; set; } 

        [JsonProperty("boundary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Boundary { get; set; } 

        [JsonProperty("charset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Charset { get; set; } 

        [JsonProperty("charsetEncoding", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Encoding? CharsetEncoding { get; set; } 

        [JsonProperty("format", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Format { get; set; } 

        [JsonProperty("mimeType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MimeType { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Contract
    {
        [JsonProperty("started", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Started { get; set; } 

        [JsonProperty("expired", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Expired { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ref { get; set; } 

        [JsonProperty("contract_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_description { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("contact_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contact_1 { get; set; } 

        [JsonProperty("contact_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contact_2 { get; set; } 

        [JsonProperty("contact_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contact_3 { get; set; } 

        [JsonProperty("sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_id { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("dontsendalarm", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsendalarm { get; set; } 

        [JsonProperty("costing_information", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Costing_information { get; set; } 

        [JsonProperty("is_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_default { get; set; } 

        [JsonProperty("assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Assets { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("sla_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sla_name { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("iscontractdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iscontractdetails { get; set; } 

        [JsonProperty("contracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractHeaderContract>? Contracts { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("configuration_items", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Configuration_items { get; set; } 

        [JsonProperty("add_configuration_items", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Add_configuration_items { get; set; } 

        [JsonProperty("renewedfrom_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Renewedfrom_id { get; set; } 

        [JsonProperty("renewedfrom_id_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Renewedfrom_id_ref { get; set; } 

        [JsonProperty("renewedby_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Renewedby_id { get; set; } 

        [JsonProperty("renewedby_id_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Renewedby_id_ref { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractApproval
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token { get; set; } 

        [JsonProperty("result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Result { get; set; } 

        [JsonProperty("approvername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvername { get; set; } 

        [JsonProperty("approveremailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approveremailaddress { get; set; } 

        [JsonProperty("signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Signature { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractDetail
    {
        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("itil_requesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itil_requesttype { get; set; } 

        [JsonProperty("requesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requesttype { get; set; } 

        [JsonProperty("requesttype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requesttype_name { get; set; } 

        [JsonProperty("priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority { get; set; } 

        [JsonProperty("chargerate_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate_type { get; set; } 

        [JsonProperty("chargerate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate_id { get; set; } 

        [JsonProperty("chargerate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chargerate_name { get; set; } 

        [JsonProperty("multiplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Multiplier { get; set; } 

        [JsonProperty("plan_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Plan_id { get; set; } 

        [JsonProperty("plan_contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Plan_contract_id { get; set; } 

        [JsonProperty("plan_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Plan_name { get; set; } 

        [JsonProperty("category_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_1 { get; set; } 

        [JsonProperty("partialmatchcategory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partialmatchcategory { get; set; } 

        [JsonProperty("category_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_2 { get; set; } 

        [JsonProperty("partialmatchcategory2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partialmatchcategory2 { get; set; } 

        [JsonProperty("category_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_3 { get; set; } 

        [JsonProperty("partialmatchcategory3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partialmatchcategory3 { get; set; } 

        [JsonProperty("category_4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_4 { get; set; } 

        [JsonProperty("partialmatchcategory4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partialmatchcategory4 { get; set; } 

        [JsonProperty("user_covered_billingdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_covered_billingdescription { get; set; } 

        [JsonProperty("site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("allowallcontracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowallcontracts { get; set; } 

        [JsonProperty("asset_covered_by_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Asset_covered_by_contract { get; set; } 

        [JsonProperty("user_covered_by_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? User_covered_by_contract { get; set; } 

        [JsonProperty("work_hours_covered", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Work_hours_covered { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order { get; set; } 

        [JsonProperty("billing_plan_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billing_plan_desc { get; set; } 

        [JsonProperty("contract_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_type { get; set; } 

        [JsonProperty("contract_sub_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_sub_type { get; set; } 

        [JsonProperty("not_included_in_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Not_included_in_contract { get; set; } 

        [JsonProperty("contract_header_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Contract_header_end_date { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractHeader
    {
        [JsonProperty("contract_contact_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_contact_id { get; set; } 

        [JsonProperty("item_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_desc { get; set; } 

        [JsonProperty("main_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Main_site { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ref { get; set; } 

        [JsonProperty("refextra", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Refextra { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("started", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Started { get; set; } 

        [JsonProperty("expired", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Expired { get; set; } 

        [JsonProperty("numberofunitsfree", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Numberofunitsfree { get; set; } 

        [JsonProperty("billingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingperiod { get; set; } 

        [JsonProperty("billingdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingdescription { get; set; } 

        [JsonProperty("subtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Subtype { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_id { get; set; } 

        [JsonProperty("periodicinvoicenextdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Periodicinvoicenextdate { get; set; } 

        [JsonProperty("next_invoice_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Next_invoice_date { get; set; } 

        [JsonProperty("periodchargeamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Periodchargeamount { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("asset_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Asset_value { get; set; } 

        [JsonProperty("refextra2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Refextra2 { get; set; } 

        [JsonProperty("contract_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_status { get; set; } 

        [JsonProperty("asset_sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_sequence { get; set; } 

        [JsonProperty("next_call_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Next_call_date { get; set; } 

        [JsonProperty("accounts_override_mailbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Accounts_override_mailbox { get; set; } 

        [JsonProperty("sla_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sla_name { get; set; } 

        [JsonProperty("startbalance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Startbalance { get; set; } 

        [JsonProperty("paymentscheme", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Paymentscheme { get; set; } 

        [JsonProperty("chargehoursperperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Chargehoursperperiod { get; set; } 

        [JsonProperty("chargerollover", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Chargerollover { get; set; } 

        [JsonProperty("outofhoursmultiplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Outofhoursmultiplier { get; set; } 

        [JsonProperty("requestminimum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Requestminimum { get; set; } 

        [JsonProperty("invoiceminimum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Invoiceminimum { get; set; } 

        [JsonProperty("allowfixedprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowfixedprice { get; set; } 

        [JsonProperty("allowpyg", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowpyg { get; set; } 

        [JsonProperty("allowprepay", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowprepay { get; set; } 

        [JsonProperty("chargeperdevice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Chargeperdevice { get; set; } 

        [JsonProperty("prepayrecurringcharge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringcharge { get; set; } 

        [JsonProperty("chargeprepaytravel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Chargeprepaytravel { get; set; } 

        [JsonProperty("chargeprepaymileage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Chargeprepaymileage { get; set; } 

        [JsonProperty("chargepygtravel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Chargepygtravel { get; set; } 

        [JsonProperty("chargepygmileage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Chargepygmileage { get; set; } 

        [JsonProperty("onlybillatendofperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Onlybillatendofperiod { get; set; } 

        [JsonProperty("unmatchedcombinations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unmatchedcombinations { get; set; } 

        [JsonProperty("termmonths", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Termmonths { get; set; } 

        [JsonProperty("percentageincrease", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percentageincrease { get; set; } 

        [JsonProperty("nextincrementdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextincrementdate { get; set; } 

        [JsonProperty("datereceived", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datereceived { get; set; } 

        [JsonProperty("invoicedescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoicedescription { get; set; } 

        [JsonProperty("datesent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datesent { get; set; } 

        [JsonProperty("paymentmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Paymentmethod { get; set; } 

        [JsonProperty("dontsendalarm", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsendalarm { get; set; } 

        [JsonProperty("createdfrom_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Createdfrom_id { get; set; } 

        [JsonProperty("costperperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costperperiod { get; set; } 

        [JsonProperty("rollingcontract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Rollingcontract { get; set; } 

        [JsonProperty("previouscontract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Previouscontract { get; set; } 

        [JsonProperty("dontinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontinvoice { get; set; } 

        [JsonProperty("ohid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ohid { get; set; } 

        [JsonProperty("emailaddresses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddresses { get; set; } 

        [JsonProperty("scheduleemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Scheduleemails { get; set; } 

        [JsonProperty("schedulesendaccountmanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Schedulesendaccountmanager { get; set; } 

        [JsonProperty("accountsdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsdesc { get; set; } 

        [JsonProperty("hasactions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hasactions { get; set; } 

        [JsonProperty("billingperiods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingperiods { get; set; } 

        [JsonProperty("assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Assets { get; set; } 

        [JsonProperty("users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users_List>? Users { get; set; } 

        [JsonProperty("periods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractPeriod>? Periods { get; set; } 

        [JsonProperty("surchargeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Surchargeid { get; set; } 

        [JsonProperty("chargerate_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate_method { get; set; } 

        [JsonProperty("overriding_rates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChargeRate>? Overriding_rates { get; set; } 

        [JsonProperty("chargerates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Lookup>? Chargerates { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_ignore_mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _ignore_mandatory { get; set; } 

        [JsonProperty("billing_description_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billing_description_string { get; set; } 

        [JsonProperty("billing_period_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billing_period_string { get; set; } 

        [JsonProperty("dontchargeforitems", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontchargeforitems { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("_print_preview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_preview { get; set; } 

        [JsonProperty("_print_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_generate { get; set; } 

        [JsonProperty("printhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printhtml { get; set; } 

        [JsonProperty("pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_attachment_id { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("pdftemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdftemplate_name { get; set; } 

        [JsonProperty("schedule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractSchedule>? Schedule { get; set; } 

        [JsonProperty("scheduleplan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractSchedulePlan>? Scheduleplan { get; set; } 

        [JsonProperty("_send_outstanding_emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _send_outstanding_emails { get; set; } 

        [JsonProperty("_send_appointment_invites", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _send_appointment_invites { get; set; } 

        [JsonProperty("autotaskid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autotaskid { get; set; } 

        [JsonProperty("import_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_user { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("salesorder_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_line_id { get; set; } 

        [JsonProperty("endtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Endtype { get; set; } 

        [JsonProperty("new_invoice_start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? New_invoice_start_date { get; set; } 

        [JsonProperty("new_invoice_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? New_invoice_end_date { get; set; } 

        [JsonProperty("chargeratemultiplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Chargeratemultiplier { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("contract_prepaytotal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contract_prepaytotal { get; set; } 

        [JsonProperty("contract_prepayused", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contract_prepayused { get; set; } 

        [JsonProperty("contract_prepaybalance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contract_prepaybalance { get; set; } 

        [JsonProperty("contract_prepayhistory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PrepayHistory>? Contract_prepayhistory { get; set; } 

        [JsonProperty("contract_periods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PrepayPeriod>? Contract_periods { get; set; } 

        [JsonProperty("contract_prepayasamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Contract_prepayasamount { get; set; } 

        [JsonProperty("prepay_periods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PrepayPeriod>? Prepay_periods { get; set; } 

        [JsonProperty("prepayrecurringchargenextdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Prepayrecurringchargenextdate { get; set; } 

        [JsonProperty("prepayrecurringhours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringhours { get; set; } 

        [JsonProperty("billforrecurringprepayamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Billforrecurringprepayamount { get; set; } 

        [JsonProperty("prepayrecurringminimumdeduction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringminimumdeduction { get; set; } 

        [JsonProperty("prepayrecurringminimumdeductiononlyactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prepayrecurringminimumdeductiononlyactive { get; set; } 

        [JsonProperty("prepayrecurringautomaticdeduction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringautomaticdeduction { get; set; } 

        [JsonProperty("iscontractdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iscontractdetails { get; set; } 

        [JsonProperty("labournominalcodeoverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Labournominalcodeoverride { get; set; } 

        [JsonProperty("labournominalcodeoverride_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Labournominalcodeoverride_name { get; set; } 

        [JsonProperty("prepayrecurringexpirymonths", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepayrecurringexpirymonths { get; set; } 

        [JsonProperty("contracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractHeaderContract>? Contracts { get; set; } 

        [JsonProperty("sites", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Site_List>? Sites { get; set; } 

        [JsonProperty("emailaddress_to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress_to { get; set; } 

        [JsonProperty("emailaddress_cc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress_cc { get; set; } 

        [JsonProperty("use_cost_calculation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_cost_calculation { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment_List>? Attachments { get; set; } 

        [JsonProperty("billingplans", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractDetail>? Billingplans { get; set; } 

        [JsonProperty("send_to_oracle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Send_to_oracle { get; set; } 

        [JsonProperty("oracle_invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Oracle_invoice_id { get; set; } 

        [JsonProperty("datesent_to_oracle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datesent_to_oracle { get; set; } 

        [JsonProperty("prepay_itemid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepay_itemid { get; set; } 

        [JsonProperty("prepay_itemname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Prepay_itemname { get; set; } 

        [JsonProperty("created_from_order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Created_from_order { get; set; } 

        [JsonProperty("autotopupthreshhold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopupthreshhold { get; set; } 

        [JsonProperty("autotopuptoamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopuptoamount { get; set; } 

        [JsonProperty("autotopupcostperhour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopupcostperhour { get; set; } 

        [JsonProperty("autotopupbyamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopupbyamount { get; set; } 

        [JsonProperty("extratabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tabname>? Extratabs { get; set; } 

        [JsonProperty("approvername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvername { get; set; } 

        [JsonProperty("approveremailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approveremailaddress { get; set; } 

        [JsonProperty("signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Signature { get; set; } 

        [JsonProperty("can_approve", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_approve { get; set; } 

        [JsonProperty("portal_display_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Portal_display_type { get; set; } 

        [JsonProperty("contractapprovalfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Contractapprovalfields { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Table { get; set; } 

        [JsonProperty("last_modified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_modified { get; set; } 

        [JsonProperty("asset_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Asset_end_date { get; set; } 

        [JsonProperty("contracttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contracttype { get; set; } 

        [JsonProperty("contracttype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contracttype_name { get; set; } 

        [JsonProperty("prepayrecurringchargebp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepayrecurringchargebp { get; set; } 

        [JsonProperty("force_recalculation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_recalculation { get; set; } 

        [JsonProperty("cost_calculation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cost_calculation { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("sent_to_oracle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sent_to_oracle { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("createdby_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Createdby_id { get; set; } 

        [JsonProperty("createdby_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Createdby_name { get; set; } 

        [JsonProperty("billingcategory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingcategory { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractHeaderContract
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("supplier_contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_contract_id { get; set; } 

        [JsonProperty("contractref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contractref { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractHeader_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ref { get; set; } 

        [JsonProperty("refextra", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Refextra { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("started", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Started { get; set; } 

        [JsonProperty("expired", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Expired { get; set; } 

        [JsonProperty("numberofunitsfree", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Numberofunitsfree { get; set; } 

        [JsonProperty("billingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingperiod { get; set; } 

        [JsonProperty("billingdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingdescription { get; set; } 

        [JsonProperty("subtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Subtype { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_id { get; set; } 

        [JsonProperty("periodicinvoicenextdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Periodicinvoicenextdate { get; set; } 

        [JsonProperty("next_invoice_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Next_invoice_date { get; set; } 

        [JsonProperty("periodchargeamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Periodchargeamount { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("asset_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Asset_value { get; set; } 

        [JsonProperty("refextra2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Refextra2 { get; set; } 

        [JsonProperty("contract_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_status { get; set; } 

        [JsonProperty("asset_sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_sequence { get; set; } 

        [JsonProperty("next_call_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Next_call_date { get; set; } 

        [JsonProperty("accounts_override_mailbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Accounts_override_mailbox { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Table { get; set; } 

        [JsonProperty("last_modified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_modified { get; set; } 

        [JsonProperty("asset_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Asset_end_date { get; set; } 

        [JsonProperty("contracttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contracttype { get; set; } 

        [JsonProperty("contracttype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contracttype_name { get; set; } 

        [JsonProperty("prepayrecurringchargebp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepayrecurringchargebp { get; set; } 

        [JsonProperty("force_recalculation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_recalculation { get; set; } 

        [JsonProperty("cost_calculation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cost_calculation { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("sent_to_oracle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sent_to_oracle { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("createdby_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Createdby_id { get; set; } 

        [JsonProperty("createdby_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Createdby_name { get; set; } 

        [JsonProperty("billingcategory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingcategory { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractPeriod
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("start_date_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date_display { get; set; } 

        [JsonProperty("end_date_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date_display { get; set; } 

        [JsonProperty("current", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Current { get; set; } 

        [JsonProperty("hours_in_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours_in_period { get; set; } 

        [JsonProperty("hours_used", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours_used { get; set; } 

        [JsonProperty("hours_remaining", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours_remaining { get; set; } 

        [JsonProperty("hours_charged", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours_charged { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractRule
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("user_under_client", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? User_under_client { get; set; } 

        [JsonProperty("outcome_contract_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome_contract_type { get; set; } 

        [JsonProperty("outcome_contract_subtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome_contract_subtype { get; set; } 

        [JsonProperty("outcome_covered", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Outcome_covered { get; set; } 

        [JsonProperty("outcome_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome_value { get; set; } 

        [JsonProperty("outcome_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Outcome_end_date { get; set; } 

        [JsonProperty("rule_criteria", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutoassignCriteria>? Rule_criteria { get; set; } 

        [JsonProperty("is_matched", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_matched { get; set; } 

        [JsonProperty("outcome_contract_type_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Outcome_contract_type_display { get; set; } 

        [JsonProperty("outcome_contract_subtype_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Outcome_contract_subtype_display { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractSchedule
    {
        [JsonProperty("chid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chid { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractSchedulePlan
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("requesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requesttype { get; set; } 

        [JsonProperty("requesttype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requesttype_name { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("hours_allocated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours_allocated { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours { get; set; } 

        [JsonProperty("apid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Apid { get; set; } 

        [JsonProperty("event", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Appointment? Event { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractTemplateDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("billingtemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingtemplate_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("itil_requesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itil_requesttype { get; set; } 

        [JsonProperty("requesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requesttype { get; set; } 

        [JsonProperty("requesttype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requesttype_name { get; set; } 

        [JsonProperty("priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority { get; set; } 

        [JsonProperty("chargerate_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate_type { get; set; } 

        [JsonProperty("chargerate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate_id { get; set; } 

        [JsonProperty("chargerate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chargerate_name { get; set; } 

        [JsonProperty("multiplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Multiplier { get; set; } 

        [JsonProperty("plan_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Plan_id { get; set; } 

        [JsonProperty("plan_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Plan_name { get; set; } 

        [JsonProperty("category_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_1 { get; set; } 

        [JsonProperty("partialmatchcategory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partialmatchcategory { get; set; } 

        [JsonProperty("category_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_2 { get; set; } 

        [JsonProperty("partialmatchcategory2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partialmatchcategory2 { get; set; } 

        [JsonProperty("category_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_3 { get; set; } 

        [JsonProperty("partialmatchcategory3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partialmatchcategory3 { get; set; } 

        [JsonProperty("category_4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_4 { get; set; } 

        [JsonProperty("partialmatchcategory4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partialmatchcategory4 { get; set; } 

        [JsonProperty("user_covered_billingdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_covered_billingdescription { get; set; } 

        [JsonProperty("asset_covered_by_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Asset_covered_by_contract { get; set; } 

        [JsonProperty("user_covered_by_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? User_covered_by_contract { get; set; } 

        [JsonProperty("work_hours_covered", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Work_hours_covered { get; set; } 

        [JsonProperty("site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order { get; set; } 

        [JsonProperty("contract_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_type { get; set; } 

        [JsonProperty("contract_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_type_name { get; set; } 

        [JsonProperty("contract_sub_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_sub_type { get; set; } 

        [JsonProperty("contract_sub_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_sub_type_name { get; set; } 

        [JsonProperty("remove_from_plan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Remove_from_plan { get; set; } 

        [JsonProperty("billing_plan_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billing_plan_desc { get; set; } 

        [JsonProperty("not_included_in_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Not_included_in_contract { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ContractTemplateHeader
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("unmatchedcombinations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unmatchedcombinations { get; set; } 

        [JsonProperty("prepayrecurringchargenextdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Prepayrecurringchargenextdate { get; set; } 

        [JsonProperty("billforrecurringprepayamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Billforrecurringprepayamount { get; set; } 

        [JsonProperty("prepayrecurringcharge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringcharge { get; set; } 

        [JsonProperty("prepayrecurringhours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringhours { get; set; } 

        [JsonProperty("prepayrecurringchargebp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepayrecurringchargebp { get; set; } 

        [JsonProperty("autotopupthreshhold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopupthreshhold { get; set; } 

        [JsonProperty("autotopuptoamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopuptoamount { get; set; } 

        [JsonProperty("autotopupcostperhour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopupcostperhour { get; set; } 

        [JsonProperty("autotopupbyamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Autotopupbyamount { get; set; } 

        [JsonProperty("surchargeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Surchargeid { get; set; } 

        [JsonProperty("numberofunitsfree", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Numberofunitsfree { get; set; } 

        [JsonProperty("prepayrecurringminimumdeduction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringminimumdeduction { get; set; } 

        [JsonProperty("prepayrecurringminimumdeductiononlyactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prepayrecurringminimumdeductiononlyactive { get; set; } 

        [JsonProperty("prepayrecurringautomaticdeduction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prepayrecurringautomaticdeduction { get; set; } 

        [JsonProperty("billingplans", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractTemplateDetail>? Billingplans { get; set; } 

        [JsonProperty("billingdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingdescription { get; set; } 

        [JsonProperty("subtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Subtype { get; set; } 

        [JsonProperty("billingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingperiod { get; set; } 

        [JsonProperty("clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Clients { get; set; } 

        [JsonProperty("create_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_contract { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Contributors
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agentname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agentname { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Code { get; set; } 

        [JsonProperty("rolename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Rolename { get; set; } 

        [JsonProperty("ticketid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticketid { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("contributor_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contributor_type { get; set; } 

        [JsonProperty("quality", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quality { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Costcentres
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("chargeable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Chargeable { get; set; } 

        [JsonProperty("addr1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Addr1 { get; set; } 

        [JsonProperty("addr2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Addr2 { get; set; } 

        [JsonProperty("addr3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Addr3 { get; set; } 

        [JsonProperty("addr4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Addr4 { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CreateSlackChannel
    {
        [JsonProperty("workspace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workspace_id { get; set; } 

        [JsonProperty("access_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_type { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("members", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SlackUser>? Members { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CreateTeamsChat
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("members", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users>? Members { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Currency
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("symbol", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Symbol { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Conversion_rate { get; set; } 

        [JsonProperty("last_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_updated { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CustomButton
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("usage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Usage { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Label { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("newtab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newtab { get; set; } 

        [JsonProperty("msid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Msid { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("runbook_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Runbook_id { get; set; } 

        [JsonProperty("runbook_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Runbook_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CustomField
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Label { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Value { get; set; } 

        [JsonProperty("value_is_password_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value_is_password_id { get; set; } 

        [JsonProperty("display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Display { get; set; } 

        [JsonProperty("characterlimit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Characterlimit { get; set; } 

        [JsonProperty("characterlimittype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Characterlimittype { get; set; } 

        [JsonProperty("inputtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inputtype { get; set; } 

        [JsonProperty("copytochild", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytochild { get; set; } 

        [JsonProperty("copytoparent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytoparent { get; set; } 

        [JsonProperty("searchable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Searchable { get; set; } 

        [JsonProperty("ordervalues", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ordervalues { get; set; } 

        [JsonProperty("ordervaluesby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ordervaluesby { get; set; } 

        [JsonProperty("database_lookup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Database_lookup_id { get; set; } 

        [JsonProperty("database_lookup_auto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Database_lookup_auto { get; set; } 

        [JsonProperty("database_lookup_triggers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PartsLookupField>? Database_lookup_triggers { get; set; } 

        [JsonProperty("third_party_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_name { get; set; } 

        [JsonProperty("extratype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Extratype { get; set; } 

        [JsonProperty("copytochildonupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytochildonupdate { get; set; } 

        [JsonProperty("copytoparentonupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytoparentonupdate { get; set; } 

        [JsonProperty("hyperlink", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hyperlink { get; set; } 

        [JsonProperty("usage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Usage { get; set; } 

        [JsonProperty("linked_table_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_table_id { get; set; } 

        [JsonProperty("showondetailsscreen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showondetailsscreen { get; set; } 

        [JsonProperty("third_party_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_value { get; set; } 

        [JsonProperty("custom_extra_table_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Custom_extra_table_id { get; set; } 

        [JsonProperty("copytorelated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytorelated { get; set; } 

        [JsonProperty("calculation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Calculation { get; set; } 

        [JsonProperty("rounding", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rounding { get; set; } 

        [JsonProperty("validation_reasons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Validation_reasons { get; set; } 

        [JsonProperty("int_value_is_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Int_value_is_display { get; set; } 

        [JsonProperty("regex", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Regex { get; set; } 

        [JsonProperty("onlyshowforagents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Onlyshowforagents { get; set; } 

        [JsonProperty("is_horizontal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_horizontal { get; set; } 

        [JsonProperty("copied", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copied { get; set; } 

        [JsonProperty("isencrypted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isencrypted { get; set; } 

        [JsonProperty("max_selection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Max_selection { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("selection_field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Selection_field_id { get; set; } 

        [JsonProperty("variable_format_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Variable_format_1 { get; set; } 

        [JsonProperty("variable_format_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Variable_format_2 { get; set; } 

        [JsonProperty("validation_data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldValidation>? Validation_data { get; set; } 

        [JsonProperty("database_lookup_input", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Database_lookup_input { get; set; } 

        [JsonProperty("table_data_entry_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_data_entry_type { get; set; } 

        [JsonProperty("showintable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showintable { get; set; } 

        [JsonProperty("table_height", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_height { get; set; } 

        [JsonProperty("dont_delete_rows", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_delete_rows { get; set; } 

        [JsonProperty("table_matching_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_matching_field { get; set; } 

        [JsonProperty("new_storage_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_storage_method { get; set; } 

        [JsonProperty("where_sql", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Where_sql { get; set; } 

        [JsonProperty("load_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Load_type { get; set; } 

        [JsonProperty("add_rows", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Add_rows { get; set; } 

        [JsonProperty("delete_these_rows", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Delete_these_rows { get; set; } 

        [JsonProperty("showinpool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showinpool { get; set; } 

        [JsonProperty("allow_pool_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_pool_override { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CustomFieldValidation
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("fiid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fiid { get; set; } 

        [JsonProperty("filinktoid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filinktoid { get; set; } 

        [JsonProperty("validationtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Validationtype { get; set; } 

        [JsonProperty("askforreason", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Askforreason { get; set; } 

        [JsonProperty("hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Hours { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CustomFieldValueRestrictions
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("value_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_id { get; set; } 

        [JsonProperty("value_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Value_guid { get; set; } 

        [JsonProperty("value_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CustomFieldVisibility
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Field_guid { get; set; } 

        [JsonProperty("lookup_field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup_field_id { get; set; } 

        [JsonProperty("lookup_field_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Lookup_field_guid { get; set; } 

        [JsonProperty("lookup_value_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup_value_id { get; set; } 

        [JsonProperty("lookup_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_value { get; set; } 

        [JsonProperty("field_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_value { get; set; } 

        [JsonProperty("dynamic_SQL_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dynamic_SQL_field { get; set; } 

        [JsonProperty("value_modified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value_modified { get; set; } 

        [JsonProperty("conditiontype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Conditiontype { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CustomQuery
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("sql_script", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_script { get; set; } 

        [JsonProperty("run", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Run { get; set; } 

        [JsonProperty("run_result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public CustomSQLResult? Run_result { get; set; } 

        [JsonProperty("lookup_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Lookup_values { get; set; } 

        [JsonProperty("column_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Column_name { get; set; } 

        [JsonProperty("top_max", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Top_max { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CustomSQLResult
    {
        [JsonProperty("sql_result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Sql_result { get; set; } 

        [JsonProperty("success", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Success { get; set; } 

        [JsonProperty("error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Error { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CustomTable
    {
        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("ctfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public CustomField? Ctfield { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("add_customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Add_customfields { get; set; } 

        [JsonProperty("edit_customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Edit_customfields { get; set; } 

        [JsonProperty("delete_customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Delete_customfields { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("db_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Db_name { get; set; } 

        [JsonProperty("linkto_table_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linkto_table_id { get; set; } 

        [JsonProperty("linkto_table_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Linkto_table_guid { get; set; } 

        [JsonProperty("linkto_table_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linkto_table_name { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("import_folder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_folder { get; set; } 

        [JsonProperty("data_entry_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Data_entry_type { get; set; } 

        [JsonProperty("clear_on_close", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Clear_on_close { get; set; } 

        [JsonProperty("primary_field_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Primary_field_1 { get; set; } 

        [JsonProperty("primary_field_1_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Primary_field_1_guid { get; set; } 

        [JsonProperty("primary_field_1_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Primary_field_1_name { get; set; } 

        [JsonProperty("primary_field_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Primary_field_2 { get; set; } 

        [JsonProperty("primary_field_2_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Primary_field_2_guid { get; set; } 

        [JsonProperty("primary_field_2_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Primary_field_2_name { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldInfo>? Fields { get; set; } 

        [JsonProperty("customextratableid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customextratableid { get; set; } 

        [JsonProperty("can_load_data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_load_data { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("customtable_orderby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customtable_orderby { get; set; } 

        [JsonProperty("customtable_orderby_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Customtable_orderby_guid { get; set; } 

        [JsonProperty("customtable_orderby_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customtable_orderby_name { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("import_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_name { get; set; } 

        [JsonProperty("columns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Columns { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class CustomTableRow
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("fkid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fkid { get; set; } 

        [JsonProperty("display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Display { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DashboardFilter
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("dashboard_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dashboard_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("column", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Column { get; set; } 

        [JsonProperty("filter_sql", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_sql { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DashboardLinks
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Use { get; set; } 

        [JsonProperty("link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Link { get; set; } 

        [JsonProperty("iframe", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iframe { get; set; } 

        [JsonProperty("newtab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newtab { get; set; } 

        [JsonProperty("in_app", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? In_app { get; set; } 

        [JsonProperty("admin_only", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Admin_only { get; set; } 

        [JsonProperty("org_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Org_id { get; set; } 

        [JsonProperty("department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Department_id { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Team_id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("org_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Org_name { get; set; } 

        [JsonProperty("department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Department_name { get; set; } 

        [JsonProperty("team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_name { get; set; } 

        [JsonProperty("display_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Display_type { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restriction_type { get; set; } 

        [JsonProperty("layouts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Layouts { get; set; } 

        [JsonProperty("widgets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Widget>? Widgets { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("report_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Report_access_token { get; set; } 

        [JsonProperty("reportingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reportingperiod { get; set; } 

        [JsonProperty("reportingperiodstartdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Reportingperiodstartdate { get; set; } 

        [JsonProperty("reportingperiodenddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Reportingperiodenddate { get; set; } 

        [JsonProperty("reportingperiodvisibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reportingperiodvisibility { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DashboardFilter>? Filters { get; set; } 

        [JsonProperty("user_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DashboardRestriction>? User_access { get; set; } 

        [JsonProperty("is_published", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_published { get; set; } 

        [JsonProperty("published_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Published_id { get; set; } 

        [JsonProperty("allow_anonymous", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_anonymous { get; set; } 

        [JsonProperty("rowheight", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rowheight { get; set; } 

        [JsonProperty("manually_load_dashboards", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Manually_load_dashboards { get; set; } 

        [JsonProperty("dashboard_theme_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dashboard_theme_override { get; set; } 

        [JsonProperty("list_item_height", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? List_item_height { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DashboardRestriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("dashboard_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dashboard_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("data_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Data_id { get; set; } 

        [JsonProperty("data_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Data_name { get; set; } 

        [JsonProperty("dashboard_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dashboard_name { get; set; } 

        [JsonProperty("data_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Data_string { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DateTimeZone
    {
        [JsonProperty("datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime { get; set; } 

        [JsonProperty("timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timezone { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DattoCommerceDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("new_api_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_api_key { get; set; } 

        [JsonProperty("halointegratorenabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegratorenabled { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("item_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_group { get; set; } 

        [JsonProperty("item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_group_name { get; set; } 

        [JsonProperty("customer_field_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Customer_field_mappings { get; set; } 

        [JsonProperty("item_group_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Item_group_mappings { get; set; } 

        [JsonProperty("quote_status_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Quote_status_mappings { get; set; } 

        [JsonProperty("create_items_on_import", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_items_on_import { get; set; } 

        [JsonProperty("product_supplier_on_import", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Product_supplier_on_import { get; set; } 

        [JsonProperty("sostatustoimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sostatustoimport { get; set; } 

        [JsonProperty("sostatustoimport_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sostatustoimport_list { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum DbType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

        _5 = 5,

        _6 = 6,

        _7 = 7,

        _8 = 8,

        _9 = 9,

        _10 = 10,

        _11 = 11,

        _12 = 12,

        _13 = 13,

        _14 = 14,

        _15 = 15,

        _16 = 16,

        _17 = 17,

        _18 = 18,

        _19 = 19,

        _20 = 20,

        _21 = 21,

        _22 = 22,

        _23 = 23,

        _25 = 25,

        _26 = 26,

        _27 = 27,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DecoderFallback
    {
        [JsonProperty("maxCharCount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? MaxCharCount { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DevOpsProject
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("state", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? State { get; set; } 

        [JsonProperty("revision", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Revision { get; set; } 

        [JsonProperty("visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Visibility { get; set; } 

        [JsonProperty("lastUpdateTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastUpdateTime { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DevOpsResourceContainer
    {
        [JsonProperty("project", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DevOpsResourceContainerDetail? Project { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DevOpsResourceContainerDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("baseUrl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? BaseUrl { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DevOpsWebhook
    {
        [JsonProperty("subscriptionId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SubscriptionId { get; set; } 

        [JsonProperty("notificationId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? NotificationId { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("eventType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EventType { get; set; } 

        [JsonProperty("publisherId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PublisherId { get; set; } 

        [JsonProperty("resource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Resource { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DevOpsWebhookMessage? Message { get; set; } 

        [JsonProperty("detailedMessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DevOpsWebhookMessage? DetailedMessage { get; set; } 

        [JsonProperty("resourceContainers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DevOpsResourceContainer? ResourceContainers { get; set; } 

        [JsonProperty("resourceVersion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ResourceVersion { get; set; } 

        [JsonProperty("createdDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreatedDate { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DevOpsWebhookMessage
    {
        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("markdown", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Markdown { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Device
    {
        [JsonProperty("os_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Os_override { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("changeguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Changeguid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("inventory_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Inventory_number { get; set; } 

        [JsonProperty("key_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key_field { get; set; } 

        [JsonProperty("key_field2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key_field2 { get; set; } 

        [JsonProperty("key_field3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key_field3 { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("business_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Business_owner_id { get; set; } 

        [JsonProperty("business_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_name { get; set; } 

        [JsonProperty("business_owner_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_site { get; set; } 

        [JsonProperty("business_owner_client", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_client { get; set; } 

        [JsonProperty("business_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Business_owner_cab_id { get; set; } 

        [JsonProperty("business_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_cab_name { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("technical_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technical_owner_id { get; set; } 

        [JsonProperty("technical_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner_name { get; set; } 

        [JsonProperty("technical_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technical_owner_cab_id { get; set; } 

        [JsonProperty("technical_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner_cab_name { get; set; } 

        [JsonProperty("intune_default_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intune_default_site { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("assettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_name { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("warranty_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Warranty_end { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("is_primary_asset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_primary_asset { get; set; } 

        [JsonProperty("parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent_id { get; set; } 

        [JsonProperty("lansweeper_parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lansweeper_parent_id { get; set; } 

        [JsonProperty("child_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_id { get; set; } 

        [JsonProperty("sibling_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sibling_id { get; set; } 

        [JsonProperty("contract_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contract_value { get; set; } 

        [JsonProperty("contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_ref { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("supplier_contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_contract_id { get; set; } 

        [JsonProperty("supplier_contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_contract_ref { get; set; } 

        [JsonProperty("supplier_sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_sla_id { get; set; } 

        [JsonProperty("supplier_priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_priority_id { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldHelper>? Fields { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("relationship_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relationship_id { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("default_contract_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Default_contract_value { get; set; } 

        [JsonProperty("itemstock_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itemstock_id { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("stock_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Stock_date { get; set; } 

        [JsonProperty("non_consignable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Non_consignable { get; set; } 

        [JsonProperty("reserved_salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reserved_salesorder_id { get; set; } 

        [JsonProperty("reserved_salesorder_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reserved_salesorder_line_id { get; set; } 

        [JsonProperty("matching_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matching_field { get; set; } 

        [JsonProperty("device42_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device42_id { get; set; } 

        [JsonProperty("device42_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Device42_url { get; set; } 

        [JsonProperty("related_services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Related_services { get; set; } 

        [JsonProperty("technical_owner", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner { get; set; } 

        [JsonProperty("business_owner", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner { get; set; } 

        [JsonProperty("primary_asset_chart_json", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Primary_asset_chart_json { get; set; } 

        [JsonProperty("criticality", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Criticality { get; set; } 

        [JsonProperty("service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_id { get; set; } 

        [JsonProperty("ascendant_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ascendant_count { get; set; } 

        [JsonProperty("ascendant_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device>? Ascendant_assets { get; set; } 

        [JsonProperty("descendant_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Descendant_count { get; set; } 

        [JsonProperty("descendant_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device>? Descendant_assets { get; set; } 

        [JsonProperty("service_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_count { get; set; } 

        [JsonProperty("user_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_count { get; set; } 

        [JsonProperty("licence_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_count { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("pingservice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pingservice { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Guid { get; set; } 

        [JsonProperty("import_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Import_guid { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("contractvaluecurrent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contractvaluecurrent { get; set; } 

        [JsonProperty("contractvalueprior", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contractvalueprior { get; set; } 

        [JsonProperty("warranty_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Warranty_note { get; set; } 

        [JsonProperty("goodsin_po_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Goodsin_po_id { get; set; } 

        [JsonProperty("issue_consignment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Issue_consignment_id { get; set; } 

        [JsonProperty("supplier_expirydate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Supplier_expirydate { get; set; } 

        [JsonProperty("supplier_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_reference { get; set; } 

        [JsonProperty("third_party_id_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id_string { get; set; } 

        [JsonProperty("supplierheaderid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplierheaderid { get; set; } 

        [JsonProperty("purchaseorder_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchaseorder_line_id { get; set; } 

        [JsonProperty("teamviewerpassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teamviewerpassword { get; set; } 

        [JsonProperty("commissioned", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Commissioned { get; set; } 

        [JsonProperty("kaseyaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kaseyaid { get; set; } 

        [JsonProperty("children", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device>? Children { get; set; } 

        [JsonProperty("parent_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Parent_assets { get; set; } 

        [JsonProperty("child_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Child_assets { get; set; } 

        [JsonProperty("hierarchy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device>? Hierarchy { get; set; } 

        [JsonProperty("users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users_List>? Users { get; set; } 

        [JsonProperty("clone_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clone_count { get; set; } 

        [JsonProperty("_dontaddnewfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dontaddnewfields { get; set; } 

        [JsonProperty("_dontupdatetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dontupdatetype { get; set; } 

        [JsonProperty("sla_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sla_name { get; set; } 

        [JsonProperty("supplier_sla_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_sla_name { get; set; } 

        [JsonProperty("priority_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Priority_name { get; set; } 

        [JsonProperty("supplier_priority_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_priority_name { get; set; } 

        [JsonProperty("clone_inventory_numbers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clone_inventory_numbers { get; set; } 

        [JsonProperty("_isclone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isclone { get; set; } 

        [JsonProperty("contracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractHeader_List>? Contracts { get; set; } 

        [JsonProperty("scheduled_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StdRequest_List>? Scheduled_tickets { get; set; } 

        [JsonProperty("site_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_guid { get; set; } 

        [JsonProperty("sqlimport_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sqlimport_user { get; set; } 

        [JsonProperty("sqlimport_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sqlimport_id { get; set; } 

        [JsonProperty("software", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DeviceApplications>? Software { get; set; } 

        [JsonProperty("businesscentral_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Businesscentral_id { get; set; } 

        [JsonProperty("intune_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intune_id { get; set; } 

        [JsonProperty("intune_connectionid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intune_connectionid { get; set; } 

        [JsonProperty("azure_userid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_userid { get; set; } 

        [JsonProperty("azure_userprincipalname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_userprincipalname { get; set; } 

        [JsonProperty("stockdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ItemStock? Stockdetails { get; set; } 

        [JsonProperty("assetgroup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetgroup_name { get; set; } 

        [JsonProperty("prtg_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prtg_id { get; set; } 

        [JsonProperty("prtg_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prtg_details_id { get; set; } 

        [JsonProperty("status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_name { get; set; } 

        [JsonProperty("services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServSite_List>? Services { get; set; } 

        [JsonProperty("datto_site_uid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_site_uid { get; set; } 

        [JsonProperty("ateraid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ateraid { get; set; } 

        [JsonProperty("items_issued", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FaultItem>? Items_issued { get; set; } 

        [JsonProperty("lansweeper_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lansweeper_id { get; set; } 

        [JsonProperty("lansweeper_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lansweeper_url { get; set; } 

        [JsonProperty("lansweeper_software", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LansweeperSoftware>? Lansweeper_software { get; set; } 

        [JsonProperty("dlastupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Dlastupdate { get; set; } 

        [JsonProperty("createdfrompurchaseorder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SupplierOrderHeader? Createdfrompurchaseorder { get; set; } 

        [JsonProperty("stockdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Stockdate { get; set; } 

        [JsonProperty("item_cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_cost { get; set; } 

        [JsonProperty("old_software_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Old_software_version { get; set; } 

        [JsonProperty("new_software_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_software_version { get; set; } 

        [JsonProperty("user_role_breakdown", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DeviceUserCount>? User_role_breakdown { get; set; } 

        [JsonProperty("itglue_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itglue_id { get; set; } 

        [JsonProperty("area_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Area_guid { get; set; } 

        [JsonProperty("jamf_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Jamf_id { get; set; } 

        [JsonProperty("jamf_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jamf_type { get; set; } 

        [JsonProperty("phone_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone_number { get; set; } 

        [JsonProperty("bookmarked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Bookmarked { get; set; } 

        [JsonProperty("open_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_ticket_count { get; set; } 

        [JsonProperty("onhold_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onhold_ticket_count { get; set; } 

        [JsonProperty("total_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_ticket_count { get; set; } 

        [JsonProperty("opened_thismonth_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opened_thismonth_count { get; set; } 

        [JsonProperty("domotz_agentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Domotz_agentid { get; set; } 

        [JsonProperty("domotz_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Domotz_id { get; set; } 

        [JsonProperty("domotz_type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Domotz_type_id { get; set; } 

        [JsonProperty("snow_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Snow_client_id { get; set; } 

        [JsonProperty("deactivate_child_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deactivate_child_devices { get; set; } 

        [JsonProperty("auvik_network_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auvik_network_id { get; set; } 

        [JsonProperty("parent_third_party_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Parent_third_party_ids { get; set; } 

        [JsonProperty("snowUsers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SnowComputerUserAbstract>? SnowUsers { get; set; } 

        [JsonProperty("tab_config", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TabConfig>? Tab_config { get; set; } 

        [JsonProperty("qualys_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qualys_id { get; set; } 

        [JsonProperty("assettype_config", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Xtype? Assettype_config { get; set; } 

        [JsonProperty("passportal_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Passportal_client_id { get; set; } 

        [JsonProperty("addigy_policy_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Addigy_policy_id { get; set; } 

        [JsonProperty("addigy_applications", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AddigyApplication>? Addigy_applications { get; set; } 

        [JsonProperty("addigy_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Addigy_users { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("isassetdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isassetdetails { get; set; } 

        [JsonProperty("domotz_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domotz_agent { get; set; } 

        [JsonProperty("liongardid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Liongardid { get; set; } 

        [JsonProperty("iskaseyaagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iskaseyaagent { get; set; } 

        [JsonProperty("_donotvalidate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _donotvalidate { get; set; } 

        [JsonProperty("datto_remote_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_remote_url { get; set; } 

        [JsonProperty("qualys_software", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<QualysHostAssetSoftwareHostAssetSoftware>? Qualys_software { get; set; } 

        [JsonProperty("xtypeunamecanedit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RT_Permission>? Xtypeunamecanedit { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("stockbin_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stockbin_id { get; set; } 

        [JsonProperty("ethernetMacAddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EthernetMacAddress { get; set; } 

        [JsonProperty("physicalMemoryInBytes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PhysicalMemoryInBytes { get; set; } 

        [JsonProperty("azureTenantId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AzureTenantId { get; set; } 

        [JsonProperty("services_hierarchy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServSite>? Services_hierarchy { get; set; } 

        [JsonProperty("_validateonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _validateonly { get; set; } 

        [JsonProperty("copy_unmapped_info_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copy_unmapped_info_fields { get; set; } 

        [JsonProperty("user_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_email { get; set; } 

        [JsonProperty("lansweeper_relations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LansweeperRelation>? Lansweeper_relations { get; set; } 

        [JsonProperty("kbs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KBEntry_List>? Kbs { get; set; } 

        [JsonProperty("site_external_link_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_external_link_id { get; set; } 

        [JsonProperty("workspace_orgunitpath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workspace_orgunitpath { get; set; } 

        [JsonProperty("sibling_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Sibling_assets { get; set; } 

        [JsonProperty("import_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_details_id { get; set; } 

        [JsonProperty("icinga_hostname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icinga_hostname { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("new_access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? New_access_control { get; set; } 

        [JsonProperty("jamf_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Jamf_details_id { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("is_stock_change", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_stock_change { get; set; } 

        [JsonProperty("parent_third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent_third_party_id { get; set; } 

        [JsonProperty("is_return", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_return { get; set; } 

        [JsonProperty("_print_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_generate { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("printhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printhtml { get; set; } 

        [JsonProperty("pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_attachment_id { get; set; } 

        [JsonProperty("_dont_fire_automations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dont_fire_automations { get; set; } 

        [JsonProperty("last_modified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_modified { get; set; } 

        [JsonProperty("asset_chart_json", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_chart_json { get; set; } 

        [JsonProperty("lansweeper_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lansweeper_site_id { get; set; } 

        [JsonProperty("thirdparty_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Thirdparty_client_id { get; set; } 

        [JsonProperty("syncro_asset_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncro_asset_type { get; set; } 

        [JsonProperty("dynatrace_to_relations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DynatraceRelationship>? Dynatrace_to_relations { get; set; } 

        [JsonProperty("dynatrace_from_relations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DynatraceRelationship>? Dynatrace_from_relations { get; set; } 

        [JsonProperty("open_incident_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_incident_count { get; set; } 

        [JsonProperty("open_change_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_change_count { get; set; } 

        [JsonProperty("thirdparty_type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Thirdparty_type_id { get; set; } 

        [JsonProperty("is_stock_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_stock_site { get; set; } 

        [JsonProperty("matching_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matching_value { get; set; } 

        [JsonProperty("related_service_names", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Related_service_names { get; set; } 

        [JsonProperty("parent_asset_names", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parent_asset_names { get; set; } 

        [JsonProperty("child_asset_names", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Child_asset_names { get; set; } 

        [JsonProperty("sibling_asset_names", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sibling_asset_names { get; set; } 

        [JsonProperty("related_kb_names", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Related_kb_names { get; set; } 

        [JsonProperty("licences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Licence_List>? Licences { get; set; } 

        [JsonProperty("add_licences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Licence_List>? Add_licences { get; set; } 

        [JsonProperty("licences_hierarchy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Licence_List>? Licences_hierarchy { get; set; } 

        [JsonProperty("sqlimport_accountsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sqlimport_accountsid { get; set; } 

        [JsonProperty("created_from_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Created_from_template { get; set; } 

        [JsonProperty("sqlimport_did", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sqlimport_did { get; set; } 

        [JsonProperty("extratabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tabname>? Extratabs { get; set; } 

        [JsonProperty("linked_service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ServSite? Linked_service { get; set; } 

        [JsonProperty("is_linked_service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_linked_service { get; set; } 

        [JsonProperty("runbook_button_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Runbook_button_id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("device_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_number { get; set; } 

        [JsonProperty("assettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Assettype_guid { get; set; } 

        [JsonProperty("warranty_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Warranty_start { get; set; } 

        [JsonProperty("labour_warranty_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Labour_warranty_start { get; set; } 

        [JsonProperty("labour_warranty_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Labour_warranty_end { get; set; } 

        [JsonProperty("parent_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Parent_guid { get; set; } 

        [JsonProperty("child_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Child_guid { get; set; } 

        [JsonProperty("status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_id { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Third_party_id { get; set; } 

        [JsonProperty("latest_contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Latest_contract_ref { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("ncentral_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ncentral_url { get; set; } 

        [JsonProperty("ncentral_remote_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ncentral_remote_url { get; set; } 

        [JsonProperty("contract_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Contract_end_date { get; set; } 

        [JsonProperty("atera_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Atera_id { get; set; } 

        [JsonProperty("automate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automate_id { get; set; } 

        [JsonProperty("automate_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Automate_url { get; set; } 

        [JsonProperty("connectwise_control_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectwise_control_url { get; set; } 

        [JsonProperty("ninjarmm_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ninjarmm_id { get; set; } 

        [JsonProperty("ninja_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ninja_url { get; set; } 

        [JsonProperty("ninja_remote_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ninja_remote_url { get; set; } 

        [JsonProperty("syncro_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncro_url { get; set; } 

        [JsonProperty("syncroid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Syncroid { get; set; } 

        [JsonProperty("itglue_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itglue_url { get; set; } 

        [JsonProperty("defaultsequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultsequence { get; set; } 

        [JsonProperty("service_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_ids { get; set; } 

        [JsonProperty("bulkcreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Bulkcreated { get; set; } 

        [JsonProperty("bulkbillingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bulkbillingperiod { get; set; } 

        [JsonProperty("asset_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_field { get; set; } 

        [JsonProperty("datto_alternate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Datto_alternate_id { get; set; } 

        [JsonProperty("syncro_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncro_id { get; set; } 

        [JsonProperty("snow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Snow_id { get; set; } 

        [JsonProperty("passportal_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Passportal_id { get; set; } 

        [JsonProperty("auvik_device_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auvik_device_id { get; set; } 

        [JsonProperty("auvik_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auvik_url { get; set; } 

        [JsonProperty("allowallstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowallstatus { get; set; } 

        [JsonProperty("allowed_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeStatus>? Allowed_status { get; set; } 

        [JsonProperty("datto_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_id { get; set; } 

        [JsonProperty("addigy_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Addigy_id { get; set; } 

        [JsonProperty("liongard_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Liongard_url { get; set; } 

        [JsonProperty("liongard_environmnet_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Liongard_environmnet_id { get; set; } 

        [JsonProperty("liongard_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Liongard_id { get; set; } 

        [JsonProperty("kaseya_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kaseya_id { get; set; } 

        [JsonProperty("kaseyavsa_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kaseyavsa_url { get; set; } 

        [JsonProperty("teamviewerid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teamviewerid { get; set; } 

        [JsonProperty("serialization_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Serialization_user { get; set; } 

        [JsonProperty("zabbix_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Zabbix_id { get; set; } 

        [JsonProperty("zabbix_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Zabbix_url { get; set; } 

        [JsonProperty("stockbin_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stockbin_name { get; set; } 

        [JsonProperty("issue_consignment_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Issue_consignment_line_id { get; set; } 

        [JsonProperty("item_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_name { get; set; } 

        [JsonProperty("datto_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_url { get; set; } 

        [JsonProperty("ncentral_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ncentral_details_id { get; set; } 

        [JsonProperty("nable_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nable_id { get; set; } 

        [JsonProperty("connectwisecontrolid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectwisecontrolid { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("workspace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workspace_id { get; set; } 

        [JsonProperty("workspace_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workspace_url { get; set; } 

        [JsonProperty("supplier_purchasedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Supplier_purchasedate { get; set; } 

        [JsonProperty("logicmonitor_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logicmonitor_id { get; set; } 

        [JsonProperty("barracudarmm_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Barracudarmm_id { get; set; } 

        [JsonProperty("sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_id { get; set; } 

        [JsonProperty("priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority_id { get; set; } 

        [JsonProperty("icinga_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icinga_id { get; set; } 

        [JsonProperty("related_service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Related_service_name { get; set; } 

        [JsonProperty("related_service_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Related_service_count { get; set; } 

        [JsonProperty("connectwisermm_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectwisermm_id { get; set; } 

        [JsonProperty("xensam_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xensam_id { get; set; } 

        [JsonProperty("asset_type_priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_type_priority { get; set; } 

        [JsonProperty("snipeit_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snipeit_id { get; set; } 

        [JsonProperty("prometheus_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Prometheus_id { get; set; } 

        [JsonProperty("dynatrace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dynatrace_id { get; set; } 

        [JsonProperty("vmworkspace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Vmworkspace_id { get; set; } 

        [JsonProperty("tanium_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tanium_id { get; set; } 

        [JsonProperty("tenable_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenable_id { get; set; } 

        [JsonProperty("kandji_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kandji_id { get; set; } 

        [JsonProperty("criticality_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Criticality_description { get; set; } 

        [JsonProperty("auvik_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auvik_id { get; set; } 

        [JsonProperty("is_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_template { get; set; } 

        [JsonProperty("aws_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Aws_id { get; set; } 

        [JsonProperty("manageengine_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manageengine_id { get; set; } 

        [JsonProperty("manageengine_customer_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manageengine_customer_id { get; set; } 

        [JsonProperty("lastchangeofvaluedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastchangeofvaluedate { get; set; } 

        [JsonProperty("commissiondate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Commissiondate { get; set; } 

        [JsonProperty("first_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? First_user_id { get; set; } 

        [JsonProperty("changebackupexists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Changebackupexists { get; set; } 

        [JsonProperty("_isbatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isbatch { get; set; } 

        [JsonProperty("virima_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Virima_id { get; set; } 

        [JsonProperty("service_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Service_guid { get; set; } 

        [JsonProperty("service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_name { get; set; } 

        [JsonProperty("lansweeperid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lansweeperid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Device42Webhook
    {
        [JsonProperty("category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User { get; set; } 

        [JsonProperty("action", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action { get; set; } 

        [JsonProperty("data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Device42WebhookData? Data { get; set; } 

        [JsonProperty("resourceObject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? ResourceObject { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Device42WebhookData
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DeviceApplications
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("licence_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Count { get; set; } 

        [JsonProperty("did", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Did { get; set; } 

        [JsonProperty("bundledesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bundledesc { get; set; } 

        [JsonProperty("cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Cost { get; set; } 

        [JsonProperty("lastused", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastused { get; set; } 

        [JsonProperty("install_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Install_date { get; set; } 

        [JsonProperty("snowid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snowid { get; set; } 

        [JsonProperty("licence_required", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Licence_required { get; set; } 

        [JsonProperty("version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version { get; set; } 

        [JsonProperty("licence_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Licence_name { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("moduleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Moduleid { get; set; } 

        [JsonProperty("new_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users>? New_users { get; set; } 

        [JsonProperty("new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device>? New_devices { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DeviceChange
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("field_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_desc { get; set; } 

        [JsonProperty("asset_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_id { get; set; } 

        [JsonProperty("asset_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_site { get; set; } 

        [JsonProperty("asset_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_number { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("old_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Old_value { get; set; } 

        [JsonProperty("new_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_value { get; set; } 

        [JsonProperty("who", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Who { get; set; } 

        [JsonProperty("datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime { get; set; } 

        [JsonProperty("software_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Software_id { get; set; } 

        [JsonProperty("software_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Software_user_id { get; set; } 

        [JsonProperty("software_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Software_user_name { get; set; } 

        [JsonProperty("old_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Old_site { get; set; } 

        [JsonProperty("new_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_site { get; set; } 

        [JsonProperty("customfield_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customfield_id { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DeviceMeterReading
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("recurringinvoice_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurringinvoice_line_id { get; set; } 

        [JsonProperty("asset_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_id { get; set; } 

        [JsonProperty("meter_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Meter_name { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("who", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Who { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_id { get; set; } 

        [JsonProperty("reading_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reading_type { get; set; } 

        [JsonProperty("pack_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pack_id { get; set; } 

        [JsonProperty("reading", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reading { get; set; } 

        [JsonProperty("previous_reading", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Previous_reading { get; set; } 

        [JsonProperty("reason", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reason { get; set; } 

        [JsonProperty("reviewed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Reviewed { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DeviceUserCount
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Count { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Device_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("changeguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Changeguid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("inventory_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Inventory_number { get; set; } 

        [JsonProperty("key_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key_field { get; set; } 

        [JsonProperty("key_field2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key_field2 { get; set; } 

        [JsonProperty("key_field3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key_field3 { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("business_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Business_owner_id { get; set; } 

        [JsonProperty("business_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_name { get; set; } 

        [JsonProperty("business_owner_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_site { get; set; } 

        [JsonProperty("business_owner_client", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_client { get; set; } 

        [JsonProperty("business_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Business_owner_cab_id { get; set; } 

        [JsonProperty("business_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_cab_name { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("technical_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technical_owner_id { get; set; } 

        [JsonProperty("technical_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner_name { get; set; } 

        [JsonProperty("technical_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technical_owner_cab_id { get; set; } 

        [JsonProperty("technical_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner_cab_name { get; set; } 

        [JsonProperty("intune_default_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intune_default_site { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("assettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_name { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("warranty_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Warranty_end { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("is_primary_asset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_primary_asset { get; set; } 

        [JsonProperty("parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent_id { get; set; } 

        [JsonProperty("lansweeper_parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lansweeper_parent_id { get; set; } 

        [JsonProperty("child_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_id { get; set; } 

        [JsonProperty("sibling_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sibling_id { get; set; } 

        [JsonProperty("contract_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contract_value { get; set; } 

        [JsonProperty("contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_ref { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("supplier_contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_contract_id { get; set; } 

        [JsonProperty("supplier_contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_contract_ref { get; set; } 

        [JsonProperty("supplier_sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_sla_id { get; set; } 

        [JsonProperty("supplier_priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_priority_id { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldHelper>? Fields { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("relationship_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relationship_id { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("default_contract_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Default_contract_value { get; set; } 

        [JsonProperty("itemstock_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itemstock_id { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("stock_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Stock_date { get; set; } 

        [JsonProperty("non_consignable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Non_consignable { get; set; } 

        [JsonProperty("reserved_salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reserved_salesorder_id { get; set; } 

        [JsonProperty("reserved_salesorder_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reserved_salesorder_line_id { get; set; } 

        [JsonProperty("matching_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matching_field { get; set; } 

        [JsonProperty("device42_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device42_id { get; set; } 

        [JsonProperty("device42_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Device42_url { get; set; } 

        [JsonProperty("related_services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Related_services { get; set; } 

        [JsonProperty("technical_owner", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner { get; set; } 

        [JsonProperty("business_owner", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner { get; set; } 

        [JsonProperty("primary_asset_chart_json", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Primary_asset_chart_json { get; set; } 

        [JsonProperty("criticality", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Criticality { get; set; } 

        [JsonProperty("service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("device_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_number { get; set; } 

        [JsonProperty("assettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Assettype_guid { get; set; } 

        [JsonProperty("warranty_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Warranty_start { get; set; } 

        [JsonProperty("labour_warranty_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Labour_warranty_start { get; set; } 

        [JsonProperty("labour_warranty_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Labour_warranty_end { get; set; } 

        [JsonProperty("parent_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Parent_guid { get; set; } 

        [JsonProperty("child_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Child_guid { get; set; } 

        [JsonProperty("status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_id { get; set; } 

        [JsonProperty("status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_name { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Third_party_id { get; set; } 

        [JsonProperty("sla_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sla_name { get; set; } 

        [JsonProperty("priority_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Priority_name { get; set; } 

        [JsonProperty("latest_contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Latest_contract_ref { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("ncentral_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ncentral_url { get; set; } 

        [JsonProperty("ncentral_remote_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ncentral_remote_url { get; set; } 

        [JsonProperty("contract_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Contract_end_date { get; set; } 

        [JsonProperty("atera_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Atera_id { get; set; } 

        [JsonProperty("automate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automate_id { get; set; } 

        [JsonProperty("automate_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Automate_url { get; set; } 

        [JsonProperty("connectwise_control_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectwise_control_url { get; set; } 

        [JsonProperty("ninjarmm_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ninjarmm_id { get; set; } 

        [JsonProperty("ninja_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ninja_url { get; set; } 

        [JsonProperty("ninja_remote_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ninja_remote_url { get; set; } 

        [JsonProperty("syncro_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncro_url { get; set; } 

        [JsonProperty("syncroid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Syncroid { get; set; } 

        [JsonProperty("itglue_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itglue_url { get; set; } 

        [JsonProperty("defaultsequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultsequence { get; set; } 

        [JsonProperty("service_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_ids { get; set; } 

        [JsonProperty("bulkcreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Bulkcreated { get; set; } 

        [JsonProperty("bulkbillingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bulkbillingperiod { get; set; } 

        [JsonProperty("asset_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_field { get; set; } 

        [JsonProperty("datto_alternate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Datto_alternate_id { get; set; } 

        [JsonProperty("syncro_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncro_id { get; set; } 

        [JsonProperty("domotz_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domotz_id { get; set; } 

        [JsonProperty("snow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Snow_id { get; set; } 

        [JsonProperty("passportal_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Passportal_id { get; set; } 

        [JsonProperty("auvik_device_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auvik_device_id { get; set; } 

        [JsonProperty("auvik_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auvik_url { get; set; } 

        [JsonProperty("allowallstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowallstatus { get; set; } 

        [JsonProperty("allowed_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeStatus>? Allowed_status { get; set; } 

        [JsonProperty("datto_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_id { get; set; } 

        [JsonProperty("addigy_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Addigy_id { get; set; } 

        [JsonProperty("liongard_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Liongard_url { get; set; } 

        [JsonProperty("liongard_environmnet_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Liongard_environmnet_id { get; set; } 

        [JsonProperty("liongard_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Liongard_id { get; set; } 

        [JsonProperty("kaseya_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kaseya_id { get; set; } 

        [JsonProperty("iskaseyaagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iskaseyaagent { get; set; } 

        [JsonProperty("kaseyavsa_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kaseyavsa_url { get; set; } 

        [JsonProperty("teamviewerid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teamviewerid { get; set; } 

        [JsonProperty("serialization_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Serialization_user { get; set; } 

        [JsonProperty("zabbix_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Zabbix_id { get; set; } 

        [JsonProperty("zabbix_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Zabbix_url { get; set; } 

        [JsonProperty("stockbin_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stockbin_name { get; set; } 

        [JsonProperty("issue_consignment_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Issue_consignment_line_id { get; set; } 

        [JsonProperty("item_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_name { get; set; } 

        [JsonProperty("datto_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_url { get; set; } 

        [JsonProperty("ncentral_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ncentral_details_id { get; set; } 

        [JsonProperty("nable_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nable_id { get; set; } 

        [JsonProperty("connectwisecontrolid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectwisecontrolid { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("workspace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workspace_id { get; set; } 

        [JsonProperty("workspace_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workspace_url { get; set; } 

        [JsonProperty("intune_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intune_id { get; set; } 

        [JsonProperty("supplier_purchasedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Supplier_purchasedate { get; set; } 

        [JsonProperty("logicmonitor_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logicmonitor_id { get; set; } 

        [JsonProperty("barracudarmm_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Barracudarmm_id { get; set; } 

        [JsonProperty("sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_id { get; set; } 

        [JsonProperty("priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority_id { get; set; } 

        [JsonProperty("icinga_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icinga_id { get; set; } 

        [JsonProperty("related_service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Related_service_name { get; set; } 

        [JsonProperty("related_service_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Related_service_count { get; set; } 

        [JsonProperty("connectwisermm_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectwisermm_id { get; set; } 

        [JsonProperty("xensam_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xensam_id { get; set; } 

        [JsonProperty("asset_type_priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_type_priority { get; set; } 

        [JsonProperty("snipeit_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snipeit_id { get; set; } 

        [JsonProperty("prometheus_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Prometheus_id { get; set; } 

        [JsonProperty("dynatrace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dynatrace_id { get; set; } 

        [JsonProperty("vmworkspace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Vmworkspace_id { get; set; } 

        [JsonProperty("tanium_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tanium_id { get; set; } 

        [JsonProperty("tenable_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenable_id { get; set; } 

        [JsonProperty("kandji_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kandji_id { get; set; } 

        [JsonProperty("criticality_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Criticality_description { get; set; } 

        [JsonProperty("auvik_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auvik_id { get; set; } 

        [JsonProperty("is_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_template { get; set; } 

        [JsonProperty("aws_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Aws_id { get; set; } 

        [JsonProperty("manageengine_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manageengine_id { get; set; } 

        [JsonProperty("manageengine_customer_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manageengine_customer_id { get; set; } 

        [JsonProperty("lastchangeofvaluedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastchangeofvaluedate { get; set; } 

        [JsonProperty("commissiondate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Commissiondate { get; set; } 

        [JsonProperty("first_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? First_user_id { get; set; } 

        [JsonProperty("changebackupexists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Changebackupexists { get; set; } 

        [JsonProperty("_isbatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isbatch { get; set; } 

        [JsonProperty("virima_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Virima_id { get; set; } 

        [JsonProperty("service_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Service_guid { get; set; } 

        [JsonProperty("service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_name { get; set; } 

        [JsonProperty("lansweeperid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lansweeperid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DistributionLists
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Desc { get; set; } 

        [JsonProperty("mailbox_from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_from { get; set; } 

        [JsonProperty("mailbox_replyto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailbox_replyto { get; set; } 

        [JsonProperty("dynamic_members", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dynamic_members { get; set; } 

        [JsonProperty("users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users>? Users { get; set; } 

        [JsonProperty("members", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DistributionListsUser>? Members { get; set; } 

        [JsonProperty("addtheseusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users>? Addtheseusers { get; set; } 

        [JsonProperty("removetheseusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users>? Removetheseusers { get; set; } 

        [JsonProperty("users_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Users_count { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("mailbox_from_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailbox_from_address { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("third_party_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_url { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DlFilterDetails>? Filters { get; set; } 

        [JsonProperty("linked_campaigns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MailCampaign>? Linked_campaigns { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DistributionListsLog
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("distributionlists_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Distributionlists_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("action", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action { get; set; } 

        [JsonProperty("datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime { get; set; } 

        [JsonProperty("emailsubject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailsubject { get; set; } 

        [JsonProperty("emailbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailbody { get; set; } 

        [JsonProperty("action_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_desc { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DistributionListsUser
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("distributionlists_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Distributionlists_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("phone_extn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone_extn { get; set; } 

        [JsonProperty("phone_mobile", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone_mobile { get; set; } 

        [JsonProperty("phone_mobile2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone_mobile2 { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DlFilterDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("list_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? List_id { get; set; } 

        [JsonProperty("filter_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_name { get; set; } 

        [JsonProperty("filter_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_type { get; set; } 

        [JsonProperty("filter_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_value { get; set; } 

        [JsonProperty("filter_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Filter_values { get; set; } 

        [JsonProperty("filter_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Filter_guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Downtime
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("fault_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fault_summary { get; set; } 

        [JsonProperty("service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service { get; set; } 

        [JsonProperty("service_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_desc { get; set; } 

        [JsonProperty("workdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workdays { get; set; } 

        [JsonProperty("hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("ended", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ended { get; set; } 

        [JsonProperty("calculated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Calculated { get; set; } 

        [JsonProperty("allday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allday { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Dynamics365CRMFieldMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("halo_table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_table { get; set; } 

        [JsonProperty("dynamics_table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dynamics_table { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("synctype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Synctype { get; set; } 

        [JsonProperty("idfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Idfield { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("entity_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_name { get; set; } 

        [JsonProperty("child_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Dynamics365CRMSubTable>? Child_mappings { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("field_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Field_mappings { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Dynamics365CRMSubTable
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent_id { get; set; } 

        [JsonProperty("dynamics_table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dynamics_table { get; set; } 

        [JsonProperty("entityname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entityname { get; set; } 

        [JsonProperty("parentidfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parentidfield { get; set; } 

        [JsonProperty("child_field_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Child_field_mappings { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DynatraceDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("new_integration_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_integration_key { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("default_devicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicesite { get; set; } 

        [JsonProperty("default_devicesite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicesite_name { get; set; } 

        [JsonProperty("default_devicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicetype { get; set; } 

        [JsonProperty("default_devicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicetypename { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_fieldname { get; set; } 

        [JsonProperty("host_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Host_fieldmappings { get; set; } 

        [JsonProperty("service_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Service_fieldmappings { get; set; } 

        [JsonProperty("sitemappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationSiteMapping>? Sitemappings { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("halo_integrator_import_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_integrator_import_list { get; set; } 

        [JsonProperty("halo_integrator_import_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Halo_integrator_import_types { get; set; } 

        [JsonProperty("delete_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete_devices { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

        [JsonProperty("dont_update_device_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_device_type { get; set; } 

        [JsonProperty("dont_move_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_site { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("default_assetgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup { get; set; } 

        [JsonProperty("default_assetgroupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroupname { get; set; } 

        [JsonProperty("assettype_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_choice { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_field { get; set; } 

        [JsonProperty("webhook_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_username { get; set; } 

        [JsonProperty("new_webhook_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_webhook_password { get; set; } 

        [JsonProperty("webhook_salt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_salt { get; set; } 

        [JsonProperty("webhook_iterations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Webhook_iterations { get; set; } 

        [JsonProperty("enable_alerts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_alerts { get; set; } 

        [JsonProperty("ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_type { get; set; } 

        [JsonProperty("ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_type_name { get; set; } 

        [JsonProperty("ticket_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_user { get; set; } 

        [JsonProperty("ticket_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_user_name { get; set; } 

        [JsonProperty("new_webhook_password_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_webhook_password_method { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DynatraceEntity
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("entity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DynatraceRelationship
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class DynatraceWebhook
    {
        [JsonProperty("state", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? State { get; set; } 

        [JsonProperty("problemID", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProblemID { get; set; } 

        [JsonProperty("problemTitle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProblemTitle { get; set; } 

        [JsonProperty("problemSeverity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProblemSeverity { get; set; } 

        [JsonProperty("problemImpact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProblemImpact { get; set; } 

        [JsonProperty("problemURL", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProblemURL { get; set; } 

        [JsonProperty("impactedEntities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DynatraceEntity>? ImpactedEntities { get; set; } 

        [JsonProperty("impactedEntityNames", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ImpactedEntityNames { get; set; } 

        [JsonProperty("problemDetailsHTML", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProblemDetailsHTML { get; set; } 

        [JsonProperty("problemDetailsText", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProblemDetailsText { get; set; } 

        [JsonProperty("detailsId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? DetailsId { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EWSAppointmentBasic
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ItemId? Id { get; set; } 

        [JsonProperty("iCalUid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ICalUid { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start { get; set; } 

        [JsonProperty("end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End { get; set; } 

        [JsonProperty("organizer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public EmailAddress? Organizer { get; set; } 

        [JsonProperty("appointmentType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AppointmentType? AppointmentType { get; set; } 

        [JsonProperty("isAllDayEvent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsAllDayEvent { get; set; } 

        [JsonProperty("isRecurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsRecurring { get; set; } 

        [JsonProperty("isMeeting", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsMeeting { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EWSAppointmentChange
    {
        [JsonProperty("changeType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ChangeType? ChangeType { get; set; } 

        [JsonProperty("itemId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ItemId? ItemId { get; set; } 

        [JsonProperty("item", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public EWSAppointmentBasic? Item { get; set; } 

        [JsonProperty("agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Uname_List? Agent { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EcommerceOrder
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("moduleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Moduleid { get; set; } 

        [JsonProperty("thirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyid { get; set; } 

        [JsonProperty("thirdpartyurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyurl { get; set; } 

        [JsonProperty("thirdpartyordernumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyordernumber { get; set; } 

        [JsonProperty("thirdpartycustomerid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartycustomerid { get; set; } 

        [JsonProperty("thirdpartystatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartystatus { get; set; } 

        [JsonProperty("thirdpartystatus2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartystatus2 { get; set; } 

        [JsonProperty("thirdpartycreateddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Thirdpartycreateddate { get; set; } 

        [JsonProperty("integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_name { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("shop_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Shop_name { get; set; } 

        [JsonProperty("_unlink_from_ticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _unlink_from_ticket { get; set; } 

        [JsonProperty("jsonobj", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jsonobj { get; set; } 

        [JsonProperty("_amazon_buyer_info", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AmazonSellerBuyerInfo? _amazon_buyer_info { get; set; } 

        [JsonProperty("_adobecommerce_billing_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AdobeCommerceBilling_Address? _adobecommerce_billing_address { get; set; } 

        [JsonProperty("linked_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<EcommerceOrderFault>? Linked_tickets { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EcommerceOrderFault
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("eo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Eo_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("third_party_order_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_order_id { get; set; } 

        [JsonProperty("third_party_order_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_order_url { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EmailAddress
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address { get; set; } 

        [JsonProperty("routingType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? RoutingType { get; set; } 

        [JsonProperty("mailboxType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailboxType? MailboxType { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ItemId? Id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EmailRule
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("pop3serverid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pop3serverid { get; set; } 

        [JsonProperty("mailbox_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailbox_name { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body { get; set; } 

        [JsonProperty("fromaddr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fromaddr { get; set; } 

        [JsonProperty("toaddr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Toaddr { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("starttag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Starttag { get; set; } 

        [JsonProperty("endtag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Endtag { get; set; } 

        [JsonProperty("fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldname { get; set; } 

        [JsonProperty("length", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Length { get; set; } 

        [JsonProperty("useendofline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Useendofline { get; set; } 

        [JsonProperty("2starttag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _2starttag { get; set; } 

        [JsonProperty("2endtag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _2endtag { get; set; } 

        [JsonProperty("2fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _2fieldname { get; set; } 

        [JsonProperty("2length", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _2length { get; set; } 

        [JsonProperty("2useendofline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _2useendofline { get; set; } 

        [JsonProperty("3starttag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _3starttag { get; set; } 

        [JsonProperty("3endtag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _3endtag { get; set; } 

        [JsonProperty("3fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _3fieldname { get; set; } 

        [JsonProperty("3length", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _3length { get; set; } 

        [JsonProperty("3useendofline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _3useendofline { get; set; } 

        [JsonProperty("closestring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Closestring { get; set; } 

        [JsonProperty("requesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requesttype { get; set; } 

        [JsonProperty("4starttag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _4starttag { get; set; } 

        [JsonProperty("4endtag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _4endtag { get; set; } 

        [JsonProperty("4fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _4fieldname { get; set; } 

        [JsonProperty("4length", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _4length { get; set; } 

        [JsonProperty("4useendofline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _4useendofline { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("pagerduty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Pagerduty { get; set; } 

        [JsonProperty("fromaddrexact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fromaddrexact { get; set; } 

        [JsonProperty("toaddrexact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Toaddrexact { get; set; } 

        [JsonProperty("privateactions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Privateactions { get; set; } 

        [JsonProperty("3useticketuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _3useticketuser { get; set; } 

        [JsonProperty("fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<EmailRuleFieldMapping>? Fieldmappings { get; set; } 

        [JsonProperty("endtagmatchtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Endtagmatchtype { get; set; } 

        [JsonProperty("3matchtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _3matchtype { get; set; } 

        [JsonProperty("3endtagmatchtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _3endtagmatchtype { get; set; } 

        [JsonProperty("pagerdutyagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pagerdutyagent { get; set; } 

        [JsonProperty("pagerduty_service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pagerduty_service { get; set; } 

        [JsonProperty("pagerduty_service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pagerduty_service_name { get; set; } 

        [JsonProperty("5starttag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _5starttag { get; set; } 

        [JsonProperty("5endtag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _5endtag { get; set; } 

        [JsonProperty("5fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _5fieldname { get; set; } 

        [JsonProperty("5length", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _5length { get; set; } 

        [JsonProperty("5useendofline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _5useendofline { get; set; } 

        [JsonProperty("5endtagmatchtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _5endtagmatchtype { get; set; } 

        [JsonProperty("splunkoncall", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Splunkoncall { get; set; } 

        [JsonProperty("attachmentname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Attachmentname { get; set; } 

        [JsonProperty("attachmentmatchtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Attachmentmatchtype { get; set; } 

        [JsonProperty("matchonattachment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Matchonattachment { get; set; } 

        [JsonProperty("matchccandbcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Matchccandbcc { get; set; } 

        [JsonProperty("6starttag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _6starttag { get; set; } 

        [JsonProperty("6endtag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _6endtag { get; set; } 

        [JsonProperty("6length", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _6length { get; set; } 

        [JsonProperty("6useendofline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _6useendofline { get; set; } 

        [JsonProperty("6endtagmatchtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _6endtagmatchtype { get; set; } 

        [JsonProperty("always_close_alerts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Always_close_alerts { get; set; } 

        [JsonProperty("closed_alerts_read_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Closed_alerts_read_status { get; set; } 

        [JsonProperty("dontsendacknowledgement", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsendacknowledgement { get; set; } 

        [JsonProperty("scan_full_body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Scan_full_body { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("response_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Response_template_id { get; set; } 

        [JsonProperty("response_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Response_template_name { get; set; } 

        [JsonProperty("dont_update_from_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_from_address { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EmailRuleFieldMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("emailruleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailruleid { get; set; } 

        [JsonProperty("fieldid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fieldid { get; set; } 

        [JsonProperty("fieldtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fieldtype { get; set; } 

        [JsonProperty("searchtext", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Searchtext { get; set; } 

        [JsonProperty("starttag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Starttag { get; set; } 

        [JsonProperty("endtag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Endtag { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("searchresult", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Searchresult { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EmailStore
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ref { get; set; } 

        [JsonProperty("emailsubject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailsubject { get; set; } 

        [JsonProperty("emailbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailbody { get; set; } 

        [JsonProperty("emailbody_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailbody_html { get; set; } 

        [JsonProperty("emailto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailto { get; set; } 

        [JsonProperty("emailcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailcc { get; set; } 

        [JsonProperty("dateemailed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Dateemailed { get; set; } 

        [JsonProperty("emailattachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailattachments { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("templateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Templateid { get; set; } 

        [JsonProperty("emailbcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailbcc { get; set; } 

        [JsonProperty("keymessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Keymessage { get; set; } 

        [JsonProperty("reply_direct", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Reply_direct { get; set; } 

        [JsonProperty("replyaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Replyaddress { get; set; } 

        [JsonProperty("addactionaftersending", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Addactionaftersending { get; set; } 

        [JsonProperty("mailbox_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_id { get; set; } 

        [JsonProperty("org_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Org_id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("test_credentials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Mailbox? Test_credentials { get; set; } 

        [JsonProperty("_emailsent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _emailsent { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment>? Attachments { get; set; } 

        [JsonProperty("quotation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quotation_id { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("purchaseorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchaseorder_id { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_id { get; set; } 

        [JsonProperty("sales_mailbox_override_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sales_mailbox_override_id { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("bulk_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bulk_user_id { get; set; } 

        [JsonProperty("bulk_user_id_array", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Bulk_user_id_array { get; set; } 

        [JsonProperty("_isbatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isbatch { get; set; } 

        [JsonProperty("kb_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kb_id { get; set; } 

        [JsonProperty("report_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Report_id { get; set; } 

        [JsonProperty("from_dl_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? From_dl_id { get; set; } 

        [JsonProperty("add_to_feed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Add_to_feed { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EncoderFallback
    {
        [JsonProperty("maxCharCount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? MaxCharCount { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Encoding
    {
        [JsonProperty("bodyName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? BodyName { get; set; } 

        [JsonProperty("encodingName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EncodingName { get; set; } 

        [JsonProperty("headerName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? HeaderName { get; set; } 

        [JsonProperty("webName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? WebName { get; set; } 

        [JsonProperty("windowsCodePage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? WindowsCodePage { get; set; } 

        [JsonProperty("isBrowserDisplay", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsBrowserDisplay { get; set; } 

        [JsonProperty("isBrowserSave", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsBrowserSave { get; set; } 

        [JsonProperty("isMailNewsDisplay", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsMailNewsDisplay { get; set; } 

        [JsonProperty("isMailNewsSave", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsMailNewsSave { get; set; } 

        [JsonProperty("isSingleByte", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsSingleByte { get; set; } 

        [JsonProperty("encoderFallback", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public EncoderFallback? EncoderFallback { get; set; } 

        [JsonProperty("decoderFallback", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DecoderFallback? DecoderFallback { get; set; } 

        [JsonProperty("isReadOnly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsReadOnly { get; set; } 

        [JsonProperty("codePage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? CodePage { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EscMsg
    {
        [JsonProperty("emailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress { get; set; } 

        [JsonProperty("full", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Full { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("emailstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailstatus { get; set; } 

        [JsonProperty("popupstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Popupstatus { get; set; } 

        [JsonProperty("popupaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Popupaddress { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("emailbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailbody { get; set; } 

        [JsonProperty("emailbody_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailbody_html { get; set; } 

        [JsonProperty("ccaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ccaddress { get; set; } 

        [JsonProperty("smsstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Smsstatus { get; set; } 

        [JsonProperty("pushstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pushstatus { get; set; } 

        [JsonProperty("smsnos", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Smsnos { get; set; } 

        [JsonProperty("smsbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Smsbody { get; set; } 

        [JsonProperty("sendemailifnopopup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendemailifnopopup { get; set; } 

        [JsonProperty("slackid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Slackid { get; set; } 

        [JsonProperty("template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Template_id { get; set; } 

        [JsonProperty("approval_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_id { get; set; } 

        [JsonProperty("msteamsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Msteamsid { get; set; } 

        [JsonProperty("deleted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deleted { get; set; } 

        [JsonProperty("apiversion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Apiversion { get; set; } 

        [JsonProperty("integratorwarning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Integratorwarning { get; set; } 

        [JsonProperty("next_retry_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Next_retry_date { get; set; } 

        [JsonProperty("template_already_processed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Template_already_processed { get; set; } 

        [JsonProperty("mattermost_channelid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mattermost_channelid { get; set; } 

        [JsonProperty("replyto_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Replyto_address { get; set; } 

        [JsonProperty("mailbox_from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_from { get; set; } 

        [JsonProperty("batch_master", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Batch_master { get; set; } 

        [JsonProperty("batch_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Batch_use { get; set; } 

        [JsonProperty("batch_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Batch_status { get; set; } 

        [JsonProperty("batch_parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Batch_parent_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_ignoreperms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _ignoreperms { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("eventno", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Eventno { get; set; } 

        [JsonProperty("notification_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Notification_id { get; set; } 

        [JsonProperty("notification_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notification_name { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message { get; set; } 

        [JsonProperty("read_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Read_status { get; set; } 

        [JsonProperty("read_status_update", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Read_status_update { get; set; } 

        [JsonProperty("datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("action_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action_number { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("shown", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Shown { get; set; } 

        [JsonProperty("key_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key_id { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("status_update", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_update { get; set; } 

        [JsonProperty("popupcolour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Popupcolour { get; set; } 

        [JsonProperty("attachment_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Attachment_type { get; set; } 

        [JsonProperty("at_entity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? At_entity { get; set; } 

        [JsonProperty("at_uniqueid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? At_uniqueid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EventMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("eventrule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Eventrule_id { get; set; } 

        [JsonProperty("eventrule_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Eventrule_guid { get; set; } 

        [JsonProperty("integration_method_value_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_method_value_id { get; set; } 

        [JsonProperty("integration_method_value_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_method_value_name { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class EventRule
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("precedence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Precedence { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("tickettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Tickettype_guid { get; set; } 

        [JsonProperty("tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_name { get; set; } 

        [JsonProperty("template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Template_id { get; set; } 

        [JsonProperty("template_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Template_guid { get; set; } 

        [JsonProperty("template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Template_name { get; set; } 

        [JsonProperty("create_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Create_type { get; set; } 

        [JsonProperty("values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValue>? Values { get; set; } 

        [JsonProperty("criteria", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutoassignCriteria>? Criteria { get; set; } 

        [JsonProperty("mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<EventMapping>? Mappings { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("event_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event_key { get; set; } 

        [JsonProperty("hide_actions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_actions { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ExactDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("tokenexpiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Tokenexpiry { get; set; } 

        [JsonProperty("isauthorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isauthorized { get; set; } 

        [JsonProperty("redirecturi", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirecturi { get; set; } 

        [JsonProperty("clienttoplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clienttoplevel { get; set; } 

        [JsonProperty("itemgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itemgroup { get; set; } 

        [JsonProperty("enablesync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enablesync { get; set; } 

        [JsonProperty("defaultitemcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultitemcode { get; set; } 

        [JsonProperty("showmessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showmessage { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("syncentities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncentities { get; set; } 

        [JsonProperty("exdnewmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exdnewmethod { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_group_name { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("client_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_top_level_name { get; set; } 

        [JsonProperty("sync_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sync_entities_list { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("client_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_mappings { get; set; } 

        [JsonProperty("item_group_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Item_group_mappings { get; set; } 

        [JsonProperty("locale", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Locale { get; set; } 

        [JsonProperty("division", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Division { get; set; } 

        [JsonProperty("division_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Division_name { get; set; } 

        [JsonProperty("division_object", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExactDivision? Division_object { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ExactDivision
    {
        [JsonProperty("currentDivision", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? CurrentDivision { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Code { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Expense
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("fault_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fault_id { get; set; } 

        [JsonProperty("actionnumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionnumber { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount { get; set; } 

        [JsonProperty("lookup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup_id { get; set; } 

        [JsonProperty("date_added", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_added { get; set; } 

        [JsonProperty("date_reimbursed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_reimbursed { get; set; } 

        [JsonProperty("date_invoiced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_invoiced { get; set; } 

        [JsonProperty("invoiceable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Invoiceable { get; set; } 

        [JsonProperty("ihid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ihid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ExternalLink_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("table_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_id { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_name { get; set; } 

        [JsonProperty("halo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Halo_id { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("third_party_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_desc { get; set; } 

        [JsonProperty("third_party_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_type { get; set; } 

        [JsonProperty("third_party_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_url { get; set; } 

        [JsonProperty("third_party_assigned_to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_assigned_to { get; set; } 

        [JsonProperty("third_party_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Third_party_count { get; set; } 

        [JsonProperty("primary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Primary { get; set; } 

        [JsonProperty("halo_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_desc { get; set; } 

        [JsonProperty("halo_second_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Halo_second_id { get; set; } 

        [JsonProperty("halo_second_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_second_desc { get; set; } 

        [JsonProperty("extra_match_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Extra_match_field { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("third_party_secondary_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_secondary_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("third_party_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_status { get; set; } 

        [JsonProperty("third_party_priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_priority { get; set; } 

        [JsonProperty("_match", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _match { get; set; } 

        [JsonProperty("populate_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Populate_url { get; set; } 

        [JsonProperty("date_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_created { get; set; } 

        [JsonProperty("date_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_updated { get; set; } 

        [JsonProperty("subscription_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subscription_id { get; set; } 

        [JsonProperty("new_subscription_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_subscription_key { get; set; } 

        [JsonProperty("subscription_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Subscription_expiry { get; set; } 

        [JsonProperty("_webhookaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WebhookSubscriptionAction? _webhookaction { get; set; } 

        [JsonProperty("revisions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Revisions { get; set; } 

        [JsonProperty("dont_move_existing_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_existing_assets { get; set; } 

        [JsonProperty("chat_message_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chat_message_count { get; set; } 

        [JsonProperty("third_party_additional_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_additional_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FAQListHead
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("showforall", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showforall { get; set; } 

        [JsonProperty("showforallagents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showforallagents { get; set; } 

        [JsonProperty("level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Level { get; set; } 

        [JsonProperty("is_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_group { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("full_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Full_name { get; set; } 

        [JsonProperty("article_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Article_count { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Fields { get; set; } 

        [JsonProperty("grandparent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Grandparent_name { get; set; } 

        [JsonProperty("greatgrandparent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Greatgrandparent_name { get; set; } 

        [JsonProperty("greatgreatgrandparent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Greatgreatgrandparent_name { get; set; } 

        [JsonProperty("greatgreatgreatgrandparent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Greatgreatgreatgrandparent_name { get; set; } 

        [JsonProperty("fullgroup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fullgroup_name { get; set; } 

        [JsonProperty("roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserRoles>? Roles { get; set; } 

        [JsonProperty("draft_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserRoles>? Draft_roles { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("import_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_details_id { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Area_List>? Clients { get; set; } 

        [JsonProperty("dontshowonportal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontshowonportal { get; set; } 

        [JsonProperty("geo_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<GeoLocationRestriction>? Geo_restrictions { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("page_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Page_id { get; set; } 

        [JsonProperty("page_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Page_name { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("oauth_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oauth_code { get; set; } 

        [JsonProperty("new_user_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_user_token { get; set; } 

        [JsonProperty("new_page_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_page_token { get; set; } 

        [JsonProperty("redirect_uri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirect_uri { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("new", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New { get; set; } 

        [JsonProperty("base_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Base_address { get; set; } 

        [JsonProperty("page", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FacebookPage? Page { get; set; } 

        [JsonProperty("create_messenger_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_messenger_tickets { get; set; } 

        [JsonProperty("messenger_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messenger_ticket_type { get; set; } 

        [JsonProperty("messenger_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Messenger_ticket_type_name { get; set; } 

        [JsonProperty("messenger_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messenger_user { get; set; } 

        [JsonProperty("messenger_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Messenger_user_name { get; set; } 

        [JsonProperty("reopen_messenger_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Reopen_messenger_tickets { get; set; } 

        [JsonProperty("create_post_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Create_post_tickets { get; set; } 

        [JsonProperty("post_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Post_ticket_type { get; set; } 

        [JsonProperty("post_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Post_user { get; set; } 

        [JsonProperty("post_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Post_user_name { get; set; } 

        [JsonProperty("post_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Post_ticket_type_name { get; set; } 

        [JsonProperty("days_after_post", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Days_after_post { get; set; } 

        [JsonProperty("include_word_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Include_word_list { get; set; } 

        [JsonProperty("exclude_word_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Exclude_word_list { get; set; } 

        [JsonProperty("reopen_post_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Reopen_post_tickets { get; set; } 

        [JsonProperty("messenger_create_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Messenger_create_users { get; set; } 

        [JsonProperty("messenger_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messenger_site { get; set; } 

        [JsonProperty("messenger_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Messenger_site_name { get; set; } 

        [JsonProperty("post_create_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Post_create_users { get; set; } 

        [JsonProperty("post_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Post_site { get; set; } 

        [JsonProperty("ratings_create_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ratings_create_users { get; set; } 

        [JsonProperty("ratings_create_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ratings_create_tickets { get; set; } 

        [JsonProperty("ratings_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ratings_site { get; set; } 

        [JsonProperty("ratings_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ratings_ticket_type { get; set; } 

        [JsonProperty("ratings_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ratings_user { get; set; } 

        [JsonProperty("ratings_status_after_update", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ratings_status_after_update { get; set; } 

        [JsonProperty("ratings_only_negative", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ratings_only_negative { get; set; } 

        [JsonProperty("ads_create_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ads_create_users { get; set; } 

        [JsonProperty("ads_create_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ads_create_tickets { get; set; } 

        [JsonProperty("ads_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ads_site { get; set; } 

        [JsonProperty("ads_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ads_ticket_type { get; set; } 

        [JsonProperty("ads_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ads_user { get; set; } 

        [JsonProperty("ratings_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ratings_site_name { get; set; } 

        [JsonProperty("ratings_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ratings_ticket_type_name { get; set; } 

        [JsonProperty("ratings_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ratings_user_name { get; set; } 

        [JsonProperty("ads_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ads_site_name { get; set; } 

        [JsonProperty("ads_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ads_ticket_type_name { get; set; } 

        [JsonProperty("ads_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ads_user_name { get; set; } 

        [JsonProperty("ratings_status_after_update_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ratings_status_after_update_name { get; set; } 

        [JsonProperty("post_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Post_site_name { get; set; } 

        [JsonProperty("insta_messenger_create_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Insta_messenger_create_users { get; set; } 

        [JsonProperty("insta_messenger_create_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Insta_messenger_create_tickets { get; set; } 

        [JsonProperty("insta_messenger_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Insta_messenger_site { get; set; } 

        [JsonProperty("insta_messenger_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Insta_messenger_ticket_type { get; set; } 

        [JsonProperty("insta_messenger_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Insta_messenger_user { get; set; } 

        [JsonProperty("insta_reopen_messenger_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Insta_reopen_messenger_tickets { get; set; } 

        [JsonProperty("insta_messenger_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Insta_messenger_ticket_type_name { get; set; } 

        [JsonProperty("insta_messenger_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Insta_messenger_user_name { get; set; } 

        [JsonProperty("insta_messenger_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Insta_messenger_site_name { get; set; } 

        [JsonProperty("insta_create_post_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Insta_create_post_tickets { get; set; } 

        [JsonProperty("insta_post_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Insta_post_ticket_type { get; set; } 

        [JsonProperty("insta_post_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Insta_post_user { get; set; } 

        [JsonProperty("insta_post_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Insta_post_user_name { get; set; } 

        [JsonProperty("insta_post_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Insta_post_ticket_type_name { get; set; } 

        [JsonProperty("insta_days_after_post", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Insta_days_after_post { get; set; } 

        [JsonProperty("insta_include_word_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Insta_include_word_list { get; set; } 

        [JsonProperty("insta_exclude_word_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Insta_exclude_word_list { get; set; } 

        [JsonProperty("insta_reopen_post_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Insta_reopen_post_tickets { get; set; } 

        [JsonProperty("insta_post_create_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Insta_post_create_users { get; set; } 

        [JsonProperty("insta_post_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Insta_post_site { get; set; } 

        [JsonProperty("insta_post_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Insta_post_site_name { get; set; } 

        [JsonProperty("linked_instagram_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_instagram_account { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookKeyPair
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookMessage
    {
        [JsonProperty("sender", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FacebookKeyPair? Sender { get; set; } 

        [JsonProperty("recipient", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FacebookKeyPair? Recipient { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Timestamp { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FacebookMessageContent? Message { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookMessageAttachment
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("payload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FacebookMessagePayload? Payload { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookMessageContent
    {
        [JsonProperty("mid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mid { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FacebookMessageAttachment>? Attachments { get; set; } 

        [JsonProperty("is_deleted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_deleted { get; set; } 

        [JsonProperty("is_echo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_echo { get; set; } 

        [JsonProperty("is_unsupported", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_unsupported { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookMessagePayload
    {
        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookPage
    {
        [JsonProperty("access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Access_token { get; set; } 

        [JsonProperty("category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category { get; set; } 

        [JsonProperty("category_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FacebookKeyPair>? Category_list { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("tasks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Tasks { get; set; } 

        [JsonProperty("instagram_business_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public InstagramBusinessAccount? Instagram_business_account { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookWebhook
    {
        [JsonProperty("object", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Object { get; set; } 

        [JsonProperty("entry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FacebookWebhookEntry>? Entry { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookWebhookChange
    {
        [JsonProperty("field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FacebookWebhookEntry
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Time { get; set; } 

        [JsonProperty("messaging", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FacebookMessage>? Messaging { get; set; } 

        [JsonProperty("changes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FacebookWebhookChange>? Changes { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaqRequestType
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("faq_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faq_id { get; set; } 

        [JsonProperty("faq_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Faq_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultAdditionalAgents
    {
        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultApproval
    {
        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("purchase_order_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchase_order_id { get; set; } 

        [JsonProperty("purchase_order_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_order_ref { get; set; } 

        [JsonProperty("quote_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quote_id { get; set; } 

        [JsonProperty("quote_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Quote_ref { get; set; } 

        [JsonProperty("startdate_timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Startdate_timezone { get; set; } 

        [JsonProperty("startdate_with_timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeZone? Startdate_with_timezone { get; set; } 

        [JsonProperty("targetdate_timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Targetdate_timezone { get; set; } 

        [JsonProperty("targetdate_with_timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DateTimeZone? Targetdate_with_timezone { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_id { get; set; } 

        [JsonProperty("invoice_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_ref { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("actionnumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionnumber { get; set; } 

        [JsonProperty("emailstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailstatus { get; set; } 

        [JsonProperty("result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Result { get; set; } 

        [JsonProperty("emailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("adhoc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Adhoc { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("ticket_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_user_id { get; set; } 

        [JsonProperty("ticket_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_user_name { get; set; } 

        [JsonProperty("cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cab_id { get; set; } 

        [JsonProperty("templateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Templateid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("image", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Image { get; set; } 

        [JsonProperty("initials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Initials { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("requestor_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestor_agent_id { get; set; } 

        [JsonProperty("requestor_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestor_user_id { get; set; } 

        [JsonProperty("datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime { get; set; } 

        [JsonProperty("approval_process_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_process_id { get; set; } 

        [JsonProperty("approval_process_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approval_process_name { get; set; } 

        [JsonProperty("approval_process_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Approval_process_guid { get; set; } 

        [JsonProperty("approver_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approver_note { get; set; } 

        [JsonProperty("requestor_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestor_name { get; set; } 

        [JsonProperty("requestor_imgpath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestor_imgpath { get; set; } 

        [JsonProperty("requestor_colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestor_colour { get; set; } 

        [JsonProperty("requestor_initials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestor_initials { get; set; } 

        [JsonProperty("requestor_onlinestatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestor_onlinestatus { get; set; } 

        [JsonProperty("requestor_lastonline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestor_lastonline { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("_includeticketinresponse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _includeticketinresponse { get; set; } 

        [JsonProperty("attachment_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Attachment_View? Attachment_list { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Fields { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("agent_initials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_initials { get; set; } 

        [JsonProperty("agent_requestor_colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_requestor_colour { get; set; } 

        [JsonProperty("agent_requestor_imgpath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_requestor_imgpath { get; set; } 

        [JsonProperty("delegated_by_uid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Delegated_by_uid { get; set; } 

        [JsonProperty("votes_required_to_accept", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Votes_required_to_accept { get; set; } 

        [JsonProperty("votes_required_to_reject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Votes_required_to_reject { get; set; } 

        [JsonProperty("is_mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_mandatory { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("faresultchanged", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faresultchanged { get; set; } 

        [JsonProperty("token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token { get; set; } 

        [JsonProperty("uniqueid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uniqueid { get; set; } 

        [JsonProperty("signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Signature { get; set; } 

        [JsonProperty("newsignatureadded", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newsignatureadded { get; set; } 

        [JsonProperty("lastreminderdatetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastreminderdatetime { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("targetdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Targetdate { get; set; } 

        [JsonProperty("starttime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Starttime { get; set; } 

        [JsonProperty("targettime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Targettime { get; set; } 

        [JsonProperty("timetaken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Timetaken { get; set; } 

        [JsonProperty("allow_approver_attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_approver_attachments { get; set; } 

        [JsonProperty("holiday_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Holiday_id { get; set; } 

        [JsonProperty("holiday_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Holiday_ref { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment>? Attachments { get; set; } 

        [JsonProperty("admin_overridden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Admin_overridden { get; set; } 

        [JsonProperty("admin_override_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Admin_override_id { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Role_id { get; set; } 

        [JsonProperty("total_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_count { get; set; } 

        [JsonProperty("send_webhook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Send_webhook { get; set; } 

        [JsonProperty("dateapproved", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Dateapproved { get; set; } 

        [JsonProperty("step_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Step_id { get; set; } 

        [JsonProperty("step_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Step_name { get; set; } 

        [JsonProperty("approval_inprogress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Approval_inprogress { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("_isportalagentnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isportalagentnote { get; set; } 

        [JsonProperty("delegated_by_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delegated_by_username { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultBudget
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("budgettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Budgettype_id { get; set; } 

        [JsonProperty("budgettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Budgettype_name { get; set; } 

        [JsonProperty("hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours { get; set; } 

        [JsonProperty("days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Days { get; set; } 

        [JsonProperty("rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Rate { get; set; } 

        [JsonProperty("rate_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Rate_days { get; set; } 

        [JsonProperty("money", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Money { get; set; } 

        [JsonProperty("estimated_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Estimated_hours { get; set; } 

        [JsonProperty("estimated_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Estimated_days { get; set; } 

        [JsonProperty("estimated_money", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Estimated_money { get; set; } 

        [JsonProperty("actual_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Actual_hours { get; set; } 

        [JsonProperty("actual_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Actual_days { get; set; } 

        [JsonProperty("actual_money", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Actual_money { get; set; } 

        [JsonProperty("scheduled_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Scheduled_hours { get; set; } 

        [JsonProperty("scheduled_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Scheduled_days { get; set; } 

        [JsonProperty("scheduled_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Scheduled_value { get; set; } 

        [JsonProperty("toschedule_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Toschedule_hours { get; set; } 

        [JsonProperty("toschedule_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Toschedule_days { get; set; } 

        [JsonProperty("toschedule_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Toschedule_value { get; set; } 

        [JsonProperty("remaining_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Remaining_hours { get; set; } 

        [JsonProperty("remaining_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Remaining_days { get; set; } 

        [JsonProperty("remaining_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Remaining_value { get; set; } 

        [JsonProperty("quoteline_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quoteline_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultCommit
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultItem
    {
        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity { get; set; } 

        [JsonProperty("quantity_shipped", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_shipped { get; set; } 

        [JsonProperty("unit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unit { get; set; } 

        [JsonProperty("costprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costprice { get; set; } 

        [JsonProperty("price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Price { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("date_shipped", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_shipped { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("note2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note2 { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("supplier_part_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_part_code { get; set; } 

        [JsonProperty("stocklocation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stocklocation_id { get; set; } 

        [JsonProperty("stocklocation_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stocklocation_name { get; set; } 

        [JsonProperty("quantity_in_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_in_stock { get; set; } 

        [JsonProperty("asset_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_number { get; set; } 

        [JsonProperty("asset_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_site { get; set; } 

        [JsonProperty("warranty_reported", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Warranty_reported { get; set; } 

        [JsonProperty("selected", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Selected { get; set; } 

        [JsonProperty("stock_adjusted_already", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Stock_adjusted_already { get; set; } 

        [JsonProperty("cost_centre", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cost_centre { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("assetgroup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetgroup_name { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("assettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_name { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax { get; set; } 

        [JsonProperty("item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_tax_code { get; set; } 

        [JsonProperty("item_taxable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_taxable { get; set; } 

        [JsonProperty("item_generic", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_generic { get; set; } 

        [JsonProperty("item_recurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_recurring { get; set; } 

        [JsonProperty("item_internal_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_internal_reference { get; set; } 

        [JsonProperty("item_external_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_external_reference { get; set; } 

        [JsonProperty("item_tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_tax_name { get; set; } 

        [JsonProperty("net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_total { get; set; } 

        [JsonProperty("total_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price { get; set; } 

        [JsonProperty("total_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax { get; set; } 

        [JsonProperty("total_net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total { get; set; } 

        [JsonProperty("consignment_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Consignment_ids { get; set; } 

        [JsonProperty("asset_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_id { get; set; } 

        [JsonProperty("from_order_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? From_order_id { get; set; } 

        [JsonProperty("from_order_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? From_order_line { get; set; } 

        [JsonProperty("reserved_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Reserved_assets { get; set; } 

        [JsonProperty("inventory_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Inventory_number { get; set; } 

        [JsonProperty("stockbin_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stockbin_id { get; set; } 

        [JsonProperty("asset_type_matching_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_type_matching_field_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("budgettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Budgettype_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultOLA
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("fault_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fault_id { get; set; } 

        [JsonProperty("target_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Target_id { get; set; } 

        [JsonProperty("target_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Target_name { get; set; } 

        [JsonProperty("target_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Target_hours { get; set; } 

        [JsonProperty("actual_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Actual_hours { get; set; } 

        [JsonProperty("target_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Target_date { get; set; } 

        [JsonProperty("target_met", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Target_met { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("dates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FaultOLADates>? Dates { get; set; } 

        [JsonProperty("target", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WorkflowTarget? Target { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("pause_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Pause_date { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultOLADates
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("fault_ola", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fault_ola { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultRuleMatch
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("fault_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fault_id { get; set; } 

        [JsonProperty("rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_id { get; set; } 

        [JsonProperty("rule_sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_sequence { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("popupmsg", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Popupmsg { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultToDo
    {
        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("done", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Done { get; set; } 

        [JsonProperty("done_by_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Done_by_id { get; set; } 

        [JsonProperty("done_by_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Done_by_name { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("actual_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Actual_start { get; set; } 

        [JsonProperty("actual_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Actual_end { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("addedby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Addedby { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("group_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_seq { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultVector
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("vector", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Vector { get; set; } 

        [JsonProperty("datesynced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datesynced { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultVectorScore
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Use { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("matched_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Matched_id { get; set; } 

        [JsonProperty("search_score", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Search_score { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("date_occurred", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_occurred { get; set; } 

        [JsonProperty("date_closed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_closed { get; set; } 

        [JsonProperty("article_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Article_description { get; set; } 

        [JsonProperty("article_resolution", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Article_resolution { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultsDateDependencies
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("parentfaultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parentfaultid { get; set; } 

        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("dependentfaultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dependentfaultid { get; set; } 

        [JsonProperty("applied_from_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Applied_from_template { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultsForecasting
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultsMileStone
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("milestone_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Milestone_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("ticket_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FaultsTimeEntry
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("actioncode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actioncode { get; set; } 

        [JsonProperty("time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Time { get; set; } 

        [JsonProperty("actionbillingplanid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionbillingplanid { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Value { get; set; } 

        [JsonProperty("overridden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Overridden { get; set; } 

        [JsonProperty("actualtime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Actualtime { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Feedback
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key { get; set; } 

        [JsonProperty("score", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Score { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("comment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Comment { get; set; } 

        [JsonProperty("score_band", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Score_band { get; set; } 

        [JsonProperty("user_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_message { get; set; } 

        [JsonProperty("customsurveyfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customsurveyfields { get; set; } 

        [JsonProperty("recaptcha_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Recaptcha_token { get; set; } 

        [JsonProperty("feedback_faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Feedback_faultid { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Fields { get; set; } 

        [JsonProperty("automation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automation_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("ip_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ip_address { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Field
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("kind", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kind { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("typeinfo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Typeinfo_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("validate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Validate { get; set; } 

        [JsonProperty("systemuse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Systemuse { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("idstring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Idstring { get; set; } 

        [JsonProperty("datafrom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Datafrom { get; set; } 

        [JsonProperty("datalength", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Datalength { get; set; } 

        [JsonProperty("issoftware", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Issoftware { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup { get; set; } 

        [JsonProperty("mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mandatory { get; set; } 

        [JsonProperty("showoncalendar", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showoncalendar { get; set; } 

        [JsonProperty("moveupdatetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Moveupdatetype { get; set; } 

        [JsonProperty("inactiveupdatetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inactiveupdatetype { get; set; } 

        [JsonProperty("moveupdatedefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Moveupdatedefault { get; set; } 

        [JsonProperty("showonactivity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonactivity { get; set; } 

        [JsonProperty("values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Lookup>? Values { get; set; } 

        [JsonProperty("new_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_values { get; set; } 

        [JsonProperty("parenttype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parenttype_id { get; set; } 

        [JsonProperty("parenttype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parenttype_name { get; set; } 

        [JsonProperty("mapping_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mapping_id { get; set; } 

        [JsonProperty("order_values_alphanumerically", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Order_values_alphanumerically { get; set; } 

        [JsonProperty("tab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_id { get; set; } 

        [JsonProperty("tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tab_name { get; set; } 

        [JsonProperty("tab_sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_sequence { get; set; } 

        [JsonProperty("tab_columns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_columns { get; set; } 

        [JsonProperty("groupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Groupname { get; set; } 

        [JsonProperty("techdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Techdetail { get; set; } 

        [JsonProperty("userdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userdetail { get; set; } 

        [JsonProperty("visibility_conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldVisibility>? Visibility_conditions { get; set; } 

        [JsonProperty("access_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_level { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FieldGroup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("header", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Header { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Fields { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Tickettypes { get; set; } 

        [JsonProperty("outcomes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Outcomes { get; set; } 

        [JsonProperty("visibility_conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldVisibility>? Visibility_conditions { get; set; } 

        [JsonProperty("endusernew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Endusernew { get; set; } 

        [JsonProperty("enduserdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Enduserdetail { get; set; } 

        [JsonProperty("technew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technew { get; set; } 

        [JsonProperty("techdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Techdetail { get; set; } 

        [JsonProperty("enduseraction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Enduseraction { get; set; } 

        [JsonProperty("techaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Techaction { get; set; } 

        [JsonProperty("techdetailhideifempty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Techdetailhideifempty { get; set; } 

        [JsonProperty("enduserdetailhideifempty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enduserdetailhideifempty { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("collapsedbydefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Collapsedbydefault { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FieldHelper
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("validate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Validate { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Value { get; set; } 

        [JsonProperty("display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Display { get; set; } 

        [JsonProperty("mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mandatory { get; set; } 

        [JsonProperty("showonactivity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonactivity { get; set; } 

        [JsonProperty("lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup { get; set; } 

        [JsonProperty("systemuse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Systemuse { get; set; } 

        [JsonProperty("parenttype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parenttype_id { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("mapping_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mapping_id { get; set; } 

        [JsonProperty("access_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_level { get; set; } 

        [JsonProperty("typeinfo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Typeinfo_id { get; set; } 

        [JsonProperty("tab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_id { get; set; } 

        [JsonProperty("tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tab_name { get; set; } 

        [JsonProperty("tab_sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_sequence { get; set; } 

        [JsonProperty("tab_columns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_columns { get; set; } 

        [JsonProperty("groupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Groupname { get; set; } 

        [JsonProperty("techdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Techdetail { get; set; } 

        [JsonProperty("userdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userdetail { get; set; } 

        [JsonProperty("visibility_conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldVisibility>? Visibility_conditions { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FieldInfo
    {
        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Label { get; set; } 

        [JsonProperty("labellong", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Labellong { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("hint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hint { get; set; } 

        [JsonProperty("lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("custom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Custom { get; set; } 

        [JsonProperty("usage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Usage { get; set; } 

        [JsonProperty("usage_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Usage_guid { get; set; } 

        [JsonProperty("tab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_id { get; set; } 

        [JsonProperty("tab_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Tab_guid { get; set; } 

        [JsonProperty("tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tab_name { get; set; } 

        [JsonProperty("tab_sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_sequence { get; set; } 

        [JsonProperty("tab_columns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_columns { get; set; } 

        [JsonProperty("table_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_id { get; set; } 

        [JsonProperty("table_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Table_guid { get; set; } 

        [JsonProperty("table_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Table_name { get; set; } 

        [JsonProperty("readonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Readonly { get; set; } 

        [JsonProperty("addunknown", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Addunknown { get; set; } 

        [JsonProperty("extratype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Extratype { get; set; } 

        [JsonProperty("calcfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Calcfield { get; set; } 

        [JsonProperty("characterlimit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Characterlimit { get; set; } 

        [JsonProperty("characterlimittype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Characterlimittype { get; set; } 

        [JsonProperty("inputtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inputtype { get; set; } 

        [JsonProperty("copytochild", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytochild { get; set; } 

        [JsonProperty("copytoparent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytoparent { get; set; } 

        [JsonProperty("searchable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Searchable { get; set; } 

        [JsonProperty("user_searchable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? User_searchable { get; set; } 

        [JsonProperty("calendar_searchable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Calendar_searchable { get; set; } 

        [JsonProperty("defaultvalue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultvalue { get; set; } 

        [JsonProperty("ordervaluesalphanumerically", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ordervaluesalphanumerically { get; set; } 

        [JsonProperty("ordervalueby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ordervalueby { get; set; } 

        [JsonProperty("defaultvalue_lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultvalue_lookup { get; set; } 

        [JsonProperty("defaultvalue_table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomTableRow>? Defaultvalue_table { get; set; } 

        [JsonProperty("values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Lookup>? Values { get; set; } 

        [JsonProperty("table_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomTableRow>? Table_values { get; set; } 

        [JsonProperty("new_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_values { get; set; } 

        [JsonProperty("variable_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Variable_name { get; set; } 

        [JsonProperty("faults_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Faults_field_name { get; set; } 

        [JsonProperty("actions_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Actions_field_name { get; set; } 

        [JsonProperty("table_info", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public CustomTable? Table_info { get; set; } 

        [JsonProperty("client_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaField>? Client_restrictions { get; set; } 

        [JsonProperty("org_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OrganisationField>? Org_restrictions { get; set; } 

        [JsonProperty("database_lookup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Database_lookup_id { get; set; } 

        [JsonProperty("database_lookup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Database_lookup_name { get; set; } 

        [JsonProperty("database_lookup_auto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Database_lookup_auto { get; set; } 

        [JsonProperty("database_lookup_triggers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PartsLookupField>? Database_lookup_triggers { get; set; } 

        [JsonProperty("third_party_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_name { get; set; } 

        [JsonProperty("sqllookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sqllookup { get; set; } 

        [JsonProperty("copytochildonupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytochildonupdate { get; set; } 

        [JsonProperty("copytoparentonupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytoparentonupdate { get; set; } 

        [JsonProperty("showintable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showintable { get; set; } 

        [JsonProperty("importalias", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Importalias { get; set; } 

        [JsonProperty("hyperlink", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hyperlink { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Visibility { get; set; } 

        [JsonProperty("groupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Groupname { get; set; } 

        [JsonProperty("_testsql", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _testsql { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("showhintondetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showhintondetails { get; set; } 

        [JsonProperty("partslookupusedin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Partslookupusedin { get; set; } 

        [JsonProperty("showondetailsscreen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showondetailsscreen { get; set; } 

        [JsonProperty("selection_field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Selection_field_id { get; set; } 

        [JsonProperty("selection_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Selection_field_name { get; set; } 

        [JsonProperty("variable_format_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string? Variable_format_1 { get; set; } 

        [JsonProperty("variable_format_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string? Variable_format_2 { get; set; } 

        [JsonProperty("customextratableid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customextratableid { get; set; } 

        [JsonProperty("copytorelated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytorelated { get; set; } 

        [JsonProperty("deleteafterclosure", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deleteafterclosure { get; set; } 

        [JsonProperty("deleteafterclosuredays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Deleteafterclosuredays { get; set; } 

        [JsonProperty("defaultdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultdate { get; set; } 

        [JsonProperty("validation_data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldValidation>? Validation_data { get; set; } 

        [JsonProperty("calculation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Calculation { get; set; } 

        [JsonProperty("rounding", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rounding { get; set; } 

        [JsonProperty("regex", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Regex { get; set; } 

        [JsonProperty("onlyshowforagents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Onlyshowforagents { get; set; } 

        [JsonProperty("excludefromallfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Excludefromallfields { get; set; } 

        [JsonProperty("mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mandatory { get; set; } 

        [JsonProperty("visibility_conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldVisibility>? Visibility_conditions { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("inherit_ac_from_tickettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inherit_ac_from_tickettype { get; set; } 

        [JsonProperty("is_horizontal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_horizontal { get; set; } 

        [JsonProperty("sqlcfvariables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Sqlcfvariables { get; set; } 

        [JsonProperty("showoncrmnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showoncrmnote { get; set; } 

        [JsonProperty("database_lookup_input", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Database_lookup_input { get; set; } 

        [JsonProperty("table_data_entry_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_data_entry_type { get; set; } 

        [JsonProperty("isencrypted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isencrypted { get; set; } 

        [JsonProperty("table_height", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_height { get; set; } 

        [JsonProperty("sql_connection_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sql_connection_type { get; set; } 

        [JsonProperty("sql_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_user { get; set; } 

        [JsonProperty("sql_new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_new_password { get; set; } 

        [JsonProperty("sql_server", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_server { get; set; } 

        [JsonProperty("sql_database", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_database { get; set; } 

        [JsonProperty("sql_certificate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sql_certificate_id { get; set; } 

        [JsonProperty("sql_certificate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_certificate_name { get; set; } 

        [JsonProperty("lookup_request", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SqlLookupRequest? Lookup_request { get; set; } 

        [JsonProperty("max_selection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Max_selection { get; set; } 

        [JsonProperty("hint_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Hint_type { get; set; } 

        [JsonProperty("defaultdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultdays { get; set; } 

        [JsonProperty("new_storage_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_storage_method { get; set; } 

        [JsonProperty("where_sql", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Where_sql { get; set; } 

        [JsonProperty("load_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Load_type { get; set; } 

        [JsonProperty("hide_from_filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_from_filters { get; set; } 

        [JsonProperty("lookup_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup_method { get; set; } 

        [JsonProperty("integration_method_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_method_id { get; set; } 

        [JsonProperty("integration_method_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_method_name { get; set; } 

        [JsonProperty("integration_method_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_method_value { get; set; } 

        [JsonProperty("integration_method_value_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_method_value_name { get; set; } 

        [JsonProperty("display_property", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Display_property { get; set; } 

        [JsonProperty("value_property", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_property { get; set; } 

        [JsonProperty("showinpool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showinpool { get; set; } 

        [JsonProperty("allow_pool_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_pool_override { get; set; } 

        [JsonProperty("simplify_rich", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Simplify_rich { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FieldRoleRestriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FlowDetail
    {
        [JsonProperty("fdid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fdid { get; set; } 

        [JsonProperty("step_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Step_id { get; set; } 

        [JsonProperty("flow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flow_id { get; set; } 

        [JsonProperty("chatprofile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chatprofile_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("isstart", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isstart { get; set; } 

        [JsonProperty("isend", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isend { get; set; } 

        [JsonProperty("islaststep", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Islaststep { get; set; } 

        [JsonProperty("old_diagram_x", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Old_diagram_x { get; set; } 

        [JsonProperty("old_diagram_y", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Old_diagram_y { get; set; } 

        [JsonProperty("new_flow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_flow_id { get; set; } 

        [JsonProperty("stage_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stage_number { get; set; } 

        [JsonProperty("pipeline_stage_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pipeline_stage_id { get; set; } 

        [JsonProperty("pipeline_stage_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pipeline_stage_name { get; set; } 

        [JsonProperty("actions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FlowSubDetail>? Actions { get; set; } 

        [JsonProperty("overrideprobabiliywhenatthisstep", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Overrideprobabiliywhenatthisstep { get; set; } 

        [JsonProperty("probabilityoverridevalue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Probabilityoverridevalue { get; set; } 

        [JsonProperty("steptype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Steptype { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Message { get; set; } 

        [JsonProperty("message2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Message2 { get; set; } 

        [JsonProperty("message3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Message3 { get; set; } 

        [JsonProperty("auto_action", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_action { get; set; } 

        [JsonProperty("auto_action_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_action_type { get; set; } 

        [JsonProperty("auto_action_type_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Auto_action_type_guid { get; set; } 

        [JsonProperty("input_field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Input_field_id { get; set; } 

        [JsonProperty("newticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newticket_type { get; set; } 

        [JsonProperty("newticket_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newticket_tickettype_id { get; set; } 

        [JsonProperty("newticket_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newticket_template_id { get; set; } 

        [JsonProperty("step_conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutoassignCriteria>? Step_conditions { get; set; } 

        [JsonProperty("chat_teams", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SectionDetail_List>? Chat_teams { get; set; } 

        [JsonProperty("rules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Autoassign>? Rules { get; set; } 

        [JsonProperty("chat_image_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chat_image_type { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string? Note { get; set; } 

        [JsonProperty("newticket_service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newticket_service_id { get; set; } 

        [JsonProperty("content", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Content { get; set; } 

        [JsonProperty("ai_model", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string? Ai_model { get; set; } 

        [JsonProperty("virtual_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string? Virtual_agent_id { get; set; } 

        [JsonProperty("start_new_chat_flow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Start_new_chat_flow_id { get; set; } 

        [JsonProperty("iteration_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Iteration_type { get; set; } 

        [JsonProperty("iteration_batch_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Iteration_batch_size { get; set; } 

        [JsonProperty("use_batch_response", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_batch_response { get; set; } 

        [JsonProperty("newticket_sendlink", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newticket_sendlink { get; set; } 

        [JsonProperty("output_variables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValue>? Output_variables { get; set; } 

        [JsonProperty("runbook_variable_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValue>? Runbook_variable_mappings { get; set; } 

        [JsonProperty("chat_input_suggestions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChatInputSuggestion>? Chat_input_suggestions { get; set; } 

        [JsonProperty("chat_step_questions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChatStepQuestion>? Chat_step_questions { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FlowHeader
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("notinuse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Notinuse { get; set; } 

        [JsonProperty("flow_chart_json", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Flow_chart_json { get; set; } 

        [JsonProperty("steps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FlowDetail>? Steps { get; set; } 

        [JsonProperty("always_allow_actions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TOutcome>? Always_allow_actions { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("stages", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FlowStages>? Stages { get; set; } 

        [JsonProperty("in_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? In_use { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("targets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<WorkflowTarget>? Targets { get; set; } 

        [JsonProperty("workflow_history", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<WorkflowHistory>? Workflow_history { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FlowStages
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("flow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flow_id { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("edit_outcome", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Edit_outcome { get; set; } 

        [JsonProperty("outcome_step", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome_step { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FlowSubDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("flow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flow_id { get; set; } 

        [JsonProperty("chatprofile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chatprofile_id { get; set; } 

        [JsonProperty("start_step", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Start_step { get; set; } 

        [JsonProperty("end_step", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? End_step { get; set; } 

        [JsonProperty("old_diagram_startpos", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Old_diagram_startpos { get; set; } 

        [JsonProperty("old_diagram_endpos", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Old_diagram_endpos { get; set; } 

        [JsonProperty("action_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action_type { get; set; } 

        [JsonProperty("action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action_id { get; set; } 

        [JsonProperty("action_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Action_guid { get; set; } 

        [JsonProperty("action_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_name { get; set; } 

        [JsonProperty("action_colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_colour { get; set; } 

        [JsonProperty("action_outcome", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_outcome { get; set; } 

        [JsonProperty("time_limit_mins", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Time_limit_mins { get; set; } 

        [JsonProperty("use_work_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_work_hours { get; set; } 

        [JsonProperty("time_limit_action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Time_limit_action_id { get; set; } 

        [JsonProperty("time_limit_action_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Time_limit_action_guid { get; set; } 

        [JsonProperty("time_limit_action_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Time_limit_action_name { get; set; } 

        [JsonProperty("automation_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automation_type { get; set; } 

        [JsonProperty("automation_action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automation_action_id { get; set; } 

        [JsonProperty("automation_action_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Automation_action_guid { get; set; } 

        [JsonProperty("automation_action_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Automation_action_name { get; set; } 

        [JsonProperty("automation_runbook_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Automation_runbook_id { get; set; } 

        [JsonProperty("automation_runbook_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Automation_runbook_name { get; set; } 

        [JsonProperty("automation_execution_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automation_execution_type { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("approval_result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_result { get; set; } 

        [JsonProperty("restricted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Restricted { get; set; } 

        [JsonProperty("conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutoassignCriteria>? Conditions { get; set; } 

        [JsonProperty("conditions_exec", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutoassignCriteria>? Conditions_exec { get; set; } 

        [JsonProperty("restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FlowSubDetailRestriction>? Restrictions { get; set; } 

        [JsonProperty("todo_group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Todo_group_id { get; set; } 

        [JsonProperty("todo_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Todo_group_name { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("chat_selection_order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chat_selection_order { get; set; } 

        [JsonProperty("number_of_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Number_of_days { get; set; } 

        [JsonProperty("date_field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Date_field_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FlowSubDetailRestriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("flowsubdetail_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flowsubdetail_id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("value_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_id { get; set; } 

        [JsonProperty("value_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FormattedEmail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("fmid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fmid { get; set; } 

        [JsonProperty("fmdata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fmdata { get; set; } 

        [JsonProperty("customer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customer { get; set; } 

        [JsonProperty("priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Priority { get; set; } 

        [JsonProperty("dateopened", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dateopened { get; set; } 

        [JsonProperty("site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site { get; set; } 

        [JsonProperty("email_to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_to { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("timeopened", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timeopened { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Details { get; set; } 

        [JsonProperty("tickettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype { get; set; } 

        [JsonProperty("agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent { get; set; } 

        [JsonProperty("team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team { get; set; } 

        [JsonProperty("category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category1 { get; set; } 

        [JsonProperty("category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category2 { get; set; } 

        [JsonProperty("category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category3 { get; set; } 

        [JsonProperty("category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category4 { get; set; } 

        [JsonProperty("opportunity_contact_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Opportunity_contact_name { get; set; } 

        [JsonProperty("opportunity_company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Opportunity_company_name { get; set; } 

        [JsonProperty("opportunity_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Opportunity_email { get; set; } 

        [JsonProperty("opportunity_phone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Opportunity_phone { get; set; } 

        [JsonProperty("opportunity_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Opportunity_value { get; set; } 

        [JsonProperty("email_cc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_cc { get; set; } 

        [JsonProperty("opportunity_country", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Opportunity_country { get; set; } 

        [JsonProperty("template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Template_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FortnoxDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

        [JsonProperty("isauthorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isauthorized { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("client_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_top_level { get; set; } 

        [JsonProperty("client_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_top_level_name { get; set; } 

        [JsonProperty("show_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_message { get; set; } 

        [JsonProperty("sync_entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sync_entities { get; set; } 

        [JsonProperty("item_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_group { get; set; } 

        [JsonProperty("sync_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sync_entities_list { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_group_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FreshdeskAttachment
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("content_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Content_type { get; set; } 

        [JsonProperty("size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Size { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("attachment_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Attachment_url { get; set; } 

        [JsonProperty("created_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Created_at { get; set; } 

        [JsonProperty("updated_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Updated_at { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FreshdeskCompany
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FreshdeskPriority
    {
        [JsonProperty("respond_within", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Respond_within { get; set; } 

        [JsonProperty("resolve_within", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resolve_within { get; set; } 

        [JsonProperty("next_respond_within", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Next_respond_within { get; set; } 

        [JsonProperty("business_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Business_hours { get; set; } 

        [JsonProperty("escalation_enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Escalation_enabled { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FreshdeskSLA
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("is_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_default { get; set; } 

        [JsonProperty("position", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Position { get; set; } 

        [JsonProperty("created_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Created_at { get; set; } 

        [JsonProperty("updated_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Updated_at { get; set; } 

        [JsonProperty("sla_target", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, FreshdeskPriority>? Sla_target { get; set; } 

        [JsonProperty("applicable_to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Applicable_to { get; set; } 

        [JsonProperty("escalation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Escalation { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FreshdeskStats
    {
        [JsonProperty("agent_responded_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_responded_at { get; set; } 

        [JsonProperty("responder_responded_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Responder_responded_at { get; set; } 

        [JsonProperty("first_responded_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? First_responded_at { get; set; } 

        [JsonProperty("status_updated_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_updated_at { get; set; } 

        [JsonProperty("reopened_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reopened_at { get; set; } 

        [JsonProperty("resolved_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resolved_at { get; set; } 

        [JsonProperty("closed_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Closed_at { get; set; } 

        [JsonProperty("pending_since", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pending_since { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FreshdeskTicket
    {
        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FreshdeskAttachment>? Attachments { get; set; } 

        [JsonProperty("cc_emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Cc_emails { get; set; } 

        [JsonProperty("company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Company_id { get; set; } 

        [JsonProperty("deleted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deleted { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("description_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description_text { get; set; } 

        [JsonProperty("due_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Due_by { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("email_config_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Email_config_id { get; set; } 

        [JsonProperty("facebook_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Facebook_id { get; set; } 

        [JsonProperty("fr_due_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fr_due_by { get; set; } 

        [JsonProperty("fr_escalated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fr_escalated { get; set; } 

        [JsonProperty("fwd_emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Fwd_emails { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Group_id { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("is_escalated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_escalated { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("phone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone { get; set; } 

        [JsonProperty("priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority { get; set; } 

        [JsonProperty("product_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Product_id { get; set; } 

        [JsonProperty("reply_cc_emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Reply_cc_emails { get; set; } 

        [JsonProperty("requester_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Requester_id { get; set; } 

        [JsonProperty("responder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Responder_id { get; set; } 

        [JsonProperty("source", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Source { get; set; } 

        [JsonProperty("spam", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Spam { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tags { get; set; } 

        [JsonProperty("to_emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? To_emails { get; set; } 

        [JsonProperty("twitter_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Twitter_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("created_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Created_at { get; set; } 

        [JsonProperty("updated_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Updated_at { get; set; } 

        [JsonProperty("requester", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FreshdeskUser? Requester { get; set; } 

        [JsonProperty("stats", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FreshdeskStats? Stats { get; set; } 

        [JsonProperty("company", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FreshdeskCompany? Company { get; set; } 

        [JsonProperty("sla_policy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FreshdeskSLA? Sla_policy { get; set; } 

        [JsonProperty("custom_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, string?>? Custom_fields { get; set; } 

        [JsonProperty("association_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Association_type { get; set; } 

        [JsonProperty("associated_tickets_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Associated_tickets_list { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FreshdeskUser
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("mobile", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mobile { get; set; } 

        [JsonProperty("phone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address { get; set; } 

        [JsonProperty("avatar", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Avatar { get; set; } 

        [JsonProperty("company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Company_id { get; set; } 

        [JsonProperty("view_all_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? View_all_tickets { get; set; } 

        [JsonProperty("deleted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deleted { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("job_title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Job_title { get; set; } 

        [JsonProperty("language", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Language { get; set; } 

        [JsonProperty("other_emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Other_emails { get; set; } 

        [JsonProperty("tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tags { get; set; } 

        [JsonProperty("time_zone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Time_zone { get; set; } 

        [JsonProperty("twitter_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Twitter_id { get; set; } 

        [JsonProperty("unique_external_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Unique_external_id { get; set; } 

        [JsonProperty("created_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Created_at { get; set; } 

        [JsonProperty("updated_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Updated_at { get; set; } 

        [JsonProperty("custom_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, string?>? Custom_fields { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GenerateExternalLink
    {
        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tenant_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Generic
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("memo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Memo { get; set; } 

        [JsonProperty("islan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Islan { get; set; } 

        [JsonProperty("connector", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Connector { get; set; } 

        [JsonProperty("showasitem", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showasitem { get; set; } 

        [JsonProperty("showasequip", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showasequip { get; set; } 

        [JsonProperty("showwarningifonrequest", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showwarningifonrequest { get; set; } 

        [JsonProperty("moveassetonrequest", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Moveassetonrequest { get; set; } 

        [JsonProperty("defaultsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultsite { get; set; } 

        [JsonProperty("kaseyaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kaseyaid { get; set; } 

        [JsonProperty("items_in_group_no_consign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Items_in_group_no_consign { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("assettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Xtype>? Assettypes { get; set; } 

        [JsonProperty("thirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyid { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("isfixedasset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isfixedasset { get; set; } 

        [JsonProperty("nominalcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode { get; set; } 

        [JsonProperty("nominalcode_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode_name { get; set; } 

        [JsonProperty("nominalcodepurchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcodepurchase { get; set; } 

        [JsonProperty("nominalcode_name_purchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode_name_purchase { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("tcsnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tcsnote { get; set; } 

        [JsonProperty("accounts_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<GenericAccountsMappings>? Accounts_mappings { get; set; } 

        [JsonProperty("tax_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tax_id { get; set; } 

        [JsonProperty("tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_name { get; set; } 

        [JsonProperty("tax_id_purchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tax_id_purchase { get; set; } 

        [JsonProperty("tax_name_purchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_name_purchase { get; set; } 

        [JsonProperty("itemcode_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itemcode_id { get; set; } 

        [JsonProperty("itemcode_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itemcode_name { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("import_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_details_id { get; set; } 

        [JsonProperty("multipleaccountstenants", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Multipleaccountstenants { get; set; } 

        [JsonProperty("invoice_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_class { get; set; } 

        [JsonProperty("qbo_item_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qbo_item_type { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("item_recurring_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_recurring_default { get; set; } 

        [JsonProperty("item_donttrackstock_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_donttrackstock_default { get; set; } 

        [JsonProperty("item_doesnotneedconsigning_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_doesnotneedconsigning_default { get; set; } 

        [JsonProperty("item_contract_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_contract_default { get; set; } 

        [JsonProperty("item_assettype_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_assettype_default { get; set; } 

        [JsonProperty("item_billing_period_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_billing_period_default { get; set; } 

        [JsonProperty("avalara_item_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_item_code { get; set; } 

        [JsonProperty("item_assettype_name_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_assettype_name_default { get; set; } 

        [JsonProperty("xero_category_1_lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_1_lookup { get; set; } 

        [JsonProperty("xero_category_2_lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_2_lookup { get; set; } 

        [JsonProperty("xero_category_1_lookup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_1_lookup_name { get; set; } 

        [JsonProperty("xero_category_2_lookup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_2_lookup_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GenericAccountsMappings
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("gid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Gid { get; set; } 

        [JsonProperty("tenantid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenantid { get; set; } 

        [JsonProperty("tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant_name { get; set; } 

        [JsonProperty("nominalcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode { get; set; } 

        [JsonProperty("nominalcode_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode_name { get; set; } 

        [JsonProperty("nominalcode_purchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode_purchase { get; set; } 

        [JsonProperty("nominalcode_name_purchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode_name_purchase { get; set; } 

        [JsonProperty("itemcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itemcode { get; set; } 

        [JsonProperty("itemcode_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itemcode_name { get; set; } 

        [JsonProperty("taxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Taxcode { get; set; } 

        [JsonProperty("tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_name { get; set; } 

        [JsonProperty("taxcode_purchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Taxcode_purchase { get; set; } 

        [JsonProperty("tax_name_purchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_name_purchase { get; set; } 

        [JsonProperty("xero_category_1_lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_1_lookup { get; set; } 

        [JsonProperty("xero_category_2_lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_2_lookup { get; set; } 

        [JsonProperty("xero_category_1_lookup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_1_lookup_name { get; set; } 

        [JsonProperty("xero_category_2_lookup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_2_lookup_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GeoLocationRestriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("table_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_id { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id { get; set; } 

        [JsonProperty("country_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Country_code { get; set; } 

        [JsonProperty("continent_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Continent_code { get; set; } 

        [JsonProperty("exclude", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exclude { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GmailMessage
    {
        [JsonProperty("haloMailboxId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? HaloMailboxId { get; set; } 

        [JsonProperty("mimeMessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MimeMessage? MimeMessage { get; set; } 

        [JsonProperty("incomingEmailId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? IncomingEmailId { get; set; } 

        [JsonProperty("historyId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? HistoryId { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("internalDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? InternalDate { get; set; } 

        [JsonProperty("labelIds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? LabelIds { get; set; } 

        [JsonProperty("payload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MessagePart? Payload { get; set; } 

        [JsonProperty("raw", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Raw { get; set; } 

        [JsonProperty("sizeEstimate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? SizeEstimate { get; set; } 

        [JsonProperty("snippet", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snippet { get; set; } 

        [JsonProperty("threadId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ThreadId { get; set; } 

        [JsonProperty("eTag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ETag { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GoogleBusinessAnswer
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("author", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public GoogleReviewer? Author { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("createTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CreateTime { get; set; } 

        [JsonProperty("updateTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UpdateTime { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GoogleBusinessDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("connectionname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectionname { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _code { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Account { get; set; } 

        [JsonProperty("location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Location { get; set; } 

        [JsonProperty("account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Account_name { get; set; } 

        [JsonProperty("location_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Location_name { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GoogleBusinessQuestion
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("author", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public GoogleReviewer? Author { get; set; } 

        [JsonProperty("upvoteCount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? UpvoteCount { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("createTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CreateTime { get; set; } 

        [JsonProperty("updateTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UpdateTime { get; set; } 

        [JsonProperty("totalAnswerCount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TotalAnswerCount { get; set; } 

        [JsonProperty("topAnswers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<GoogleBusinessAnswer>? TopAnswers { get; set; } 

        [JsonProperty("gbdid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Gbdid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GoogleBusinessReview
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("reviewId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ReviewId { get; set; } 

        [JsonProperty("reviewer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public GoogleReviewer? Reviewer { get; set; } 

        [JsonProperty("starRating", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? StarRating { get; set; } 

        [JsonProperty("comment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Comment { get; set; } 

        [JsonProperty("createTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? CreateTime { get; set; } 

        [JsonProperty("updateTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UpdateTime { get; set; } 

        [JsonProperty("reviewReply", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public GoogleBusinessReviewReply? ReviewReply { get; set; } 

        [JsonProperty("gbdid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Gbdid { get; set; } 

        [JsonProperty("starRating_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? StarRating_int { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GoogleBusinessReviewReply
    {
        [JsonProperty("comment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Comment { get; set; } 

        [JsonProperty("updateTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UpdateTime { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GoogleReviewer
    {
        [JsonProperty("profilePhotoUrl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProfilePhotoUrl { get; set; } 

        [JsonProperty("profilePhotoUri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProfilePhotoUri { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("displayName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? DisplayName { get; set; } 

        [JsonProperty("isAnonymous", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsAnonymous { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class GoogleWorkplaceMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("customerid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customerid { get; set; } 

        [JsonProperty("siteid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Siteid { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("filterfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filterfield { get; set; } 

        [JsonProperty("filtertype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filtertype { get; set; } 

        [JsonProperty("filtervalue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filtervalue { get; set; } 

        [JsonProperty("roleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Roleid { get; set; } 

        [JsonProperty("filter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Filter { get; set; } 

        [JsonProperty("userroleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userroleid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class HaloNews
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Details { get; set; } 

        [JsonProperty("css", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Css { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("button_label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Button_label { get; set; } 

        [JsonProperty("button_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Button_url { get; set; } 

        [JsonProperty("height", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Height { get; set; } 

        [JsonProperty("theme_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Theme_name { get; set; } 

        [JsonProperty("theme_base", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Theme_base { get; set; } 

        [JsonProperty("theme_css", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Theme_css { get; set; } 

        [JsonProperty("theme_colour_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Theme_colour_type { get; set; } 

        [JsonProperty("theme_colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Theme_colour { get; set; } 

        [JsonProperty("one_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? One_version { get; set; } 

        [JsonProperty("one_patch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? One_patch { get; set; } 

        [JsonProperty("min_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Min_version { get; set; } 

        [JsonProperty("min_version_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Min_version_seq { get; set; } 

        [JsonProperty("max_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Max_version { get; set; } 

        [JsonProperty("max_version_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Max_version_seq { get; set; } 

        [JsonProperty("one_dbid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? One_dbid { get; set; } 

        [JsonProperty("one_product", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? One_product { get; set; } 

        [JsonProperty("db_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Db_location { get; set; } 

        [JsonProperty("version_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version_group { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("agent_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_type { get; set; } 

        [JsonProperty("customer_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customer_type { get; set; } 

        [JsonProperty("enabled_module", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Enabled_module { get; set; } 

        [JsonProperty("read", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Read { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Header
    {
        [JsonProperty("offset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Offset { get; set; } 

        [JsonProperty("field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public HeaderId? Id { get; set; } 

        [JsonProperty("rawField", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public byte[]? RawField { get; set; } 

        [JsonProperty("rawValue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public byte[]? RawValue { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum HeaderId
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

        _5 = 5,

        _6 = 6,

        _7 = 7,

        _8 = 8,

        _9 = 9,

        _10 = 10,

        _11 = 11,

        _12 = 12,

        _13 = 13,

        _14 = 14,

        _15 = 15,

        _16 = 16,

        _17 = 17,

        _18 = 18,

        _19 = 19,

        _20 = 20,

        _21 = 21,

        _22 = 22,

        _23 = 23,

        _24 = 24,

        _25 = 25,

        _26 = 26,

        _27 = 27,

        _28 = 28,

        _29 = 29,

        _30 = 30,

        _31 = 31,

        _32 = 32,

        _33 = 33,

        _34 = 34,

        _35 = 35,

        _36 = 36,

        _37 = 37,

        _38 = 38,

        _39 = 39,

        _40 = 40,

        _41 = 41,

        _42 = 42,

        _43 = 43,

        _44 = 44,

        _45 = 45,

        _46 = 46,

        _47 = 47,

        _48 = 48,

        _49 = 49,

        _50 = 50,

        _51 = 51,

        _52 = 52,

        _53 = 53,

        _54 = 54,

        _55 = 55,

        _56 = 56,

        _57 = 57,

        _58 = 58,

        _59 = 59,

        _60 = 60,

        _61 = 61,

        _62 = 62,

        _63 = 63,

        _64 = 64,

        _65 = 65,

        _66 = 66,

        _67 = 67,

        _68 = 68,

        _69 = 69,

        _70 = 70,

        _71 = 71,

        _72 = 72,

        _73 = 73,

        _74 = 74,

        _75 = 75,

        _76 = 76,

        _77 = 77,

        _78 = 78,

        _79 = 79,

        _80 = 80,

        _81 = 81,

        _82 = 82,

        _83 = 83,

        _84 = 84,

        _85 = 85,

        _86 = 86,

        _87 = 87,

        _88 = 88,

        _89 = 89,

        _90 = 90,

        _91 = 91,

        _92 = 92,

        _93 = 93,

        _94 = 94,

        _95 = 95,

        _96 = 96,

        _97 = 97,

        _98 = 98,

        _99 = 99,

        _100 = 100,

        _101 = 101,

        _102 = 102,

        _103 = 103,

        _104 = 104,

        _105 = 105,

        _106 = 106,

        _107 = 107,

        _108 = 108,

        _109 = 109,

        _110 = 110,

        _111 = 111,

        _112 = 112,

        _113 = 113,

        _114 = 114,

        _115 = 115,

        _116 = 116,

        _117 = 117,

        _118 = 118,

        _119 = 119,

        _120 = 120,

        _121 = 121,

        _122 = 122,

        _123 = 123,

        _124 = 124,

        _125 = 125,

        _126 = 126,

        _127 = 127,

        _128 = 128,

        _129 = 129,

        _130 = 130,

        __1 = -1,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Holidays
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; } 

        [JsonProperty("holid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Holid { get; set; } 

        [JsonProperty("workday_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workday_id { get; set; } 

        [JsonProperty("workday_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Workday_guid { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("allday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allday { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("duration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Duration { get; set; } 

        [JsonProperty("holiday_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Holiday_type { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("entity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity { get; set; } 

        [JsonProperty("_force", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _force { get; set; } 

        [JsonProperty("date_only", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_only { get; set; } 

        [JsonProperty("end_date_only", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date_only { get; set; } 

        [JsonProperty("isrecurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isrecurring { get; set; } 

        [JsonProperty("schedule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Schedule? Schedule { get; set; } 

        [JsonProperty("schedulehandledtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Schedulehandledtype { get; set; } 

        [JsonProperty("createnextappt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Createnextappt { get; set; } 

        [JsonProperty("approval_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Approval_start { get; set; } 

        [JsonProperty("approvalnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalnote { get; set; } 

        [JsonProperty("approval_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_status { get; set; } 

        [JsonProperty("_return_appointment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _return_appointment { get; set; } 

        [JsonProperty("appointmentobj", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Appointment? Appointmentobj { get; set; } 

        [JsonProperty("thirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyid { get; set; } 

        [JsonProperty("date_datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_datetime { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class HtmlDesign
    {
        [JsonProperty("design", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Design { get; set; } 

        [JsonProperty("html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Html { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class HubspotWebhook
    {
        [JsonProperty("eventId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EventId { get; set; } 

        [JsonProperty("subscriptionId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SubscriptionId { get; set; } 

        [JsonProperty("portalId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PortalId { get; set; } 

        [JsonProperty("appId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? AppId { get; set; } 

        [JsonProperty("occurredAt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? OccurredAt { get; set; } 

        [JsonProperty("subscriptionType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SubscriptionType { get; set; } 

        [JsonProperty("attemptNumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? AttemptNumber { get; set; } 

        [JsonProperty("objectId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ObjectId { get; set; } 

        [JsonProperty("objectTypeId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ObjectTypeId { get; set; } 

        [JsonProperty("propertyName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PropertyName { get; set; } 

        [JsonProperty("propertyValue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PropertyValue { get; set; } 

        [JsonProperty("changeSource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ChangeSource { get; set; } 

        [JsonProperty("sourceId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SourceId { get; set; } 

        [JsonProperty("isSensitive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsSensitive { get; set; } 

        [JsonProperty("changeFlag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ChangeFlag { get; set; } 

        [JsonProperty("eventTypeNum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public RelayEventType? EventTypeNum { get; set; } 

        [JsonProperty("eventCategoryNum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public RelayEventCategory? EventCategoryNum { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IMAPMessage
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("haloMailboxId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? HaloMailboxId { get; set; } 

        [JsonProperty("incomingEmailId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? IncomingEmailId { get; set; } 

        [JsonProperty("mimeMessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MimeMessage? MimeMessage { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IMRWebhook
    {
        [JsonProperty("topic", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Topic { get; set; } 

        [JsonProperty("event", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event { get; set; } 

        [JsonProperty("eventTimeStamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? EventTimeStamp { get; set; } 

        [JsonProperty("eventId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EventId { get; set; } 

        [JsonProperty("resource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Resource { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IframeTabRequestType
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("iframetab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Iframetab_id { get; set; } 

        [JsonProperty("iframetab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Iframetab_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ImpersonationRequest
    {
        [JsonProperty("irid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Irid { get; set; } 

        [JsonProperty("requestor", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestor { get; set; } 

        [JsonProperty("agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("enc_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Enc_id { get; set; } 

        [JsonProperty("token_used", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Token_used { get; set; } 

        [JsonProperty("used_timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Used_timestamp { get; set; } 

        [JsonProperty("jwt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jwt { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ImportCsv
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings { get; set; } 

        [JsonProperty("create_new_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_new_lines { get; set; } 

        [JsonProperty("one_time_charges", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? One_time_charges { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IncomingEmail
    {
        [JsonProperty("old_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Old_id { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("mbid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mbid { get; set; } 

        [JsonProperty("agentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agentid { get; set; } 

        [JsonProperty("addactiontofaultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Addactiontofaultid { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("dateprocessed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Dateprocessed { get; set; } 

        [JsonProperty("memo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Memo { get; set; } 

        [JsonProperty("processed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Processed { get; set; } 

        [JsonProperty("delete", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete { get; set; } 

        [JsonProperty("issalesmb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Issalesmb { get; set; } 

        [JsonProperty("from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From { get; set; } 

        [JsonProperty("html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Html { get; set; } 

        [JsonProperty("to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? To { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Users? User { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("mailid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailid { get; set; } 

        [JsonProperty("data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public byte[]? Data { get; set; } 

        [JsonProperty("source", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Source { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("removed_from_mailbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Removed_from_mailbox { get; set; } 

        [JsonProperty("retry_remaining", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Retry_remaining { get; set; } 

        [JsonProperty("last_attempt_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_attempt_date { get; set; } 

        [JsonProperty("_checkmailid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _checkmailid { get; set; } 

        [JsonProperty("_downloadmail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _downloadmail { get; set; } 

        [JsonProperty("mailbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Mailbox? Mailbox { get; set; } 

        [JsonProperty("mailbox_type_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_type_int { get; set; } 

        [JsonProperty("outbound", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Outbound { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IncomingEvent
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_id { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("duration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Duration { get; set; } 

        [JsonProperty("requestheaders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestheaders { get; set; } 

        [JsonProperty("requestbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestbody { get; set; } 

        [JsonProperty("responsestatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Responsestatus { get; set; } 

        [JsonProperty("responsebody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Responsebody { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Error { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("deletion_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Deletion_date { get; set; } 

        [JsonProperty("output_variables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValue>? Output_variables { get; set; } 

        [JsonProperty("_retry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _retry { get; set; } 

        [JsonProperty("_apply_this_rule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _apply_this_rule { get; set; } 

        [JsonProperty("_is_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_link { get; set; } 

        [JsonProperty("rule_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Rule_name { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id { get; set; } 

        [JsonProperty("thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdparty_id { get; set; } 

        [JsonProperty("status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_name { get; set; } 

        [JsonProperty("responsetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Responsetype { get; set; } 

        [JsonProperty("response_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Response_desc { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IngramMicroDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("import_entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_entities { get; set; } 

        [JsonProperty("toplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel { get; set; } 

        [JsonProperty("update_addresses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_addresses { get; set; } 

        [JsonProperty("marketplace", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Marketplace { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("new_subscription_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_subscription_key { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("client_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_mappings { get; set; } 

        [JsonProperty("top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Top_level_name { get; set; } 

        [JsonProperty("halointegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegrator { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("import_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Import_entities_list { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IngramMicroResellerDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("customer_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customer_number { get; set; } 

        [JsonProperty("country_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Country_code { get; set; } 

        [JsonProperty("correlation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Correlation_id { get; set; } 

        [JsonProperty("company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Company_id { get; set; } 

        [JsonProperty("receive_order_status_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_order_status_updated { get; set; } 

        [JsonProperty("receive_quote_to_order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_quote_to_order { get; set; } 

        [JsonProperty("auto_create_purchase_order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Auto_create_purchase_order { get; set; } 

        [JsonProperty("sync_entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sync_entities { get; set; } 

        [JsonProperty("sync_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sync_entities_list { get; set; } 

        [JsonProperty("api_app_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Api_app_type { get; set; } 

        [JsonProperty("reseller_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reseller_site { get; set; } 

        [JsonProperty("delivery_address_auto_po", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Delivery_address_auto_po { get; set; } 

        [JsonProperty("order_status_canceled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order_status_canceled { get; set; } 

        [JsonProperty("order_status_backordered", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order_status_backordered { get; set; } 

        [JsonProperty("order_status_processing", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order_status_processing { get; set; } 

        [JsonProperty("order_status_hold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order_status_hold { get; set; } 

        [JsonProperty("order_status_delivered", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order_status_delivered { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_webhook_signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_webhook_signature { get; set; } 

        [JsonProperty("company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Company_name { get; set; } 

        [JsonProperty("ordered_status_canceled_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ordered_status_canceled_name { get; set; } 

        [JsonProperty("order_status_backordered_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Order_status_backordered_name { get; set; } 

        [JsonProperty("order_status_processing_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Order_status_processing_name { get; set; } 

        [JsonProperty("order_status_hold_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Order_status_hold_name { get; set; } 

        [JsonProperty("order_status_delivered_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Order_status_delivered_name { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("default_assetgroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup_id { get; set; } 

        [JsonProperty("default_assetgroup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroup_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InstagramBusinessAccount
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Instance
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("hostname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hostname { get; set; } 

        [JsonProperty("envname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Envname { get; set; } 

        [JsonProperty("version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version { get; set; } 

        [JsonProperty("commits_ahead", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Commits_ahead { get; set; } 

        [JsonProperty("commits_behind", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Commits_behind { get; set; } 

        [JsonProperty("syncid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncid { get; set; } 

        [JsonProperty("offline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Offline { get; set; } 

        [JsonProperty("insync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Insync { get; set; } 

        [JsonProperty("versionmatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Versionmatch { get; set; } 

        [JsonProperty("canmerge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canmerge { get; set; } 

        [JsonProperty("iscurrent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iscurrent { get; set; } 

        [JsonProperty("nomergereason", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nomergereason { get; set; } 

        [JsonProperty("isself", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isself { get; set; } 

        [JsonProperty("isprod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isprod { get; set; } 

        [JsonProperty("_restore_from_prod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _restore_from_prod { get; set; } 

        [JsonProperty("_restore_from_prod_result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _restore_from_prod_result { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Int32NullableStringDateTimeNullableInt32NullableDateTimeNullableTuple
    {
        [JsonProperty("item1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item1 { get; set; } 

        [JsonProperty("item2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item2 { get; set; } 

        [JsonProperty("item3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Item3 { get; set; } 

        [JsonProperty("item4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item4 { get; set; } 

        [JsonProperty("item5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Item5 { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Int32NullableStringDateTimeNullableInt32NullableTuple
    {
        [JsonProperty("item1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item1 { get; set; } 

        [JsonProperty("item2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item2 { get; set; } 

        [JsonProperty("item3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Item3 { get; set; } 

        [JsonProperty("item4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item4 { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationConfiguration
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("application_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Application_url { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

        [JsonProperty("redirect_uri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirect_uri { get; set; } 

        [JsonProperty("_isauthorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isauthorized { get; set; } 

        [JsonProperty("tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant { get; set; } 

        [JsonProperty("resource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resource { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("alternate_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alternate_client_id { get; set; } 

        [JsonProperty("new_alternate_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_alternate_client_secret { get; set; } 

        [JsonProperty("client_credentials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Client_credentials { get; set; } 

        [JsonProperty("password_credentials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Password_credentials { get; set; } 

        [JsonProperty("webhook_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_username { get; set; } 

        [JsonProperty("new_webhook_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_webhook_password { get; set; } 

        [JsonProperty("webhook_iterations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Webhook_iterations { get; set; } 

        [JsonProperty("new_webhook_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_webhook_method { get; set; } 

        [JsonProperty("last_update", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_update { get; set; } 

        [JsonProperty("token_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token_url { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationError
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("detail_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Detail_id { get; set; } 

        [JsonProperty("entity_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_type { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id { get; set; } 

        [JsonProperty("entity_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_name { get; set; } 

        [JsonProperty("endpoint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Endpoint { get; set; } 

        [JsonProperty("error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Error { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationExport
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("export_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Export_id { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("halo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Halo_id { get; set; } 

        [JsonProperty("halo_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_name { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("third_party_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_name { get; set; } 

        [JsonProperty("export_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Export_url { get; set; } 

        [JsonProperty("export_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Export_date { get; set; } 

        [JsonProperty("export_progress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Export_progress { get; set; } 

        [JsonProperty("ready_for_import", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ready_for_import { get; set; } 

        [JsonProperty("progress_error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Progress_error { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("exportdata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationExportData>? Exportdata { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationExportData
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("integration_export_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_export_id { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("exported", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exported { get; set; } 

        [JsonProperty("export_body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public byte[]? Export_body { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationFieldData
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("msid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Msid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("fieldid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldid { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationFieldMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("fiid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fiid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("thirdpartyname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyname { get; set; } 

        [JsonProperty("msid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Msid { get; set; } 

        [JsonProperty("typeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Typeid { get; set; } 

        [JsonProperty("isassetfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isassetfield { get; set; } 

        [JsonProperty("subtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Subtypeid { get; set; } 

        [JsonProperty("newrecords", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newrecords { get; set; } 

        [JsonProperty("xmvalue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xmvalue { get; set; } 

        [JsonProperty("third_party_friendly_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_friendly_name { get; set; } 

        [JsonProperty("sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync { get; set; } 

        [JsonProperty("synctype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Synctype { get; set; } 

        [JsonProperty("product", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Product { get; set; } 

        [JsonProperty("dontupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontupdate { get; set; } 

        [JsonProperty("product_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Product_name { get; set; } 

        [JsonProperty("third_party_field_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Third_party_field_type { get; set; } 

        [JsonProperty("populateemptyvalue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Populateemptyvalue { get; set; } 

        [JsonProperty("value_set", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_set { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationFilter
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_id { get; set; } 

        [JsonProperty("mapping_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mapping_id { get; set; } 

        [JsonProperty("mapping_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mapping_name { get; set; } 

        [JsonProperty("filter_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_field { get; set; } 

        [JsonProperty("filter_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_type { get; set; } 

        [JsonProperty("filter_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_value { get; set; } 

        [JsonProperty("query_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Query_string { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("value_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_type { get; set; } 

        [JsonProperty("filter_operator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_operator { get; set; } 

        [JsonProperty("filter_type2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_type2 { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationLookUp
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("module_id", Required = Required.Always)]
        public int Module_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("value", Required = Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Value { get; set; } 

        [JsonProperty("_success", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _success { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationRequest
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("isoutgoing", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isoutgoing { get; set; } 

        [JsonProperty("operation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Operation { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("msid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Msid { get; set; } 

        [JsonProperty("request_body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Request_body { get; set; } 

        [JsonProperty("datelogged", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datelogged { get; set; } 

        [JsonProperty("resultcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resultcode { get; set; } 

        [JsonProperty("response_body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Response_body { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("request_headers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Request_headers { get; set; } 

        [JsonProperty("response_headers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Response_headers { get; set; } 

        [JsonProperty("trace", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Trace>? Trace { get; set; } 

        [JsonProperty("_retrywebhook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _retrywebhook { get; set; } 

        [JsonProperty("preserve", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Preserve { get; set; } 

        [JsonProperty("hastrace", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hastrace { get; set; } 

        [JsonProperty("format_as_xml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Format_as_xml { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationRunbookVariable
    {
        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("output", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Output { get; set; } 

        [JsonProperty("method_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Method_id { get; set; } 

        [JsonProperty("method_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Method_name { get; set; } 

        [JsonProperty("step", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Step { get; set; } 

        [JsonProperty("step_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Step_name { get; set; } 

        [JsonProperty("persist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Persist { get; set; } 

        [JsonProperty("mapping_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mapping_type { get; set; } 

        [JsonProperty("object_mapping", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Object_mapping { get; set; } 

        [JsonProperty("variable_name_root_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Variable_name_root_override { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class IntegrationSiteMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("halo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Halo_id { get; set; } 

        [JsonProperty("halo_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_name { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("third_party_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_name { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("third_party_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_client_id { get; set; } 

        [JsonProperty("third_party_client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_client_name { get; set; } 

        [JsonProperty("third_party_full_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_full_name { get; set; } 

        [JsonProperty("halo_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Halo_client_id { get; set; } 

        [JsonProperty("halo_client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_client_name { get; set; } 

        [JsonProperty("halo_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_site_name { get; set; } 

        [JsonProperty("userules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Userules { get; set; } 

        [JsonProperty("criteria", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMappingCriteria>? Criteria { get; set; } 

        [JsonProperty("rule_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_count { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Details_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InternetAddress
    {
        [JsonProperty("encoding", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Encoding? Encoding { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InvoiceChange
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("old_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Old_value { get; set; } 

        [JsonProperty("new_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_value { get; set; } 

        [JsonProperty("who", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Who { get; set; } 

        [JsonProperty("datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime { get; set; } 

        [JsonProperty("invoice_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_line_id { get; set; } 

        [JsonProperty("invoice_detail_quantity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_detail_quantity_id { get; set; } 

        [JsonProperty("invoice_detail_prorata_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_detail_prorata_id { get; set; } 

        [JsonProperty("type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InvoiceDetail
    {
        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ihid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ihid { get; set; } 

        [JsonProperty("item_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_code { get; set; } 

        [JsonProperty("item_shortdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_shortdescription { get; set; } 

        [JsonProperty("item_longdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_longdescription { get; set; } 

        [JsonProperty("nominal_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominal_code { get; set; } 

        [JsonProperty("tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_code { get; set; } 

        [JsonProperty("qty_order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Qty_order { get; set; } 

        [JsonProperty("unit_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unit_price { get; set; } 

        [JsonProperty("unit_price_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unit_price_converted { get; set; } 

        [JsonProperty("net_amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_amount { get; set; } 

        [JsonProperty("tax_amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_amount { get; set; } 

        [JsonProperty("tax_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_rate { get; set; } 

        [JsonProperty("comment_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Comment_1 { get; set; } 

        [JsonProperty("comment_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Comment_2 { get; set; } 

        [JsonProperty("itemonorder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Itemonorder { get; set; } 

        [JsonProperty("dsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dsite { get; set; } 

        [JsonProperty("ddevnum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ddevnum { get; set; } 

        [JsonProperty("_itemid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _itemid { get; set; } 

        [JsonProperty("productnumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Productnumber { get; set; } 

        [JsonProperty("unit_cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unit_cost { get; set; } 

        [JsonProperty("asset_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_id { get; set; } 

        [JsonProperty("asset_inventory_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_inventory_number { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("recurring_invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurring_invoice_id { get; set; } 

        [JsonProperty("recurring_invoice_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurring_invoice_line_id { get; set; } 

        [JsonProperty("actioncode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actioncode { get; set; } 

        [JsonProperty("site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site { get; set; } 

        [JsonProperty("meter_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Meter_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("lineactiondate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lineactiondate { get; set; } 

        [JsonProperty("labourdepartmentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Labourdepartmentid { get; set; } 

        [JsonProperty("salesorder_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_line { get; set; } 

        [JsonProperty("salesorder_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_line_id { get; set; } 

        [JsonProperty("meter_pricing_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Meter_pricing_method { get; set; } 

        [JsonProperty("line_fully_invoiced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Line_fully_invoiced { get; set; } 

        [JsonProperty("xero_lineid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_lineid { get; set; } 

        [JsonProperty("prepay_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prepay_id { get; set; } 

        [JsonProperty("calculate_price_from_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Calculate_price_from_assets { get; set; } 

        [JsonProperty("calculate_price_from_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Calculate_price_from_users { get; set; } 

        [JsonProperty("creditlinkedidid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Creditlinkedidid { get; set; } 

        [JsonProperty("recurring_invoice_price_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurring_invoice_price_type { get; set; } 

        [JsonProperty("entity_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_type { get; set; } 

        [JsonProperty("item_internal_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_internal_reference { get; set; } 

        [JsonProperty("item_external_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_external_reference { get; set; } 

        [JsonProperty("linked_item", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Item? Linked_item { get; set; } 

        [JsonProperty("item_tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_tax_name { get; set; } 

        [JsonProperty("xero_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tax_code { get; set; } 

        [JsonProperty("override_ast_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Override_ast_total { get; set; } 

        [JsonProperty("prorata_next_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prorata_next_invoice { get; set; } 

        [JsonProperty("prorata_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prorata_quantity { get; set; } 

        [JsonProperty("prorata_unit_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Prorata_unit_price { get; set; } 

        [JsonProperty("prorata_shortdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Prorata_shortdescription { get; set; } 

        [JsonProperty("prorata_longdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Prorata_longdescription { get; set; } 

        [JsonProperty("isinactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isinactive { get; set; } 

        [JsonProperty("period_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Period_type { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("isgroupdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isgroupdesc { get; set; } 

        [JsonProperty("kashflow_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflow_line_id { get; set; } 

        [JsonProperty("_is_calculated_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_calculated_line { get; set; } 

        [JsonProperty("tax_code_overriden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Tax_code_overriden { get; set; } 

        [JsonProperty("is_meter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_meter { get; set; } 

        [JsonProperty("current_reading", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Current_reading { get; set; } 

        [JsonProperty("last_reading_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_reading_date { get; set; } 

        [JsonProperty("prorata_data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceDetailProRata>? Prorata_data { get; set; } 

        [JsonProperty("quantity_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceDetailQuantity>? Quantity_users { get; set; } 

        [JsonProperty("quantity_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceDetailQuantity>? Quantity_assets { get; set; } 

        [JsonProperty("quantity_licences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceDetailQuantity>? Quantity_licences { get; set; } 

        [JsonProperty("quantity_subscriptions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceDetailQuantity>? Quantity_subscriptions { get; set; } 

        [JsonProperty("recurring_invoice_quantity_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurring_invoice_quantity_type { get; set; } 

        [JsonProperty("quantity_custom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quantity_custom { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("billingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingperiod { get; set; } 

        [JsonProperty("line_periods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Line_periods { get; set; } 

        [JsonProperty("percent_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percent_increase { get; set; } 

        [JsonProperty("min_meter_units", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Min_meter_units { get; set; } 

        [JsonProperty("sequenceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequenceid { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("autorenew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autorenew { get; set; } 

        [JsonProperty("autorenewperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autorenewperiod { get; set; } 

        [JsonProperty("intacct_location_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_location_id { get; set; } 

        [JsonProperty("intacct_department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_department_id { get; set; } 

        [JsonProperty("synced_to_intacct", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Synced_to_intacct { get; set; } 

        [JsonProperty("hideitems", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hideitems { get; set; } 

        [JsonProperty("includegrouppriceandqty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includegrouppriceandqty { get; set; } 

        [JsonProperty("auto_increase_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_increase_period { get; set; } 

        [JsonProperty("auto_increase_last_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Auto_increase_last_date { get; set; } 

        [JsonProperty("onetimecharge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Onetimecharge { get; set; } 

        [JsonProperty("onetimechargeinvoiceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onetimechargeinvoiceid { get; set; } 

        [JsonProperty("needsreviewbeforecreation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Needsreviewbeforecreation { get; set; } 

        [JsonProperty("reviewed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Reviewed { get; set; } 

        [JsonProperty("metertype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Metertype { get; set; } 

        [JsonProperty("importcsvid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Importcsvid { get; set; } 

        [JsonProperty("force_new", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_new { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("dbc_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dbc_id { get; set; } 

        [JsonProperty("purchaseorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchaseorder_id { get; set; } 

        [JsonProperty("purchaseorder_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchaseorder_line_id { get; set; } 

        [JsonProperty("discount_perc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Discount_perc { get; set; } 

        [JsonProperty("exclude_auto_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exclude_auto_increase { get; set; } 

        [JsonProperty("createproratanormallines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Createproratanormallines { get; set; } 

        [JsonProperty("createproratadate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Createproratadate { get; set; } 

        [JsonProperty("pro_rata_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pro_rata_line_id { get; set; } 

        [JsonProperty("supplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("hide_on_pdf", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_on_pdf { get; set; } 

        [JsonProperty("intacct_warehouse_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_warehouse_id { get; set; } 

        [JsonProperty("invoice_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_class { get; set; } 

        [JsonProperty("percent_invoiced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percent_invoiced { get; set; } 

        [JsonProperty("is_bundled_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_bundled_line { get; set; } 

        [JsonProperty("meter_tiers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceDetailMeterTiers>? Meter_tiers { get; set; } 

        [JsonProperty("meter_min_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Meter_min_quantity { get; set; } 

        [JsonProperty("original_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Original_client_id { get; set; } 

        [JsonProperty("myob_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Myob_location { get; set; } 

        [JsonProperty("myob_row_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Myob_row_id { get; set; } 

        [JsonProperty("dbc_sequence_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dbc_sequence_id { get; set; } 

        [JsonProperty("minimum_line_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Minimum_line_total { get; set; } 

        [JsonProperty("hide_grouped_items_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_grouped_items_price { get; set; } 

        [JsonProperty("credit_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Credit_id { get; set; } 

        [JsonProperty("is_deferred_revenue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_deferred_revenue { get; set; } 

        [JsonProperty("deferred_revenue_olid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Deferred_revenue_olid { get; set; } 

        [JsonProperty("deferred_revenue_olseq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Deferred_revenue_olseq { get; set; } 

        [JsonProperty("is_recognised_revenue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_recognised_revenue { get; set; } 

        [JsonProperty("no_tax_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? No_tax_override { get; set; } 

        [JsonProperty("_temp_order_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _temp_order_id { get; set; } 

        [JsonProperty("_temp_order_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _temp_order_seq { get; set; } 

        [JsonProperty("_temp_order_qty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? _temp_order_qty { get; set; } 

        [JsonProperty("item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_tax_code { get; set; } 

        [JsonProperty("_updateprorata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _updateprorata { get; set; } 

        [JsonProperty("bundle_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bundle_id { get; set; } 

        [JsonProperty("bundle_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bundle_name { get; set; } 

        [JsonProperty("bundle_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bundle_line_id { get; set; } 

        [JsonProperty("xero_category_1_lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_1_lookup { get; set; } 

        [JsonProperty("xero_category_2_lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_2_lookup { get; set; } 

        [JsonProperty("xero_category_1_lookup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_1_lookup_name { get; set; } 

        [JsonProperty("xero_category_2_lookup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_category_2_lookup_name { get; set; } 

        [JsonProperty("use_rpi_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_rpi_increase { get; set; } 

        [JsonProperty("merge_lines_if_matched", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Merge_lines_if_matched { get; set; } 

        [JsonProperty("surcharge_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Surcharge_id { get; set; } 

        [JsonProperty("override_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_tax_code { get; set; } 

        [JsonProperty("baseprice_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Baseprice_converted { get; set; } 

        [JsonProperty("baseprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Baseprice { get; set; } 

        [JsonProperty("unitprice_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unitprice_converted { get; set; } 

        [JsonProperty("total_tax_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_converted { get; set; } 

        [JsonProperty("net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_total { get; set; } 

        [JsonProperty("tax_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_converted { get; set; } 

        [JsonProperty("total_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax { get; set; } 

        [JsonProperty("total_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price { get; set; } 

        [JsonProperty("total_discount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_discount { get; set; } 

        [JsonProperty("discount_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Discount_converted { get; set; } 

        [JsonProperty("net_amount_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_amount_converted { get; set; } 

        [JsonProperty("total_price_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_converted { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_name { get; set; } 

        [JsonProperty("taxRuleResult", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TaxRuleResult>? TaxRuleResult { get; set; } 

        [JsonProperty("decimalplacesforinvoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Decimalplacesforinvoices { get; set; } 

        [JsonProperty("total_net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InvoiceDetailMeterTiers
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("idid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Idid { get; set; } 

        [JsonProperty("minquantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Minquantity { get; set; } 

        [JsonProperty("maxquantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Maxquantity { get; set; } 

        [JsonProperty("price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Price { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InvoiceDetailProRata
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("invoicedetailid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoicedetailid { get; set; } 

        [JsonProperty("recurring_invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurring_invoice_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_to_invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_to_invoice_id { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity { get; set; } 

        [JsonProperty("unitprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unitprice { get; set; } 

        [JsonProperty("unitcost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unitcost { get; set; } 

        [JsonProperty("shortdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Shortdescription { get; set; } 

        [JsonProperty("longdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Longdescription { get; set; } 

        [JsonProperty("quantity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quantity_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("device_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_id { get; set; } 

        [JsonProperty("prorata_next_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prorata_next_invoice { get; set; } 

        [JsonProperty("invoiceheaderid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoiceheaderid { get; set; } 

        [JsonProperty("dont_auto_calculate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_auto_calculate { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("isinvoiced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isinvoiced { get; set; } 

        [JsonProperty("isfuturepr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isfuturepr { get; set; } 

        [JsonProperty("inv_manual_pr_immediately", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inv_manual_pr_immediately { get; set; } 

        [JsonProperty("change_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Change_id { get; set; } 

        [JsonProperty("istempprorata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Istempprorata { get; set; } 

        [JsonProperty("include_in_roi", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Include_in_roi { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InvoiceDetailQuantity
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("invoice_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_line_id { get; set; } 

        [JsonProperty("kind", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kind { get; set; } 

        [JsonProperty("type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type_id { get; set; } 

        [JsonProperty("device_group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_group_id { get; set; } 

        [JsonProperty("type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type_name { get; set; } 

        [JsonProperty("device_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Device_group_name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("licence_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_id { get; set; } 

        [JsonProperty("licence_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Licence_name { get; set; } 

        [JsonProperty("assigned_licences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Assigned_licences { get; set; } 

        [JsonProperty("qty_free", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qty_free { get; set; } 

        [JsonProperty("minimum_qty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Minimum_qty { get; set; } 

        [JsonProperty("pro_rata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pro_rata { get; set; } 

        [JsonProperty("criteria", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceDetailQuantityCriteria>? Criteria { get; set; } 

        [JsonProperty("use_linked_subscription_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_linked_subscription_price { get; set; } 

        [JsonProperty("use_linked_subscription_cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_linked_subscription_cost { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InvoiceDetailQuantityCriteria
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("invoicedetailquantity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoicedetailquantity_id { get; set; } 

        [JsonProperty("tablename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tablename { get; set; } 

        [JsonProperty("fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldname { get; set; } 

        [JsonProperty("value_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_type { get; set; } 

        [JsonProperty("value_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_int { get; set; } 

        [JsonProperty("value_float", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Value_float { get; set; } 

        [JsonProperty("value_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_string { get; set; } 

        [JsonProperty("value_datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Value_datetime { get; set; } 

        [JsonProperty("value_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_display { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InvoiceHeader
    {
        [JsonProperty("disabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disabled { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("sitenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sitenumber { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("accountsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsid { get; set; } 

        [JsonProperty("uid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uid { get; set; } 

        [JsonProperty("invoicenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoicenumber { get; set; } 

        [JsonProperty("thirdpartyinvoicenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyinvoicenumber { get; set; } 

        [JsonProperty("posted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Posted { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("address1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address1 { get; set; } 

        [JsonProperty("address2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address2 { get; set; } 

        [JsonProperty("address3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address3 { get; set; } 

        [JsonProperty("address4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address4 { get; set; } 

        [JsonProperty("address5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address5 { get; set; } 

        [JsonProperty("deladdress1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress1 { get; set; } 

        [JsonProperty("deladdress2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress2 { get; set; } 

        [JsonProperty("deladdress3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress3 { get; set; } 

        [JsonProperty("deladdress4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress4 { get; set; } 

        [JsonProperty("deladdress5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress5 { get; set; } 

        [JsonProperty("tel_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tel_number { get; set; } 

        [JsonProperty("contactname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contactname { get; set; } 

        [JsonProperty("global_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Global_tax_code { get; set; } 

        [JsonProperty("invoice_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Invoice_date { get; set; } 

        [JsonProperty("schedule_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Schedule_date { get; set; } 

        [JsonProperty("dateposted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Dateposted { get; set; } 

        [JsonProperty("last_synced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_synced { get; set; } 

        [JsonProperty("last_modified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_modified { get; set; } 

        [JsonProperty("notes_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes_1 { get; set; } 

        [JsonProperty("notes_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes_2 { get; set; } 

        [JsonProperty("notes_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes_3 { get; set; } 

        [JsonProperty("taken_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Taken_by { get; set; } 

        [JsonProperty("order_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Order_number { get; set; } 

        [JsonProperty("cust_order_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cust_order_number { get; set; } 

        [JsonProperty("payment_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Payment_ref { get; set; } 

        [JsonProperty("global_nom_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Global_nom_code { get; set; } 

        [JsonProperty("global_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Global_details { get; set; } 

        [JsonProperty("invoice_type_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_type_code { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("datetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Datetype { get; set; } 

        [JsonProperty("percentold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Percentold { get; set; } 

        [JsonProperty("percent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percent { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_ref { get; set; } 

        [JsonProperty("datesent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datesent { get; set; } 

        [JsonProperty("currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currency { get; set; } 

        [JsonProperty("currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Currency_code { get; set; } 

        [JsonProperty("currency_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currency_code_name { get; set; } 

        [JsonProperty("currency_conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Currency_conversion_rate { get; set; } 

        [JsonProperty("paymentterms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Paymentterms { get; set; } 

        [JsonProperty("hideinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hideinvoice { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("invoicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoicetype { get; set; } 

        [JsonProperty("datepaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datepaid { get; set; } 

        [JsonProperty("paymentstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Paymentstatus { get; set; } 

        [JsonProperty("xeroid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xeroid { get; set; } 

        [JsonProperty("amountpaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amountpaid { get; set; } 

        [JsonProperty("amountdue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amountdue { get; set; } 

        [JsonProperty("amount_remaining", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount_remaining { get; set; } 

        [JsonProperty("emailstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailstatus { get; set; } 

        [JsonProperty("address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Address { get; set; } 

        [JsonProperty("shipaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Shipaddress { get; set; } 

        [JsonProperty("originaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Originaddress { get; set; } 

        [JsonProperty("lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceDetail>? Lines { get; set; } 

        [JsonProperty("add_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceDetail>? Add_lines { get; set; } 

        [JsonProperty("_print_preview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_preview { get; set; } 

        [JsonProperty("_print_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_generate { get; set; } 

        [JsonProperty("printhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printhtml { get; set; } 

        [JsonProperty("pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_attachment_id { get; set; } 

        [JsonProperty("pdf_attachment_date_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Pdf_attachment_date_created { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("pdftemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdftemplate_name { get; set; } 

        [JsonProperty("composite_tax_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Composite_tax_total { get; set; } 

        [JsonProperty("total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total { get; set; } 

        [JsonProperty("reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reference { get; set; } 

        [JsonProperty("duedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Duedate { get; set; } 

        [JsonProperty("_is_invoice_run", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_invoice_run { get; set; } 

        [JsonProperty("_billing_cut_off", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? _billing_cut_off { get; set; } 

        [JsonProperty("is_recurring_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_recurring_invoice { get; set; } 

        [JsonProperty("schedule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Schedule_id { get; set; } 

        [JsonProperty("lastcreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastcreated { get; set; } 

        [JsonProperty("nextcreationdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextcreationdate { get; set; } 

        [JsonProperty("period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Period { get; set; } 

        [JsonProperty("schedule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public StdRequest? Schedule { get; set; } 

        [JsonProperty("create_recurring_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_recurring_invoice { get; set; } 

        [JsonProperty("take_auto_payment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Take_auto_payment { get; set; } 

        [JsonProperty("recurring_invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurring_invoice_id { get; set; } 

        [JsonProperty("add_contract_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_contract_assets { get; set; } 

        [JsonProperty("add_labour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_labour { get; set; } 

        [JsonProperty("add_project", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_project { get; set; } 

        [JsonProperty("add_travel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_travel { get; set; } 

        [JsonProperty("add_mileage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_mileage { get; set; } 

        [JsonProperty("add_itemsissued", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_itemsissued { get; set; } 

        [JsonProperty("add_prepay", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_prepay { get; set; } 

        [JsonProperty("add_salesorder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_salesorder { get; set; } 

        [JsonProperty("force_creation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_creation { get; set; } 

        [JsonProperty("_create_from_areaitems", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaItem>? _create_from_areaitems { get; set; } 

        [JsonProperty("_create_from_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _create_from_contract { get; set; } 

        [JsonProperty("_validateonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _validateonly { get; set; } 

        [JsonProperty("qboid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qboid { get; set; } 

        [JsonProperty("billingcategory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingcategory { get; set; } 

        [JsonProperty("_sendmassinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _sendmassinvoice { get; set; } 

        [JsonProperty("xero_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_id { get; set; } 

        [JsonProperty("xero_branding_theme_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_branding_theme_id { get; set; } 

        [JsonProperty("xero_branding_theme_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_branding_theme_name { get; set; } 

        [JsonProperty("xero_branding_theme", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Xero_branding_theme { get; set; } 

        [JsonProperty("due_date_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Due_date_int { get; set; } 

        [JsonProperty("due_date_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Due_date_type { get; set; } 

        [JsonProperty("createdbyagentname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Createdbyagentname { get; set; } 

        [JsonProperty("internal_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Internal_note { get; set; } 

        [JsonProperty("mailboxid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailboxid { get; set; } 

        [JsonProperty("period_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Period_type { get; set; } 

        [JsonProperty("kashflow_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflow_tenant_id { get; set; } 

        [JsonProperty("kashflowid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflowid { get; set; } 

        [JsonProperty("kashflow_pdf", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kashflow_pdf { get; set; } 

        [JsonProperty("original_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Original_client_id { get; set; } 

        [JsonProperty("original_client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Original_client_name { get; set; } 

        [JsonProperty("xero_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_status { get; set; } 

        [JsonProperty("merge_data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceHeaderMerge>? Merge_data { get; set; } 

        [JsonProperty("snelstart_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snelstart_id { get; set; } 

        [JsonProperty("time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Time { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("daysplus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Daysplus { get; set; } 

        [JsonProperty("periodname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Periodname { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("duedatename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Duedatename { get; set; } 

        [JsonProperty("date_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_created { get; set; } 

        [JsonProperty("invoice_prorata_periods_ahead", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_prorata_periods_ahead { get; set; } 

        [JsonProperty("nextcreationperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nextcreationperiod { get; set; } 

        [JsonProperty("qbo_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_id { get; set; } 

        [JsonProperty("intacct_recordno", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intacct_recordno { get; set; } 

        [JsonProperty("period_start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Period_start_date { get; set; } 

        [JsonProperty("period_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Period_end_date { get; set; } 

        [JsonProperty("payments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoicePayment_List>? Payments { get; set; } 

        [JsonProperty("markaspaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Markaspaid { get; set; } 

        [JsonProperty("markaspaidmoduleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Markaspaidmoduleid { get; set; } 

        [JsonProperty("dbc_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dbc_id { get; set; } 

        [JsonProperty("dbc_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dbc_company_id { get; set; } 

        [JsonProperty("reviewrequired", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Reviewrequired { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_xmlwarning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _xmlwarning { get; set; } 

        [JsonProperty("creditlinkedtoinvoiceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Creditlinkedtoinvoiceid { get; set; } 

        [JsonProperty("creditlinkedtoinvoiceid_thirdpartynumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Creditlinkedtoinvoiceid_thirdpartynumber { get; set; } 

        [JsonProperty("creditlinkedtoinvoiceid_typeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Creditlinkedtoinvoiceid_typeid { get; set; } 

        [JsonProperty("purchaseorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchaseorder_id { get; set; } 

        [JsonProperty("sage_business_cloud_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sage_business_cloud_details_id { get; set; } 

        [JsonProperty("sage_business_cloud_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sage_business_cloud_id { get; set; } 

        [JsonProperty("exact_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exact_id { get; set; } 

        [JsonProperty("exact_division", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Exact_division { get; set; } 

        [JsonProperty("xero_line_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_line_tax { get; set; } 

        [JsonProperty("invoice_auto_increase_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_auto_increase_period { get; set; } 

        [JsonProperty("invoice_percent_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Invoice_percent_increase { get; set; } 

        [JsonProperty("schedule_ignore_delete", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Schedule_ignore_delete { get; set; } 

        [JsonProperty("assigned_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assigned_agent { get; set; } 

        [JsonProperty("assigned_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assigned_agent_name { get; set; } 

        [JsonProperty("approval_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_status { get; set; } 

        [JsonProperty("approvalagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approvalagent { get; set; } 

        [JsonProperty("approvalemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalemailaddress { get; set; } 

        [JsonProperty("approvalnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalnote { get; set; } 

        [JsonProperty("approvalagentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approvalagentid { get; set; } 

        [JsonProperty("approvaldatetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Approvaldatetime { get; set; } 

        [JsonProperty("ticket_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_summary { get; set; } 

        [JsonProperty("ticket_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_note { get; set; } 

        [JsonProperty("approval_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Approval_start { get; set; } 

        [JsonProperty("requires_approval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Requires_approval { get; set; } 

        [JsonProperty("xero_online_invoice_payment_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_online_invoice_payment_url { get; set; } 

        [JsonProperty("generic_online_invoice_payment_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Generic_online_invoice_payment_url { get; set; } 

        [JsonProperty("intacct_save_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_save_location { get; set; } 

        [JsonProperty("intacctseparatetaxline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intacctseparatetaxline { get; set; } 

        [JsonProperty("intacct_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class { get; set; } 

        [JsonProperty("intacct_class_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class_name { get; set; } 

        [JsonProperty("take_payment_on_duedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Take_payment_on_duedate { get; set; } 

        [JsonProperty("contains_calculated_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Contains_calculated_quantity { get; set; } 

        [JsonProperty("intacct_tax_solution", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_tax_solution { get; set; } 

        [JsonProperty("intacct_tax_solution_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_tax_solution_name { get; set; } 

        [JsonProperty("intacct_project", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_project { get; set; } 

        [JsonProperty("intacct_project_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_project_name { get; set; } 

        [JsonProperty("_create_credit_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _create_credit_note { get; set; } 

        [JsonProperty("credit_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Credit_total { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("_dont_fire_automations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dont_fire_automations { get; set; } 

        [JsonProperty("_is_process", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_process { get; set; } 

        [JsonProperty("_is_task_schedule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_task_schedule { get; set; } 

        [JsonProperty("payments_pending", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Payments_pending { get; set; } 

        [JsonProperty("include_in_autopay", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Include_in_autopay { get; set; } 

        [JsonProperty("_forcethirdpartysync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _forcethirdpartysync { get; set; } 

        [JsonProperty("client_to_invoice_to_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_to_invoice_to_id { get; set; } 

        [JsonProperty("creation_source", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Creation_source { get; set; } 

        [JsonProperty("typeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Typeid { get; set; } 

        [JsonProperty("twilio_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Twilio_invoice { get; set; } 

        [JsonProperty("invoice_separately", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Invoice_separately { get; set; } 

        [JsonProperty("minimum_price_active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Minimum_price_active { get; set; } 

        [JsonProperty("minimum_line_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Minimum_line_description { get; set; } 

        [JsonProperty("minimum_amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Minimum_amount { get; set; } 

        [JsonProperty("avalara_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Avalara_details_id { get; set; } 

        [JsonProperty("qbo_term_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_term_name { get; set; } 

        [JsonProperty("qbo_term_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qbo_term_id { get; set; } 

        [JsonProperty("qbo_term", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Qbo_term { get; set; } 

        [JsonProperty("exact_payment_conditon_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exact_payment_conditon_name { get; set; } 

        [JsonProperty("exact_payment_conditon_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exact_payment_conditon_id { get; set; } 

        [JsonProperty("exact_payment_conditon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Exact_payment_conditon { get; set; } 

        [JsonProperty("avalara_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_details_name { get; set; } 

        [JsonProperty("voided", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Voided { get; set; } 

        [JsonProperty("credit_outstanding_for_customer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Credit_outstanding_for_customer { get; set; } 

        [JsonProperty("credit_outstanding", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Credit_outstanding { get; set; } 

        [JsonProperty("credit_used", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Credit_used { get; set; } 

        [JsonProperty("mark_credit_as_used", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mark_credit_as_used { get; set; } 

        [JsonProperty("apply_credit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Apply_credit { get; set; } 

        [JsonProperty("apply_credit_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Apply_credit_id { get; set; } 

        [JsonProperty("apply_credit_amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Apply_credit_amount { get; set; } 

        [JsonProperty("apply_credit_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Apply_credit_description { get; set; } 

        [JsonProperty("apply_credit_long_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Apply_credit_long_description { get; set; } 

        [JsonProperty("apply_credit_tax_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Apply_credit_tax_type { get; set; } 

        [JsonProperty("invoice_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_display { get; set; } 

        [JsonProperty("_novalidate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _novalidate { get; set; } 

        [JsonProperty("sqlimport_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sqlimport_id { get; set; } 

        [JsonProperty("invoice_match_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_match_id { get; set; } 

        [JsonProperty("sync_include_paid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_include_paid { get; set; } 

        [JsonProperty("dont_set_original_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_set_original_client_id { get; set; } 

        [JsonProperty("_docommitsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _docommitsync { get; set; } 

        [JsonProperty("_ignore_dont_send_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _ignore_dont_send_invoice { get; set; } 

        [JsonProperty("ticket_client_to_invoice_to_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_client_to_invoice_to_id { get; set; } 

        [JsonProperty("originaddress1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress1 { get; set; } 

        [JsonProperty("originaddress2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress2 { get; set; } 

        [JsonProperty("originaddress3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress3 { get; set; } 

        [JsonProperty("originaddress4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress4 { get; set; } 

        [JsonProperty("originaddress5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress5 { get; set; } 

        [JsonProperty("most_recent_invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Most_recent_invoice_id { get; set; } 

        [JsonProperty("most_recent_invoice_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Most_recent_invoice_type { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("extratabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tabname>? Extratabs { get; set; } 

        [JsonProperty("update_invoice_conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_invoice_conversion_rate { get; set; } 

        [JsonProperty("conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Conversion_rate { get; set; } 

        [JsonProperty("dont_sync_to_3rd_party", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_sync_to_3rd_party { get; set; } 

        [JsonProperty("is_invoice_screen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_invoice_screen { get; set; } 

        [JsonProperty("_dotaxsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dotaxsync { get; set; } 

        [JsonProperty("tax_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_total { get; set; } 

        [JsonProperty("revenue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Revenue { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InvoiceHeaderMerge
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_id { get; set; } 

        [JsonProperty("recurring_invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurring_invoice_id { get; set; } 

        [JsonProperty("schedule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Schedule_id { get; set; } 

        [JsonProperty("schedule_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Schedule_date { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_ref { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("percent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percent { get; set; } 

        [JsonProperty("due_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Due_date { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class InvoicePayment_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_id { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount { get; set; } 

        [JsonProperty("method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Method { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("intent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent_id { get; set; } 

        [JsonProperty("intent_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Intent_date { get; set; } 

        [JsonProperty("intent_response", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent_response { get; set; } 

        [JsonProperty("webhook_payload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_payload { get; set; } 

        [JsonProperty("webhook_received_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Webhook_received_date { get; set; } 

        [JsonProperty("sage50_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sage50_reference { get; set; } 

        [JsonProperty("thirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyid { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("_statuswarning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _statuswarning { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("qbo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qbo_id { get; set; } 

        [JsonProperty("xero_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_id { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("sqlimport_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sqlimport_id { get; set; } 

        [JsonProperty("invoice_match_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_match_id { get; set; } 

        [JsonProperty("invoice_invoicenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_invoicenumber { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Item
    {
        [JsonProperty("asset_type_matching_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_type_matching_field_name { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("assetgroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetgroup_id { get; set; } 

        [JsonProperty("assetgroup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetgroup_name { get; set; } 

        [JsonProperty("third_party_assetgroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_assetgroup_id { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("supplier_part_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_part_code { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("purchase_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_description { get; set; } 

        [JsonProperty("internalreference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Internalreference { get; set; } 

        [JsonProperty("externalreference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Externalreference { get; set; } 

        [JsonProperty("quantity_in_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_in_stock { get; set; } 

        [JsonProperty("quantity_reserved", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_reserved { get; set; } 

        [JsonProperty("quantity_on_order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_on_order { get; set; } 

        [JsonProperty("goodsinunit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Goodsinunit { get; set; } 

        [JsonProperty("goodsoutunit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Goodsoutunit { get; set; } 

        [JsonProperty("inoutconversion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inoutconversion { get; set; } 

        [JsonProperty("qtyissuedthisyear", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Qtyissuedthisyear { get; set; } 

        [JsonProperty("baseprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Baseprice { get; set; } 

        [JsonProperty("created_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Created_by { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("manufacturer_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Manufacturer_id { get; set; } 

        [JsonProperty("manufacturer_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manufacturer_name { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("assettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_name { get; set; } 

        [JsonProperty("minstockqty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Minstockqty { get; set; } 

        [JsonProperty("min_purchase_qty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Min_purchase_qty { get; set; } 

        [JsonProperty("secondprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Secondprice { get; set; } 

        [JsonProperty("promptforprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Promptforprice { get; set; } 

        [JsonProperty("sleeveprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Sleeveprice { get; set; } 

        [JsonProperty("taxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Taxcode { get; set; } 

        [JsonProperty("taxcode_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Taxcode_name { get; set; } 

        [JsonProperty("taxcodeother", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Taxcodeother { get; set; } 

        [JsonProperty("taxcodeother_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Taxcodeother_name { get; set; } 

        [JsonProperty("costprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costprice { get; set; } 

        [JsonProperty("accountsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsid { get; set; } 

        [JsonProperty("margin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Margin { get; set; } 

        [JsonProperty("reorderqty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Reorderqty { get; set; } 

        [JsonProperty("binlocation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Binlocation { get; set; } 

        [JsonProperty("nominalcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode { get; set; } 

        [JsonProperty("costingmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Costingmethod { get; set; } 

        [JsonProperty("servicefee", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Servicefee { get; set; } 

        [JsonProperty("recovery", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Recovery { get; set; } 

        [JsonProperty("avco", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Avco { get; set; } 

        [JsonProperty("qtyonallsalesorders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Qtyonallsalesorders { get; set; } 

        [JsonProperty("doesnotneedconsigning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Doesnotneedconsigning { get; set; } 

        [JsonProperty("shaccountsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Shaccountsid { get; set; } 

        [JsonProperty("applydiscount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Applydiscount { get; set; } 

        [JsonProperty("secondhandprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Secondhandprice { get; set; } 

        [JsonProperty("hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours { get; set; } 

        [JsonProperty("markupperc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Markupperc { get; set; } 

        [JsonProperty("metertype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Metertype { get; set; } 

        [JsonProperty("meterlife", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Meterlife { get; set; } 

        [JsonProperty("isrecurringitem", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isrecurringitem { get; set; } 

        [JsonProperty("template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Template_id { get; set; } 

        [JsonProperty("template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Template_name { get; set; } 

        [JsonProperty("recurringprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Recurringprice { get; set; } 

        [JsonProperty("showmobilescanner", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showmobilescanner { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("icon_download_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon_download_url { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("group_third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_third_party_id { get; set; } 

        [JsonProperty("sagetoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sagetoken { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("item_suppliers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ItemSupplier>? Item_suppliers { get; set; } 

        [JsonProperty("xero_salestax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_salestax { get; set; } 

        [JsonProperty("xero_purchasetax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_purchasetax { get; set; } 

        [JsonProperty("purchasenominalcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchasenominalcode { get; set; } 

        [JsonProperty("fullyqualifiedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fullyqualifiedname { get; set; } 

        [JsonProperty("salestaxincluded", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Salestaxincluded { get; set; } 

        [JsonProperty("purchasetaxincluded", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Purchasetaxincluded { get; set; } 

        [JsonProperty("taxable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Taxable { get; set; } 

        [JsonProperty("assetaccountcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetaccountcode { get; set; } 

        [JsonProperty("qbo_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qbo_quantity { get; set; } 

        [JsonProperty("qboinitial_quantity_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Qboinitial_quantity_date { get; set; } 

        [JsonProperty("stocklocations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Site_List>? Stocklocations { get; set; } 

        [JsonProperty("xero_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_id { get; set; } 

        [JsonProperty("xero_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_name { get; set; } 

        [JsonProperty("xerodetails_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Xerodetails_id { get; set; } 

        [JsonProperty("income_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Income_account_name { get; set; } 

        [JsonProperty("expense_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Expense_account_name { get; set; } 

        [JsonProperty("asset_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_account_name { get; set; } 

        [JsonProperty("income_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Income_account { get; set; } 

        [JsonProperty("expense_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Expense_account { get; set; } 

        [JsonProperty("asset_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Asset_account { get; set; } 

        [JsonProperty("qbosku", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbosku { get; set; } 

        [JsonProperty("qbocategoryid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbocategoryid { get; set; } 

        [JsonProperty("qbocategoryname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbocategoryname { get; set; } 

        [JsonProperty("qbo_category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Qbo_category { get; set; } 

        [JsonProperty("autotaskserviceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autotaskserviceid { get; set; } 

        [JsonProperty("autotaskproductid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autotaskproductid { get; set; } 

        [JsonProperty("iscontractitem", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iscontractitem { get; set; } 

        [JsonProperty("dontinvoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontinvoice { get; set; } 

        [JsonProperty("kashflowid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflowid { get; set; } 

        [JsonProperty("kashflow_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflow_tenant_id { get; set; } 

        [JsonProperty("kashflow_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kashflow_tenant_name { get; set; } 

        [JsonProperty("nominalcode_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode_name { get; set; } 

        [JsonProperty("purchasenominalcode_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchasenominalcode_name { get; set; } 

        [JsonProperty("linked_item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_item_id { get; set; } 

        [JsonProperty("linked_item_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_item_name { get; set; } 

        [JsonProperty("update_recurring_invoice_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_recurring_invoice_price { get; set; } 

        [JsonProperty("update_recurring_invoice_cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_recurring_invoice_cost { get; set; } 

        [JsonProperty("snelstart_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snelstart_id { get; set; } 

        [JsonProperty("snelstart_department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snelstart_department_id { get; set; } 

        [JsonProperty("snelstart_department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snelstart_department_name { get; set; } 

        [JsonProperty("snelstart_department", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Snelstart_department { get; set; } 

        [JsonProperty("linked_asset_defaults", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ItemDeviceDefaults>? Linked_asset_defaults { get; set; } 

        [JsonProperty("maxitemdiscount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Maxitemdiscount { get; set; } 

        [JsonProperty("item_default_billing_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_default_billing_period { get; set; } 

        [JsonProperty("primaryimageid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Primaryimageid { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("lastmodified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastmodified { get; set; } 

        [JsonProperty("qbo_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_id { get; set; } 

        [JsonProperty("import_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_details_id { get; set; } 

        [JsonProperty("quickbooks_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public QuickBooksDetails? Quickbooks_details { get; set; } 

        [JsonProperty("qbo_company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_name { get; set; } 

        [JsonProperty("extra_invoice_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Extra_invoice_description { get; set; } 

        [JsonProperty("isitemdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isitemdetails { get; set; } 

        [JsonProperty("intacct_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_type { get; set; } 

        [JsonProperty("item_group_nominalcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_group_nominalcode { get; set; } 

        [JsonProperty("item_group_nominalcode_purchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_group_nominalcode_purchase { get; set; } 

        [JsonProperty("item_group_itemcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_group_itemcode { get; set; } 

        [JsonProperty("item_group_taxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_group_taxcode { get; set; } 

        [JsonProperty("item_group_taxcode_purchase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_group_taxcode_purchase { get; set; } 

        [JsonProperty("recurringcost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Recurringcost { get; set; } 

        [JsonProperty("dbc_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dbc_company_id { get; set; } 

        [JsonProperty("dbc_company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dbc_company_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("sage_business_cloud_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sage_business_cloud_details_id { get; set; } 

        [JsonProperty("sage_business_cloud_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sage_business_cloud_details_name { get; set; } 

        [JsonProperty("budgettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Budgettype_id { get; set; } 

        [JsonProperty("budgettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Budgettype_name { get; set; } 

        [JsonProperty("serialise_only_one", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Serialise_only_one { get; set; } 

        [JsonProperty("exact_division", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Exact_division { get; set; } 

        [JsonProperty("exact_division_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exact_division_name { get; set; } 

        [JsonProperty("dattocommerce_tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dattocommerce_tenant { get; set; } 

        [JsonProperty("user_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_description { get; set; } 

        [JsonProperty("weight", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Weight { get; set; } 

        [JsonProperty("ignore_from_accounting_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignore_from_accounting_sync { get; set; } 

        [JsonProperty("invoice_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_class { get; set; } 

        [JsonProperty("sage50uk_department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sage50uk_department_id { get; set; } 

        [JsonProperty("dont_track_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_track_stock { get; set; } 

        [JsonProperty("dont_receive_on_po", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_receive_on_po { get; set; } 

        [JsonProperty("xero_inventory_account_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_inventory_account_code { get; set; } 

        [JsonProperty("xero_cogs_account_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_cogs_account_code { get; set; } 

        [JsonProperty("xero_inventory_account_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_inventory_account_code_name { get; set; } 

        [JsonProperty("xero_cogs_account_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_cogs_account_code_name { get; set; } 

        [JsonProperty("intacct_product_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_product_line_id { get; set; } 

        [JsonProperty("_updateitemtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _updateitemtype { get; set; } 

        [JsonProperty("related_item_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Related_item_count { get; set; } 

        [JsonProperty("myob_tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Myob_tenant { get; set; } 

        [JsonProperty("myob_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Myob_tenant_name { get; set; } 

        [JsonProperty("myob_asset_account_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Myob_asset_account_code { get; set; } 

        [JsonProperty("items_per_buying_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Items_per_buying_price { get; set; } 

        [JsonProperty("items_per_selling_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Items_per_selling_price { get; set; } 

        [JsonProperty("avalara_item_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_item_code { get; set; } 

        [JsonProperty("purchase_currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchase_currency_code { get; set; } 

        [JsonProperty("purchase_currency_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_currency_code_name { get; set; } 

        [JsonProperty("purchase_currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Currency? Purchase_currency { get; set; } 

        [JsonProperty("autorenew_quote_line_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autorenew_quote_line_default { get; set; } 

        [JsonProperty("price_calculated_from_components", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Price_calculated_from_components { get; set; } 

        [JsonProperty("cost_calculated_from_components", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cost_calculated_from_components { get; set; } 

        [JsonProperty("auto_reorder_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_reorder_type { get; set; } 

        [JsonProperty("relatedcategories", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair7>? Relatedcategories { get; set; } 

        [JsonProperty("relatedcategories_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Relatedcategories_list { get; set; } 

        [JsonProperty("item_listed_only_on_bundle_setup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_listed_only_on_bundle_setup { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ItemDeviceDefaults
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("iid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Iid { get; set; } 

        [JsonProperty("dtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dtype { get; set; } 

        [JsonProperty("yseq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yseq { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ItemGroup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<QuotationDetail>? Lines { get; set; } 

        [JsonProperty("oldLines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<QuotationDetail>? OldLines { get; set; } 

        [JsonProperty("hideitems", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hideitems { get; set; } 

        [JsonProperty("add_all_group_items_quote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_all_group_items_quote { get; set; } 

        [JsonProperty("quantity_group_items_quote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quantity_group_items_quote { get; set; } 

        [JsonProperty("hide_items_group_items_quote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Hide_items_group_items_quote { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("hide_grouped_items_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Hide_grouped_items_price { get; set; } 

        [JsonProperty("category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category { get; set; } 

        [JsonProperty("name_extra", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name_extra { get; set; } 

        [JsonProperty("one_optional_mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? One_optional_mandatory { get; set; } 

        [JsonProperty("one_optional_mandatory_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? One_optional_mandatory_list { get; set; } 

        [JsonProperty("default_billingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_billingperiod { get; set; } 

        [JsonProperty("nominal_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominal_code { get; set; } 

        [JsonProperty("force_quantity_relationship", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_quantity_relationship { get; set; } 

        [JsonProperty("force_price_relationship", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_price_relationship { get; set; } 

        [JsonProperty("force_term_relationship", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_term_relationship { get; set; } 

        [JsonProperty("price_calculation_formula", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Price_calculation_formula { get; set; } 

        [JsonProperty("_updaterecurringbundleprices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _updaterecurringbundleprices { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ItemId
    {
        [JsonProperty("uniqueId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UniqueId { get; set; } 

        [JsonProperty("changeKey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ChangeKey { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ItemRestriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("servicerequest_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicerequest_id { get; set; } 

        [JsonProperty("item_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ItemStock
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("item_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_name { get; set; } 

        [JsonProperty("item_assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_assettype_id { get; set; } 

        [JsonProperty("stocklocation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stocklocation_id { get; set; } 

        [JsonProperty("stocklocation_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stocklocation_name { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("quantity_in", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_in { get; set; } 

        [JsonProperty("quantity_issued", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_issued { get; set; } 

        [JsonProperty("quantity_remaining", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_remaining { get; set; } 

        [JsonProperty("cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Cost { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("purchaseorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchaseorder_id { get; set; } 

        [JsonProperty("purchaseorder_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchaseorder_line_id { get; set; } 

        [JsonProperty("purchaseorder_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchaseorder_ref { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("serialised_asset_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Serialised_asset_count { get; set; } 

        [JsonProperty("serialised_assets_in_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Serialised_assets_in_stock { get; set; } 

        [JsonProperty("serialised_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Serialised_assets { get; set; } 

        [JsonProperty("is_stock_take", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_stock_take { get; set; } 

        [JsonProperty("delivering_to_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delivering_to_user { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("line_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Line_site_id { get; set; } 

        [JsonProperty("stockbin_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stockbin_id { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("real_quantity_in", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Real_quantity_in { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("stockbin_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stockbin_name { get; set; } 

        [JsonProperty("serialise_only_one", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Serialise_only_one { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ItemSupplier
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Price { get; set; } 

        [JsonProperty("cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Cost { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("supplier_sku", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_sku { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ViewFilterDetails>? Filters { get; set; } 

        [JsonProperty("_is_new", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_new { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class JamfDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("instancetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Instancetype { get; set; } 

        [JsonProperty("devicetypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Devicetypes { get; set; } 

        [JsonProperty("device_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Device_types { get; set; } 

        [JsonProperty("defaultsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultsite { get; set; } 

        [JsonProperty("defaultsite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultsite_name { get; set; } 

        [JsonProperty("site_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Site_links { get; set; } 

        [JsonProperty("fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Fieldmappings { get; set; } 

        [JsonProperty("sitematchtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sitematchtype { get; set; } 

        [JsonProperty("computerassettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Computerassettype { get; set; } 

        [JsonProperty("computerassettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Computerassettype_name { get; set; } 

        [JsonProperty("mobileassettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mobileassettype { get; set; } 

        [JsonProperty("mobileassettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mobileassettype_name { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetmatchingfield_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetmatchingfield_name { get; set; } 

        [JsonProperty("halointegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegrator { get; set; } 

        [JsonProperty("halointegratorerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegratorerror { get; set; } 

        [JsonProperty("halointegratorlastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegratorlastsync { get; set; } 

        [JsonProperty("dontupdateassettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontupdateassettype { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class JiraDetails
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("instance_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Instance_url { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("newmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newmethod { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("sync_components", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_components { get; set; } 

        [JsonProperty("issue_body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Issue_body { get; set; } 

        [JsonProperty("defaulttickettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaulttickettype { get; set; } 

        [JsonProperty("defaulttickettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Defaulttickettype_guid { get; set; } 

        [JsonProperty("defaulttickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaulttickettype_name { get; set; } 

        [JsonProperty("defaultuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultuser { get; set; } 

        [JsonProperty("defaultuser_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultuser_name { get; set; } 

        [JsonProperty("visibletoendusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Visibletoendusers { get; set; } 

        [JsonProperty("primary_update_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Primary_update_status { get; set; } 

        [JsonProperty("relation_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relation_type { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("issuetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Issuetype { get; set; } 

        [JsonProperty("defaultsendattachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Defaultsendattachments { get; set; } 

        [JsonProperty("default_reporter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_reporter { get; set; } 

        [JsonProperty("status_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Status_mappings { get; set; } 

        [JsonProperty("tickettype_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<JiraMappings>? Tickettype_mappings { get; set; } 

        [JsonProperty("jirafield_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Jirafield_mappings { get; set; } 

        [JsonProperty("comment_contains", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Comment_contains { get; set; } 

        [JsonProperty("remove_comment_tag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Remove_comment_tag { get; set; } 

        [JsonProperty("priority_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Priority_mappings { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class JiraMappings
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("rtid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rtid { get; set; } 

        [JsonProperty("rtid_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Rtid_guid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("jira_issue_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_issue_type { get; set; } 

        [JsonProperty("jira_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_category1 { get; set; } 

        [JsonProperty("jira_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_category2 { get; set; } 

        [JsonProperty("jira_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_category3 { get; set; } 

        [JsonProperty("jira_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_category4 { get; set; } 

        [JsonProperty("detailsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Detailsid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Journey
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("unum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unum { get; set; } 

        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("actionnumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionnumber { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("startodometer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Startodometer { get; set; } 

        [JsonProperty("endodometer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Endodometer { get; set; } 

        [JsonProperty("vehicle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Vehicle { get; set; } 

        [JsonProperty("startgps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Startgps { get; set; } 

        [JsonProperty("endgps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Endgps { get; set; } 

        [JsonProperty("datereimbursed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datereimbursed { get; set; } 

        [JsonProperty("dateinvoicedmileage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Dateinvoicedmileage { get; set; } 

        [JsonProperty("dateinvoicedtraveltime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Dateinvoicedtraveltime { get; set; } 

        [JsonProperty("ihidmileage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ihidmileage { get; set; } 

        [JsonProperty("ihidtraveltime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ihidtraveltime { get; set; } 

        [JsonProperty("invoiceable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Invoiceable { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KBEntry
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("view_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? View_count { get; set; } 

        [JsonProperty("useful_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useful_count { get; set; } 

        [JsonProperty("notuseful_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Notuseful_count { get; set; } 

        [JsonProperty("date_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_created { get; set; } 

        [JsonProperty("date_edited", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_edited { get; set; } 

        [JsonProperty("tag_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tag_string { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("next_review_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Next_review_date { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("limit_start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Limit_start_date { get; set; } 

        [JsonProperty("limit_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Limit_end_date { get; set; } 

        [JsonProperty("editor_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Editor_type { get; set; } 

        [JsonProperty("kb_tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kb_tags { get; set; } 

        [JsonProperty("confluence_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Confluence_url { get; set; } 

        [JsonProperty("search_score", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Search_score { get; set; } 

        [JsonProperty("resolution_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resolution_list { get; set; } 

        [JsonProperty("link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Link { get; set; } 

        [JsonProperty("geo_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<GeoLocationRestriction>? Geo_restrictions { get; set; } 

        [JsonProperty("resolution", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resolution { get; set; } 

        [JsonProperty("creator_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Creator_id { get; set; } 

        [JsonProperty("creator_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Creator_name { get; set; } 

        [JsonProperty("editor_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Editor_id { get; set; } 

        [JsonProperty("editor_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Editor_name { get; set; } 

        [JsonProperty("xrefkbentry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Xrefkbentry { get; set; } 

        [JsonProperty("xreftype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Xreftype { get; set; } 

        [JsonProperty("xrefdoc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Xrefdoc { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("description_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description_html { get; set; } 

        [JsonProperty("description_markdown", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description_markdown { get; set; } 

        [JsonProperty("resolution_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resolution_html { get; set; } 

        [JsonProperty("resolution_markdown", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resolution_markdown { get; set; } 

        [JsonProperty("internalmemoagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Internalmemoagent { get; set; } 

        [JsonProperty("internalmemoagenthtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Internalmemoagenthtml { get; set; } 

        [JsonProperty("internalmemomarkdown", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Internalmemomarkdown { get; set; } 

        [JsonProperty("tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tag>? Tags { get; set; } 

        [JsonProperty("faqlists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FAQListHead>? Faqlists { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Fields { get; set; } 

        [JsonProperty("teams", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SectionDetail>? Teams { get; set; } 

        [JsonProperty("your_vote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Your_vote { get; set; } 

        [JsonProperty("showforall", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showforall { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment_List>? Attachments { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("importfaqs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Importfaqs { get; set; } 

        [JsonProperty("last_review_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_review_date { get; set; } 

        [JsonProperty("reviewed_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reviewed_by { get; set; } 

        [JsonProperty("reviewer_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reviewer_name { get; set; } 

        [JsonProperty("_reviewed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _reviewed { get; set; } 

        [JsonProperty("new_version_from_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_version_from_id { get; set; } 

        [JsonProperty("other_versions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KBEntry_List>? Other_versions { get; set; } 

        [JsonProperty("servicenow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_id { get; set; } 

        [JsonProperty("import_attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment>? Import_attachments { get; set; } 

        [JsonProperty("related_articles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KBEntry_List>? Related_articles { get; set; } 

        [JsonProperty("your_comment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Your_comment { get; set; } 

        [JsonProperty("freshdesk_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Freshdesk_id { get; set; } 

        [JsonProperty("freshdesk_folder_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Freshdesk_folder_name { get; set; } 

        [JsonProperty("freshdesk_category_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Freshdesk_category_name { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("_print_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_generate { get; set; } 

        [JsonProperty("printhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printhtml { get; set; } 

        [JsonProperty("pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_attachment_id { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("pdftemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdftemplate_name { get; set; } 

        [JsonProperty("kbentryclientaccess", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KbEntryAreaAccess>? Kbentryclientaccess { get; set; } 

        [JsonProperty("kbentrytoplevelaccess", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KbEntryTopLevelAccess>? Kbentrytoplevelaccess { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Devices { get; set; } 

        [JsonProperty("faq_write", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Faq_write { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("import_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_details_id { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("wordpress_tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, WordpressComObject>? Wordpress_tags { get; set; } 

        [JsonProperty("wordpress_categories", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, WordpressComObject>? Wordpress_categories { get; set; } 

        [JsonProperty("importtags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Importtags { get; set; } 

        [JsonProperty("owners", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Uname_List>? Owners { get; set; } 

        [JsonProperty("search_index_sync_timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Search_index_sync_timestamp { get; set; } 

        [JsonProperty("search_index_sync_batches", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Search_index_sync_batches { get; set; } 

        [JsonProperty("kbpermalinks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Permalinks>? Kbpermalinks { get; set; } 

        [JsonProperty("negativeFeedbackTicket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Faults? NegativeFeedbackTicket { get; set; } 

        [JsonProperty("generatetoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Generatetoken { get; set; } 

        [JsonProperty("latestversion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Latestversion { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Table { get; set; } 

        [JsonProperty("ticket_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_template_id { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KBEntry_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("view_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? View_count { get; set; } 

        [JsonProperty("useful_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useful_count { get; set; } 

        [JsonProperty("notuseful_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Notuseful_count { get; set; } 

        [JsonProperty("date_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_created { get; set; } 

        [JsonProperty("date_edited", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_edited { get; set; } 

        [JsonProperty("tag_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tag_string { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("next_review_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Next_review_date { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("limit_start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Limit_start_date { get; set; } 

        [JsonProperty("limit_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Limit_end_date { get; set; } 

        [JsonProperty("editor_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Editor_type { get; set; } 

        [JsonProperty("kb_tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kb_tags { get; set; } 

        [JsonProperty("confluence_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Confluence_url { get; set; } 

        [JsonProperty("search_score", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Search_score { get; set; } 

        [JsonProperty("resolution_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resolution_list { get; set; } 

        [JsonProperty("link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Link { get; set; } 

        [JsonProperty("geo_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<GeoLocationRestriction>? Geo_restrictions { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Table { get; set; } 

        [JsonProperty("ticket_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_template_id { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KandjiDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("apiurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Apiurl { get; set; } 

        [JsonProperty("new_integration_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_integration_key { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("default_devicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicesite { get; set; } 

        [JsonProperty("default_devicesite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicesite_name { get; set; } 

        [JsonProperty("default_devicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicetype { get; set; } 

        [JsonProperty("default_devicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicetypename { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_fieldname { get; set; } 

        [JsonProperty("fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Fieldmappings { get; set; } 

        [JsonProperty("sitemappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationSiteMapping>? Sitemappings { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("delete_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete_devices { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

        [JsonProperty("dont_update_device_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_device_type { get; set; } 

        [JsonProperty("dont_move_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_site { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("default_assetgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup { get; set; } 

        [JsonProperty("default_assetgroupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroupname { get; set; } 

        [JsonProperty("assettype_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_choice { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_field { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KashflowDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("client_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_top_level { get; set; } 

        [JsonProperty("client_item_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_item_tax { get; set; } 

        [JsonProperty("client_service_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_service_tax { get; set; } 

        [JsonProperty("client_contract_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_contract_tax { get; set; } 

        [JsonProperty("client_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_top_level_name { get; set; } 

        [JsonProperty("item_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_group { get; set; } 

        [JsonProperty("item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_group_name { get; set; } 

        [JsonProperty("isdefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isdefault { get; set; } 

        [JsonProperty("enablesync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enablesync { get; set; } 

        [JsonProperty("default_item_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_item_code { get; set; } 

        [JsonProperty("show_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_message { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("client_item_tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_item_tax_name { get; set; } 

        [JsonProperty("client_service_tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_service_tax_name { get; set; } 

        [JsonProperty("client_contract_tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_contract_tax_name { get; set; } 

        [JsonProperty("supplier_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_top_level { get; set; } 

        [JsonProperty("supplier_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_top_level_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KbEntryAreaAccess
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("kb_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kb_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KbEntryTopLevelAccess
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("toplevel_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel_id { get; set; } 

        [JsonProperty("toplevel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Toplevel_name { get; set; } 

        [JsonProperty("kb_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kb_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KeyPair
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KeyPair2
    {
        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Label { get; set; } 

        [JsonProperty("isnew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isnew { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KeyPair3
    {
        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Label { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KeyPair4
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class KeyPair7
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LDAPConnection
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("connection_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connection_type { get; set; } 

        [JsonProperty("hostname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hostname { get; set; } 

        [JsonProperty("domainname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domainname { get; set; } 

        [JsonProperty("authentication_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Authentication_type { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("integrator_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integrator_password { get; set; } 

        [JsonProperty("basedn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Basedn { get; set; } 

        [JsonProperty("synccontacts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Synccontacts { get; set; } 

        [JsonProperty("external", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? External { get; set; } 

        [JsonProperty("phppassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phppassword { get; set; } 

        [JsonProperty("pagesize", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pagesize { get; set; } 

        [JsonProperty("port", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Port { get; set; } 

        [JsonProperty("use_ssl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_ssl { get; set; } 

        [JsonProperty("mappings_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LDAPName>? Mappings_user { get; set; } 

        [JsonProperty("mappings_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LDAPName>? Mappings_agent { get; set; } 

        [JsonProperty("ldap_strings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LDAPString>? Ldap_strings { get; set; } 

        [JsonProperty("useadauthentication", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useadauthentication { get; set; } 

        [JsonProperty("_is_test", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_test { get; set; } 

        [JsonProperty("_connection_success", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _connection_success { get; set; } 

        [JsonProperty("_connection_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _connection_message { get; set; } 

        [JsonProperty("_get_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _get_mappings { get; set; } 

        [JsonProperty("_containers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LDAPString>? _containers { get; set; } 

        [JsonProperty("_containerfilter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _containerfilter { get; set; } 

        [JsonProperty("_get_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _get_users { get; set; } 

        [JsonProperty("_userfilter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _userfilter { get; set; } 

        [JsonProperty("_new_only", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _new_only { get; set; } 

        [JsonProperty("cab_ldap_strings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LDAPString>? Cab_ldap_strings { get; set; } 

        [JsonProperty("halointegratorenabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegratorenabled { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("halointegrator_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Halointegrator_importtype { get; set; } 

        [JsonProperty("halointegrator_batch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Halointegrator_batch { get; set; } 

        [JsonProperty("halointegrator_ipaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_ipaddress { get; set; } 

        [JsonProperty("halointegrator_allowedclientidslist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair3>? Halointegrator_allowedclientidslist { get; set; } 

        [JsonProperty("halointegrator_allowedclientids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_allowedclientids { get; set; } 

        [JsonProperty("user_matching_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_matching_fields { get; set; } 

        [JsonProperty("agent_matching_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_matching_fields { get; set; } 

        [JsonProperty("user_matching_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? User_matching_list { get; set; } 

        [JsonProperty("agent_matching_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Agent_matching_list { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("allow_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_access { get; set; } 

        [JsonProperty("syncedstrings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Syncedstrings { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("uactguidmappingfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Uactguidmappingfield { get; set; } 

        [JsonProperty("new_user_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_user_template { get; set; } 

        [JsonProperty("new_user_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_user_type { get; set; } 

        [JsonProperty("mappings_new_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LDAPName>? Mappings_new_user { get; set; } 

        [JsonProperty("new_user_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_user_template_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LDAPName
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("connection_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connection_id { get; set; } 

        [JsonProperty("ldap_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ldap_field { get; set; } 

        [JsonProperty("nhd_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nhd_field { get; set; } 

        [JsonProperty("is_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_user { get; set; } 

        [JsonProperty("is_userticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_userticket { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LDAPString
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("connection_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connection_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dn { get; set; } 

        [JsonProperty("ldapstring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ldapstring { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("lastnewuserdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastnewuserdate { get; set; } 

        [JsonProperty("filter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter { get; set; } 

        [JsonProperty("agentmapping", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Agentmapping { get; set; } 

        [JsonProperty("isrecursive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isrecursive { get; set; } 

        [JsonProperty("mapping_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mapping_type { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LDAPUser>? Users { get; set; } 

        [JsonProperty("cabmapping", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cabmapping { get; set; } 

        [JsonProperty("cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cab_id { get; set; } 

        [JsonProperty("cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cab_name { get; set; } 

        [JsonProperty("lastsynced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsynced { get; set; } 

        [JsonProperty("userrole_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userrole_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LDAPUser
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("distinguishedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Distinguishedname { get; set; } 

        [JsonProperty("userAccountControl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UserAccountControl { get; set; } 

        [JsonProperty("objectguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Objectguid { get; set; } 

        [JsonProperty("manager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manager { get; set; } 

        [JsonProperty("memberOf", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MemberOf { get; set; } 

        [JsonProperty("attributes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Attributes { get; set; } 

        [JsonProperty("uactguidMapping", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UactguidMapping { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LanguagePack
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("short_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Short_name { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("flag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Flag { get; set; } 

        [JsonProperty("is_custom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_custom { get; set; } 

        [JsonProperty("synctonhd", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Synctonhd { get; set; } 

        [JsonProperty("linked_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_id { get; set; } 

        [JsonProperty("linked_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_code { get; set; } 

        [JsonProperty("azure_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(20)]
        public string? Azure_code { get; set; } 

        [JsonProperty("is_right_to_left", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_right_to_left { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string? Notes { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Translations { get; set; } 

        [JsonProperty("translation_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslations>? Translation_details { get; set; } 

        [JsonProperty("translations_are_custom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Translations_are_custom { get; set; } 

        [JsonProperty("dont_remove_translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_remove_translations { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LanguagePackTranslations
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("language_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Language_id { get; set; } 

        [JsonProperty("sysid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sysid { get; set; } 

        [JsonProperty("systype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Systype { get; set; } 

        [JsonProperty("display_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Display_id { get; set; } 

        [JsonProperty("translation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Translation { get; set; } 

        [JsonProperty("incomplete", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incomplete { get; set; } 

        [JsonProperty("iscustomised", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iscustomised { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("default_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_string { get; set; } 

        [JsonProperty("context", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Context { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LanguagePackTranslationsCustom
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("language_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Language_id { get; set; } 

        [JsonProperty("entity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Entity { get; set; } 

        [JsonProperty("fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Fieldname { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id { get; set; } 

        [JsonProperty("entity_id2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id2 { get; set; } 

        [JsonProperty("translation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Translation { get; set; } 

        [JsonProperty("_dotranslate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dotranslate { get; set; } 

        [JsonProperty("_translateonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _translateonly { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("default_translation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_translation { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LansweeperRelation
    {
        [JsonProperty("childAssetKey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ChildAssetKey { get; set; } 

        [JsonProperty("lastChanged", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? LastChanged { get; set; } 

        [JsonProperty("parentAssetKey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ParentAssetKey { get; set; } 

        [JsonProperty("startDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? StartDate { get; set; } 

        [JsonProperty("endDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EndDate { get; set; } 

        [JsonProperty("comment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Comment { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LansweeperSoftware
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("publisher", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Publisher { get; set; } 

        [JsonProperty("version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version { get; set; } 

        [JsonProperty("installDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? InstallDate { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LansweeperStartExport
    {
        [JsonProperty("siteMappingId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? SiteMappingId { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LicenceInfo
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version { get; set; } 

        [JsonProperty("apiurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Apiurl { get; set; } 

        [JsonProperty("organisationname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Organisationname { get; set; } 

        [JsonProperty("is_trial", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_trial { get; set; } 

        [JsonProperty("support_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Support_type { get; set; } 

        [JsonProperty("trialexpiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Trialexpiry { get; set; } 

        [JsonProperty("registrationdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Registrationdate { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LicenceMatch
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("licence_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("licence_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Licence_name { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LicenceRole
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("softwarelicence_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Softwarelicence_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Licence_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Count { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("purchase_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Purchase_price { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("snowid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snowid { get; set; } 

        [JsonProperty("manufacturer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manufacturer { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("licences_in_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licences_in_use { get; set; } 

        [JsonProperty("licences_in_use_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licences_in_use_user { get; set; } 

        [JsonProperty("licences_available", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licences_available { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("licence_client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Licence_client_name { get; set; } 

        [JsonProperty("vendor", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Vendor { get; set; } 

        [JsonProperty("licence_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LicenceRole>? Licence_roles { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant_id { get; set; } 

        [JsonProperty("tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant_name { get; set; } 

        [JsonProperty("name_extra", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name_extra { get; set; } 

        [JsonProperty("deleted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deleted { get; set; } 

        [JsonProperty("assigned_at_deletion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assigned_at_deletion { get; set; } 

        [JsonProperty("billing_cycle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billing_cycle { get; set; } 

        [JsonProperty("term_duration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Term_duration { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("autorenew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autorenew { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("_importchildren", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _importchildren { get; set; } 

        [JsonProperty("third_party_product", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_product { get; set; } 

        [JsonProperty("price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Price { get; set; } 

        [JsonProperty("monthly_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Monthly_price { get; set; } 

        [JsonProperty("monthly_cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Monthly_cost { get; set; } 

        [JsonProperty("_removed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _removed { get; set; } 

        [JsonProperty("distributor", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Distributor { get; set; } 

        [JsonProperty("is_active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_active { get; set; } 

        [JsonProperty("azure_connection_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_connection_id { get; set; } 

        [JsonProperty("azure_connection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AzureADConnection? Azure_connection { get; set; } 

        [JsonProperty("requested_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requested_quantity { get; set; } 

        [JsonProperty("requested_quantity_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Requested_quantity_date { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("ingram_micro_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ingram_micro_details_id { get; set; } 

        [JsonProperty("_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _details_id { get; set; } 

        [JsonProperty("snow_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Snow_client_id { get; set; } 

        [JsonProperty("thirdparty_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdparty_client_id { get; set; } 

        [JsonProperty("product_sku", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Product_sku { get; set; } 

        [JsonProperty("vendor_product_sku", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Vendor_product_sku { get; set; } 

        [JsonProperty("parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent_id { get; set; } 

        [JsonProperty("configuration_items", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Configuration_items { get; set; } 

        [JsonProperty("add_configuration_items", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Add_configuration_items { get; set; } 

        [JsonProperty("licence_match", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LicenceMatch>? Licence_match { get; set; } 

        [JsonProperty("device_child_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_child_id { get; set; } 

        [JsonProperty("device_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_count { get; set; } 

        [JsonProperty("new_software", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DeviceApplications? New_software { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum LicenseModel
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LinkIssue
    {
        [JsonProperty("ticketId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TicketId { get; set; } 

        [JsonProperty("issueId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? IssueId { get; set; } 

        [JsonProperty("externalLinkId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? ExternalLinkId { get; set; } 

        [JsonProperty("ticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Faults? Ticket { get; set; } 

        [JsonProperty("product", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ReleaseProduct? Product { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LinkWorkItem
    {
        [JsonProperty("ticketId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TicketId { get; set; } 

        [JsonProperty("workItemId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? WorkItemId { get; set; } 

        [JsonProperty("externalLinkId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? ExternalLinkId { get; set; } 

        [JsonProperty("product", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ReleaseProduct? Product { get; set; } 

        [JsonProperty("rev", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rev { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LiveChatIsTyping
    {
        [JsonProperty("chat_id", Required = Required.Always)]
        public int Chat_id { get; set; } 

        [JsonProperty("sender_id", Required = Required.Always)]
        public int Sender_id { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("_stopped", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _stopped { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LiveChatMsg
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("chat_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chat_id { get; set; } 

        [JsonProperty("sender_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sender_id { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("value_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_int { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("system_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? System_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("unknown_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Unknown_id { get; set; } 

        [JsonProperty("display_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Display_name { get; set; } 

        [JsonProperty("lastmessageid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lastmessageid { get; set; } 

        [JsonProperty("_isremoteinvite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isremoteinvite { get; set; } 

        [JsonProperty("_remoteintegration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _remoteintegration { get; set; } 

        [JsonProperty("remotetechid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Remotetechid { get; set; } 

        [JsonProperty("user_chat_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_chat_url { get; set; } 

        [JsonProperty("input_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Input_id { get; set; } 

        [JsonProperty("next_input_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Next_input_id { get; set; } 

        [JsonProperty("next_input_fieldinfo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ChatInputField? Next_input_fieldinfo { get; set; } 

        [JsonProperty("kb_search_results", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KBEntry_List>? Kb_search_results { get; set; } 

        [JsonProperty("services_search_results", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServSite_List>? Services_search_results { get; set; } 

        [JsonProperty("chat_image_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chat_image_type { get; set; } 

        [JsonProperty("attachment_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Attachment_ids { get; set; } 

        [JsonProperty("attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Attachment_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("value_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value_bool { get; set; } 

        [JsonProperty("value_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Value_date { get; set; } 

        [JsonProperty("value_multi", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_multi { get; set; } 

        [JsonProperty("is_message_safe", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_message_safe { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LogicMonitorWebhook
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message { get; set; } 

        [JsonProperty("level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Level { get; set; } 

        [JsonProperty("host", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Host { get; set; } 

        [JsonProperty("datasource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datasource { get; set; } 

        [JsonProperty("admin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Admin { get; set; } 

        [JsonProperty("ticketid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticketid { get; set; } 

        [JsonProperty("halo_customer_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_customer_id { get; set; } 

        [JsonProperty("halo_customer_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_customer_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LoginScreenConfig
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("application_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Application_id { get; set; } 

        [JsonProperty("function", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Function { get; set; } 

        [JsonProperty("function_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Function_name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Display { get; set; } 

        [JsonProperty("label_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Label_override { get; set; } 

        [JsonProperty("hasform", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hasform { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class LoginToken
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("verifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Verifier { get; set; } 

        [JsonProperty("token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token { get; set; } 

        [JsonProperty("enc_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Enc_id { get; set; } 

        [JsonProperty("token_used", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Token_used { get; set; } 

        [JsonProperty("used_timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Used_timestamp { get; set; } 

        [JsonProperty("used_userid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Used_userid { get; set; } 

        [JsonProperty("jwt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jwt { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Lookup
    {
        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("lookupid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookupid { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("value2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value2 { get; set; } 

        [JsonProperty("value2_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value2_bool { get; set; } 

        [JsonProperty("value3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value3 { get; set; } 

        [JsonProperty("value3_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value3_bool { get; set; } 

        [JsonProperty("value4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value4 { get; set; } 

        [JsonProperty("value4_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value4_bool { get; set; } 

        [JsonProperty("value5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value5 { get; set; } 

        [JsonProperty("value5_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value5_bool { get; set; } 

        [JsonProperty("value6", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value6 { get; set; } 

        [JsonProperty("value6_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value6_bool { get; set; } 

        [JsonProperty("value7", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value7 { get; set; } 

        [JsonProperty("value7_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value7_bool { get; set; } 

        [JsonProperty("value8", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value8 { get; set; } 

        [JsonProperty("value8_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value8_bool { get; set; } 

        [JsonProperty("value9", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value9 { get; set; } 

        [JsonProperty("value9_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value9_bool { get; set; } 

        [JsonProperty("rates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChargeRate>? Rates { get; set; } 

        [JsonProperty("contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_ref { get; set; } 

        [JsonProperty("overriding_rate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Overriding_rate_id { get; set; } 

        [JsonProperty("_isnewcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isnewcode { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("kashflow_tenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kashflow_tenant { get; set; } 

        [JsonProperty("email_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_template_name { get; set; } 

        [JsonProperty("sla_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sla_name { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("custom1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Custom1 { get; set; } 

        [JsonProperty("custom1_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Custom1_bool { get; set; } 

        [JsonProperty("custom2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Custom2 { get; set; } 

        [JsonProperty("tax_rate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_rate_name { get; set; } 

        [JsonProperty("xero_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_name { get; set; } 

        [JsonProperty("surcharge_item_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Surcharge_item_name { get; set; } 

        [JsonProperty("dynamics_company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dynamics_company_name { get; set; } 

        [JsonProperty("valueint1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Valueint1 { get; set; } 

        [JsonProperty("linked_item", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_item { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("sub_lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Lookup>? Sub_lookup { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("column_profile_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Column_profile_name { get; set; } 

        [JsonProperty("jira_instance_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_instance_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MYOBDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("isdesktop", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isdesktop { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("company_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Company_url { get; set; } 

        [JsonProperty("company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Company_id { get; set; } 

        [JsonProperty("company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Company_name { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("newmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newmethod { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("defaulttaxcodeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaulttaxcodeid { get; set; } 

        [JsonProperty("defaulttaxcodename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaulttaxcodename { get; set; } 

        [JsonProperty("clienttoplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clienttoplevel { get; set; } 

        [JsonProperty("defaultitemgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultitemgroup { get; set; } 

        [JsonProperty("defaultsalesaccountid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultsalesaccountid { get; set; } 

        [JsonProperty("defaultsalesaccountname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultsalesaccountname { get; set; } 

        [JsonProperty("defaultexpenseaccountid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultexpenseaccountid { get; set; } 

        [JsonProperty("defaultexpenseaccountname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultexpenseaccountname { get; set; } 

        [JsonProperty("enablesync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enablesync { get; set; } 

        [JsonProperty("syncentities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncentities { get; set; } 

        [JsonProperty("showmessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showmessage { get; set; } 

        [JsonProperty("defaultinvoiceitem", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultinvoiceitem { get; set; } 

        [JsonProperty("defaultorderitem", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultorderitem { get; set; } 

        [JsonProperty("suppliertoplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Suppliertoplevel { get; set; } 

        [JsonProperty("suppliernamefield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Suppliernamefield { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("client_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_top_level_name { get; set; } 

        [JsonProperty("item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_group_name { get; set; } 

        [JsonProperty("supplier_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_top_level_name { get; set; } 

        [JsonProperty("sync_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sync_entities_list { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("client_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_mappings { get; set; } 

        [JsonProperty("supplier_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Supplier_mappings { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailCampaign
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("created_datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Created_datetime { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("status_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_desc { get; set; } 

        [JsonProperty("sent_datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Sent_datetime { get; set; } 

        [JsonProperty("emails_sent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emails_sent { get; set; } 

        [JsonProperty("halo_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halo_created { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("distribution_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Distribution_list { get; set; } 

        [JsonProperty("mailbox_from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_from { get; set; } 

        [JsonProperty("mailbox_replyto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailbox_replyto { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type_name { get; set; } 

        [JsonProperty("distribution_list_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Distribution_list_name { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("mailchimp_campaign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpCampaign? Mailchimp_campaign { get; set; } 

        [JsonProperty("recipients_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recipients_count { get; set; } 

        [JsonProperty("create_in", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Create_in { get; set; } 

        [JsonProperty("mailchimp_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailchimp_list { get; set; } 

        [JsonProperty("mailchimp_sent_to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MailchimpSentTo>? Mailchimp_sent_to { get; set; } 

        [JsonProperty("emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MailCampaignEmail>? Emails { get; set; } 

        [JsonProperty("marketing_unsubscribes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MarketingUnsubscribe>? Marketing_unsubscribes { get; set; } 

        [JsonProperty("unsubscribe_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unsubscribe_rate { get; set; } 

        [JsonProperty("total_unsubscribes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_unsubscribes { get; set; } 

        [JsonProperty("total_opens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_opens { get; set; } 

        [JsonProperty("unique_open_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unique_open_rate { get; set; } 

        [JsonProperty("total_clicks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_clicks { get; set; } 

        [JsonProperty("click_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Click_rate { get; set; } 

        [JsonProperty("top_clicks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TopLinkClick>? Top_clicks { get; set; } 

        [JsonProperty("all_clicks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MarketingOpen>? All_clicks { get; set; } 

        [JsonProperty("all_opens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MarketingOpen>? All_opens { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_start_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _start_code { get; set; } 

        [JsonProperty("_start_campaign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _start_campaign { get; set; } 

        [JsonProperty("_start_campaign_confirmed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _start_campaign_confirmed { get; set; } 

        [JsonProperty("_cancel_campaign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _cancel_campaign { get; set; } 

        [JsonProperty("_end_campaign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _end_campaign { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailCampaignEmail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("mailcampaign_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailcampaign_id { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("body_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body_html { get; set; } 

        [JsonProperty("body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body { get; set; } 

        [JsonProperty("date_sent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_sent { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("send_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Send_type { get; set; } 

        [JsonProperty("send_at_datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Send_at_datetime { get; set; } 

        [JsonProperty("send_at_timeafter_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Send_at_timeafter_days { get; set; } 

        [JsonProperty("send_at_timeafter_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Send_at_timeafter_hours { get; set; } 

        [JsonProperty("send_at_timeafter_mins", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Send_at_timeafter_mins { get; set; } 

        [JsonProperty("status_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_desc { get; set; } 

        [JsonProperty("design", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public HtmlDesign? Design { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Mailbox
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("server", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Server { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("smtpaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Smtpaddress { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("azureemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azureemail { get; set; } 

        [JsonProperty("display_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Display_address { get; set; } 

        [JsonProperty("google_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Google_email { get; set; } 

        [JsonProperty("inbound_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inbound_method { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_outlook_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_outlook_lastsync { get; set; } 

        [JsonProperty("halointegrator_outlook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegrator_outlook { get; set; } 

        [JsonProperty("halointegrator_outlook_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_outlook_lasterror { get; set; } 

        [JsonProperty("password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Password { get; set; } 

        [JsonProperty("usetls", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Usetls { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restriction_type { get; set; } 

        [JsonProperty("restrictto_org_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictto_org_id { get; set; } 

        [JsonProperty("restrictto_org_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restrictto_org_name { get; set; } 

        [JsonProperty("restrictto_department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictto_department_id { get; set; } 

        [JsonProperty("restrictto_department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restrictto_department_name { get; set; } 

        [JsonProperty("restrictto_team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictto_team_id { get; set; } 

        [JsonProperty("restrictto_team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restrictto_team_name { get; set; } 

        [JsonProperty("exchangemailboxdisplayname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exchangemailboxdisplayname { get; set; } 

        [JsonProperty("exchangemailboxfqdn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exchangemailboxfqdn { get; set; } 

        [JsonProperty("harddeletereadmessages", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Harddeletereadmessages { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("popport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Popport { get; set; } 

        [JsonProperty("smtpserver", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Smtpserver { get; set; } 

        [JsonProperty("smtpusername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Smtpusername { get; set; } 

        [JsonProperty("smtppassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Smtppassword { get; set; } 

        [JsonProperty("smtpport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Smtpport { get; set; } 

        [JsonProperty("smtpusetls", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Smtpusetls { get; set; } 

        [JsonProperty("usesmtpforazuremailbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Usesmtpforazuremailbox { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("smtpdisplayname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Smtpdisplayname { get; set; } 

        [JsonProperty("syncaddressbook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Syncaddressbook { get; set; } 

        [JsonProperty("dontsendack", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsendack { get; set; } 

        [JsonProperty("defaultuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultuser { get; set; } 

        [JsonProperty("defaultuserid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultuserid { get; set; } 

        [JsonProperty("changeseq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Changeseq { get; set; } 

        [JsonProperty("accesstoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accesstoken { get; set; } 

        [JsonProperty("accesstokenexpirydate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Accesstokenexpirydate { get; set; } 

        [JsonProperty("refreshtoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Refreshtoken { get; set; } 

        [JsonProperty("refreshtokenexpirydate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Refreshtokenexpirydate { get; set; } 

        [JsonProperty("tokendestructiondate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Tokendestructiondate { get; set; } 

        [JsonProperty("deleteditemsfolder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deleteditemsfolder { get; set; } 

        [JsonProperty("tlstype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tlstype { get; set; } 

        [JsonProperty("ewsusername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ewsusername { get; set; } 

        [JsonProperty("azureappid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azureappid { get; set; } 

        [JsonProperty("azuretenant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azuretenant { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("new_azure_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_azure_access_token { get; set; } 

        [JsonProperty("new_azure_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_azure_refresh_token { get; set; } 

        [JsonProperty("oauth_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oauth_code { get; set; } 

        [JsonProperty("azureredirecturi", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azureredirecturi { get; set; } 

        [JsonProperty("_exchangecodefortoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecodefortoken { get; set; } 

        [JsonProperty("_testonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _testonly { get; set; } 

        [JsonProperty("signature_overrides", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MailboxTechnician>? Signature_overrides { get; set; } 

        [JsonProperty("_isglobalsmtp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isglobalsmtp { get; set; } 

        [JsonProperty("new_google_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_google_access_token { get; set; } 

        [JsonProperty("new_google_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_google_refresh_token { get; set; } 

        [JsonProperty("google_token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Google_token_expiry { get; set; } 

        [JsonProperty("google_redirect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Google_redirect { get; set; } 

        [JsonProperty("_getgoogletoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _getgoogletoken { get; set; } 

        [JsonProperty("google_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Google_code { get; set; } 

        [JsonProperty("azure_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Azure_authorized { get; set; } 

        [JsonProperty("google_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Google_authorized { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("shared_mailbox_emailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Shared_mailbox_emailaddress { get; set; } 

        [JsonProperty("google_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Google_type { get; set; } 

        [JsonProperty("graph_host", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Graph_host { get; set; } 

        [JsonProperty("azuredatecutoff", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Azuredatecutoff { get; set; } 

        [JsonProperty("azureleavemailininbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Azureleavemailininbox { get; set; } 

        [JsonProperty("imapdatecutoff", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Imapdatecutoff { get; set; } 

        [JsonProperty("imapleavemailininbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Imapleavemailininbox { get; set; } 

        [JsonProperty("azure_subscription_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_subscription_id { get; set; } 

        [JsonProperty("azure_subscription_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Azure_subscription_expiry { get; set; } 

        [JsonProperty("azure_subscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Azure_subscribed { get; set; } 

        [JsonProperty("new_azure_subscription_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_azure_subscription_secret { get; set; } 

        [JsonProperty("_webhookaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WebhookSubscriptionAction? _webhookaction { get; set; } 

        [JsonProperty("ignore_cc_emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignore_cc_emails { get; set; } 

        [JsonProperty("accept_auto_replies", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Accept_auto_replies { get; set; } 

        [JsonProperty("allow_email_hashtags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_email_hashtags { get; set; } 

        [JsonProperty("site_prefix_matching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Site_prefix_matching { get; set; } 

        [JsonProperty("site_wildcard_matching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Site_wildcard_matching { get; set; } 

        [JsonProperty("site_domain_matching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Site_domain_matching { get; set; } 

        [JsonProperty("site_tocc_matching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Site_tocc_matching { get; set; } 

        [JsonProperty("unmatched_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unmatched_users { get; set; } 

        [JsonProperty("newuser_default_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newuser_default_site { get; set; } 

        [JsonProperty("newuser_default_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newuser_default_site_name { get; set; } 

        [JsonProperty("newuser_send_welcome_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newuser_send_welcome_email { get; set; } 

        [JsonProperty("newuser_send_ack", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newuser_send_ack { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("azure_authority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_authority { get; set; } 

        [JsonProperty("defaultusersite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultusersite { get; set; } 

        [JsonProperty("safe_attachment_policy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Safe_attachment_policy { get; set; } 

        [JsonProperty("safe_attachment_placeholder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Safe_attachment_placeholder { get; set; } 

        [JsonProperty("creationdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Creationdate { get; set; } 

        [JsonProperty("dontimportbeforecreation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontimportbeforecreation { get; set; } 

        [JsonProperty("azure_authentication_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_authentication_type { get; set; } 

        [JsonProperty("_confirmmanagedidentitysetup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _confirmmanagedidentitysetup { get; set; } 

        [JsonProperty("_confirmclientcredentialssetup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _confirmclientcredentialssetup { get; set; } 

        [JsonProperty("stopnewticketsviaemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Stopnewticketsviaemail { get; set; } 

        [JsonProperty("_confirmropcssetup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _confirmropcssetup { get; set; } 

        [JsonProperty("showinfromaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showinfromaddress { get; set; } 

        [JsonProperty("mappings_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_user { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailboxAddress
    {
        [JsonProperty("route", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Route { get; set; } 

        [JsonProperty("address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address { get; set; } 

        [JsonProperty("localPart", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? LocalPart { get; set; } 

        [JsonProperty("domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domain { get; set; } 

        [JsonProperty("isInternational", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsInternational { get; set; } 

        [JsonProperty("encoding", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Encoding? Encoding { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailboxTechnician
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("mailbox_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Signature { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MailboxType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

        _5 = 5,

        _6 = 6,

        _7 = 7,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpAb_Split_Opts
    {
        [JsonProperty("split_test", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Split_test { get; set; } 

        [JsonProperty("pick_winner", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pick_winner { get; set; } 

        [JsonProperty("wait_units", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Wait_units { get; set; } 

        [JsonProperty("wait_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Wait_time { get; set; } 

        [JsonProperty("split_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Split_size { get; set; } 

        [JsonProperty("from_name_a", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From_name_a { get; set; } 

        [JsonProperty("from_name_b", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From_name_b { get; set; } 

        [JsonProperty("reply_email_a", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reply_email_a { get; set; } 

        [JsonProperty("reply_email_b", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reply_email_b { get; set; } 

        [JsonProperty("subject_a", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject_a { get; set; } 

        [JsonProperty("subject_b", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject_b { get; set; } 

        [JsonProperty("send_time_a", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Send_time_a { get; set; } 

        [JsonProperty("send_time_b", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Send_time_b { get; set; } 

        [JsonProperty("send_time_winner", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Send_time_winner { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpCampaign
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("web_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Web_id { get; set; } 

        [JsonProperty("parent_campaign_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parent_campaign_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("create_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Create_time { get; set; } 

        [JsonProperty("archive_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Archive_url { get; set; } 

        [JsonProperty("long_archive_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Long_archive_url { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("emails_sent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emails_sent { get; set; } 

        [JsonProperty("send_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Send_time { get; set; } 

        [JsonProperty("content_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Content_type { get; set; } 

        [JsonProperty("needs_block_refresh", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Needs_block_refresh { get; set; } 

        [JsonProperty("resendable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Resendable { get; set; } 

        [JsonProperty("recipients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpRecipients? Recipients { get; set; } 

        [JsonProperty("settings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpSettings? Settings { get; set; } 

        [JsonProperty("variate_settings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpVariate_Settings? Variate_settings { get; set; } 

        [JsonProperty("tracking", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpTracking? Tracking { get; set; } 

        [JsonProperty("rss_opts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpRss_Opts? Rss_opts { get; set; } 

        [JsonProperty("ab_split_opts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpAb_Split_Opts? Ab_split_opts { get; set; } 

        [JsonProperty("social_card", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpSocial_Card? Social_card { get; set; } 

        [JsonProperty("report_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpReport_Summary? Report_summary { get; set; } 

        [JsonProperty("delivery_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpDelivery_Status? Delivery_status { get; set; } 

        [JsonProperty("_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Mailchimp_Links>? _links { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpCapsule
    {
        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Notes { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpCombination
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("subject_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Subject_line { get; set; } 

        [JsonProperty("send_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Send_time { get; set; } 

        [JsonProperty("from_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? From_name { get; set; } 

        [JsonProperty("reply_to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reply_to { get; set; } 

        [JsonProperty("content_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Content_description { get; set; } 

        [JsonProperty("recipients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recipients { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpDelivery_Status
    {
        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("can_cancel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_cancel { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("emails_sent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emails_sent { get; set; } 

        [JsonProperty("emails_canceled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emails_canceled { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpEcommerce
    {
        [JsonProperty("total_orders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_orders { get; set; } 

        [JsonProperty("total_spent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_spent { get; set; } 

        [JsonProperty("total_revenue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_revenue { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpMerge_Fields
    {
        [JsonProperty("property1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Property1 { get; set; } 

        [JsonProperty("property2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Property2 { get; set; } 

        [JsonProperty("fname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fname { get; set; } 

        [JsonProperty("lname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lname { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpRecipients
    {
        [JsonProperty("list_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? List_id { get; set; } 

        [JsonProperty("list_is_active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? List_is_active { get; set; } 

        [JsonProperty("list_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? List_name { get; set; } 

        [JsonProperty("segment_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Segment_text { get; set; } 

        [JsonProperty("recipient_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recipient_count { get; set; } 

        [JsonProperty("segment_opts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpSegment_Opts? Segment_opts { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpReport_Summary
    {
        [JsonProperty("opens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opens { get; set; } 

        [JsonProperty("unique_opens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unique_opens { get; set; } 

        [JsonProperty("open_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public float? Open_rate { get; set; } 

        [JsonProperty("clicks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clicks { get; set; } 

        [JsonProperty("subscriber_clicks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Subscriber_clicks { get; set; } 

        [JsonProperty("click_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public float? Click_rate { get; set; } 

        [JsonProperty("ecommerce", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpEcommerce? Ecommerce { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpRss_Opts
    {
        [JsonProperty("feed_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Feed_url { get; set; } 

        [JsonProperty("frequency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Frequency { get; set; } 

        [JsonProperty("schedule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Schedule? Schedule { get; set; } 

        [JsonProperty("last_sent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_sent { get; set; } 

        [JsonProperty("constrain_rss_img", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Constrain_rss_img { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpSalesforce
    {
        [JsonProperty("campaign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Campaign { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Notes { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpSegment_Opts
    {
        [JsonProperty("saved_segment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Saved_segment_id { get; set; } 

        [JsonProperty("prebuilt_segment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Prebuilt_segment_id { get; set; } 

        [JsonProperty("match", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Match { get; set; } 

        [JsonProperty("conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Conditions { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpSentTo
    {
        [JsonProperty("email_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_id { get; set; } 

        [JsonProperty("email_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_address { get; set; } 

        [JsonProperty("merge_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpMerge_Fields? Merge_fields { get; set; } 

        [JsonProperty("vip", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Vip { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("open_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_count { get; set; } 

        [JsonProperty("last_open", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_open { get; set; } 

        [JsonProperty("absplit_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Absplit_group { get; set; } 

        [JsonProperty("gmt_offset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public float? Gmt_offset { get; set; } 

        [JsonProperty("list_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? List_id { get; set; } 

        [JsonProperty("campaign_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Campaign_id { get; set; } 

        [JsonProperty("list_is_active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? List_is_active { get; set; } 

        [JsonProperty("_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Mailchimp_Links>? _links { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpSettings
    {
        [JsonProperty("subject_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject_line { get; set; } 

        [JsonProperty("preview_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Preview_text { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("from_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From_name { get; set; } 

        [JsonProperty("reply_to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reply_to { get; set; } 

        [JsonProperty("use_conversation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_conversation { get; set; } 

        [JsonProperty("to_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? To_name { get; set; } 

        [JsonProperty("folder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Folder_id { get; set; } 

        [JsonProperty("authenticate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authenticate { get; set; } 

        [JsonProperty("auto_footer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Auto_footer { get; set; } 

        [JsonProperty("inline_css", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inline_css { get; set; } 

        [JsonProperty("auto_tweet", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Auto_tweet { get; set; } 

        [JsonProperty("auto_fb_post", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Auto_fb_post { get; set; } 

        [JsonProperty("fb_comments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fb_comments { get; set; } 

        [JsonProperty("timewarp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Timewarp { get; set; } 

        [JsonProperty("template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Template_id { get; set; } 

        [JsonProperty("drag_and_drop", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Drag_and_drop { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpSocial_Card
    {
        [JsonProperty("image_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Image_url { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpTracking
    {
        [JsonProperty("opens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Opens { get; set; } 

        [JsonProperty("html_clicks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Html_clicks { get; set; } 

        [JsonProperty("text_clicks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Text_clicks { get; set; } 

        [JsonProperty("goal_tracking", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Goal_tracking { get; set; } 

        [JsonProperty("ecomm360", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ecomm360 { get; set; } 

        [JsonProperty("google_analytics", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Google_analytics { get; set; } 

        [JsonProperty("clicktale", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clicktale { get; set; } 

        [JsonProperty("salesforce", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpSalesforce? Salesforce { get; set; } 

        [JsonProperty("capsule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailchimpCapsule? Capsule { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MailchimpVariate_Settings
    {
        [JsonProperty("winning_combination_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Winning_combination_id { get; set; } 

        [JsonProperty("winning_campaign_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Winning_campaign_id { get; set; } 

        [JsonProperty("winner_criteria", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Winner_criteria { get; set; } 

        [JsonProperty("wait_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Wait_time { get; set; } 

        [JsonProperty("test_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Test_size { get; set; } 

        [JsonProperty("subject_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Subject_lines { get; set; } 

        [JsonProperty("send_times", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<System.DateTimeOffset>? Send_times { get; set; } 

        [JsonProperty("from_names", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? From_names { get; set; } 

        [JsonProperty("reply_to_addresses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Reply_to_addresses { get; set; } 

        [JsonProperty("contents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Contents { get; set; } 

        [JsonProperty("combinations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MailchimpCombination>? Combinations { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Mailchimp_Links
    {
        [JsonProperty("rel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Rel { get; set; } 

        [JsonProperty("href", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Href { get; set; } 

        [JsonProperty("method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Method { get; set; } 

        [JsonProperty("targetSchema", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TargetSchema { get; set; } 

        [JsonProperty("schema", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Schema { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ManageEngineDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("instancetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Instancetype { get; set; } 

        [JsonProperty("region", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Region { get; set; } 

        [JsonProperty("manageengine_clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manageengine_clientid { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("tokenexpiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Tokenexpiry { get; set; } 

        [JsonProperty("isauthorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isauthorized { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("server_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Server_url { get; set; } 

        [JsonProperty("unique_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Unique_user_id { get; set; } 

        [JsonProperty("_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _code { get; set; } 

        [JsonProperty("_otp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _otp { get; set; } 

        [JsonProperty("set_local_auth_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Set_local_auth_token { get; set; } 

        [JsonProperty("new_integration_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_integration_key { get; set; } 

        [JsonProperty("client_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_links { get; set; } 

        [JsonProperty("default_devicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicesite { get; set; } 

        [JsonProperty("default_devicesite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicesite_name { get; set; } 

        [JsonProperty("default_devicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicetype { get; set; } 

        [JsonProperty("default_devicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicetypename { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_fieldname { get; set; } 

        [JsonProperty("manageengine_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Manageengine_fieldmappings { get; set; } 

        [JsonProperty("sitemappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationSiteMapping>? Sitemappings { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("halo_integrator_import_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_integrator_import_list { get; set; } 

        [JsonProperty("halo_integrator_import_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Halo_integrator_import_types { get; set; } 

        [JsonProperty("delete_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete_devices { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

        [JsonProperty("dont_update_device_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_device_type { get; set; } 

        [JsonProperty("import_software", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Import_software { get; set; } 

        [JsonProperty("dont_move_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_site { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("default_assetgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup { get; set; } 

        [JsonProperty("default_assetgroupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroupname { get; set; } 

        [JsonProperty("assettype_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_choice { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_field { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Manager
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MarketingOpen
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("mailcampaign_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailcampaign_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("email_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_address { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("email_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Email_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("mailcampaign_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailcampaign_name { get; set; } 

        [JsonProperty("email_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_name { get; set; } 

        [JsonProperty("token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MarketingUnsubscribe
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("mailcampaign_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailcampaign_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("email_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_address { get; set; } 

        [JsonProperty("email_unsubscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Email_unsubscribed { get; set; } 

        [JsonProperty("date_unsubscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_unsubscribed { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("mailcampaign_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mailcampaign_name { get; set; } 

        [JsonProperty("email_unsubscribed_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_unsubscribed_name { get; set; } 

        [JsonProperty("token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token { get; set; } 

        [JsonProperty("validate_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Validate_token { get; set; } 

        [JsonProperty("unsub_all", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Unsub_all { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MattermostChannelDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("mmid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mmid { get; set; } 

        [JsonProperty("channelid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Channelid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("agentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agentid { get; set; } 

        [JsonProperty("webhookid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhookid { get; set; } 

        [JsonProperty("webhookname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhookname { get; set; } 

        [JsonProperty("webhookdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhookdesc { get; set; } 

        [JsonProperty("botname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Botname { get; set; } 

        [JsonProperty("boticon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Boticon { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MattermostDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _code { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("channels", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MattermostChannelDetails>? Channels { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("integratorhours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integratorhours { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MattermostPropsObject
    {
        [JsonProperty("from_webhook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From_webhook { get; set; } 

        [JsonProperty("haloid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Haloid { get; set; } 

        [JsonProperty("override_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_username { get; set; } 

        [JsonProperty("webhook_display_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_display_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MattermostWebhook
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("channel_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Channel_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_id { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_id { get; set; } 

        [JsonProperty("display_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Display_name { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("icon_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon_url { get; set; } 

        [JsonProperty("create_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Create_at { get; set; } 

        [JsonProperty("update_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Update_at { get; set; } 

        [JsonProperty("delete_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Delete_at { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MattermostWebhookContent
    {
        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("channel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Channel { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("icon_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon_url { get; set; } 

        [JsonProperty("icon_emoji", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon_emoji { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Attachments { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("props", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MattermostPropsObject? Props { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MerakiWebhook
    {
        [JsonProperty("sharedSecret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SharedSecret { get; set; } 

        [JsonProperty("deviceSerial", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? DeviceSerial { get; set; } 

        [JsonProperty("deviceName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? DeviceName { get; set; } 

        [JsonProperty("alertId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertId { get; set; } 

        [JsonProperty("alertType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertType { get; set; } 

        [JsonProperty("alertTypeId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertTypeId { get; set; } 

        [JsonProperty("alertLevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AlertLevel { get; set; } 

        [JsonProperty("organizationName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? OrganizationName { get; set; } 

        [JsonProperty("networkName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? NetworkName { get; set; } 

        [JsonProperty("alertData", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? AlertData { get; set; } 

        [JsonProperty("networkTags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? NetworkTags { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MessageContent
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("body_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body_text { get; set; } 

        [JsonProperty("body_sms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body_sms { get; set; } 

        [JsonProperty("body_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body_html { get; set; } 

        [JsonProperty("design", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public HtmlDesign? Design { get; set; } 

        [JsonProperty("announcement_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Announcement_end_date { get; set; } 

        [JsonProperty("_isclone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isclone { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("sectionid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sectionid { get; set; } 

        [JsonProperty("header_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Header_text { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("is_single_obj", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_single_obj { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MessageImportance
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MessagePart
    {
        [JsonProperty("body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MessagePartBody? Body { get; set; } 

        [JsonProperty("filename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filename { get; set; } 

        [JsonProperty("headers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MessagePartHeader>? Headers { get; set; } 

        [JsonProperty("mimeType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MimeType { get; set; } 

        [JsonProperty("partId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PartId { get; set; } 

        [JsonProperty("parts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MessagePart>? Parts { get; set; } 

        [JsonProperty("eTag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ETag { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MessagePartBody
    {
        [JsonProperty("attachmentId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AttachmentId { get; set; } 

        [JsonProperty("data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Data { get; set; } 

        [JsonProperty("size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Size { get; set; } 

        [JsonProperty("eTag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ETag { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MessagePartHeader
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("eTag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ETag { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum MessagePriority
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MicrosoftSubscriptionMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("halo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Halo_id { get; set; } 

        [JsonProperty("halo_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_name { get; set; } 

        [JsonProperty("microsoft_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Microsoft_id { get; set; } 

        [JsonProperty("microsoft_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Microsoft_name { get; set; } 

        [JsonProperty("site_path", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_path { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("azure_connection_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_connection_id { get; set; } 

        [JsonProperty("_subscriptionaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WebhookSubscriptionAction? _subscriptionaction { get; set; } 

        [JsonProperty("subscription_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subscription_id { get; set; } 

        [JsonProperty("subscription_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Subscription_expiry { get; set; } 

        [JsonProperty("subscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Subscribed { get; set; } 

        [JsonProperty("new_subscription_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_subscription_key { get; set; } 

        [JsonProperty("azure_connection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AzureADConnection? Azure_connection { get; set; } 

        [JsonProperty("_dosave", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dosave { get; set; } 

        [JsonProperty("mappings_folder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Mappings_folder { get; set; } 

        [JsonProperty("sharepoint_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SharePointList? Sharepoint_list { get; set; } 

        [JsonProperty("sharepoint_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SharePointSite? Sharepoint_site { get; set; } 

        [JsonProperty("change_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Change_token { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("fullname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fullname { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MicrosoftTeamsMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_id { get; set; } 

        [JsonProperty("team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_name { get; set; } 

        [JsonProperty("_subscriptionaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WebhookSubscriptionAction? _subscriptionaction { get; set; } 

        [JsonProperty("subscription_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subscription_id { get; set; } 

        [JsonProperty("subscription_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Subscription_expiry { get; set; } 

        [JsonProperty("subscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Subscribed { get; set; } 

        [JsonProperty("new_subscription_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_subscription_key { get; set; } 

        [JsonProperty("_dosave", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dosave { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MileStone
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("target_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Target_date { get; set; } 

        [JsonProperty("milestone_dependencies", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MileStone>? Milestone_dependencies { get; set; } 

        [JsonProperty("dependencies", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MileStoneDependency>? Dependencies { get; set; } 

        [JsonProperty("tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FaultsMileStone>? Tickets { get; set; } 

        [JsonProperty("_complete", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _complete { get; set; } 

        [JsonProperty("_dateschanged", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dateschanged { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("start_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Start_days { get; set; } 

        [JsonProperty("target_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Target_days { get; set; } 

        [JsonProperty("_fromtemplate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _fromtemplate { get; set; } 

        [JsonProperty("milestone_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Milestone_value { get; set; } 

        [JsonProperty("processed_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Processed_date { get; set; } 

        [JsonProperty("invoicenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoicenumber { get; set; } 

        [JsonProperty("from_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? From_template_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MileStoneDependency
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("child", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child { get; set; } 

        [JsonProperty("parent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent { get; set; } 

        [JsonProperty("parent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parent_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MimeEntity
    {
        [JsonProperty("headers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Header>? Headers { get; set; } 

        [JsonProperty("contentDisposition", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ContentDisposition? ContentDisposition { get; set; } 

        [JsonProperty("contentType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ContentType? ContentType { get; set; } 

        [JsonProperty("contentBase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Uri? ContentBase { get; set; } 

        [JsonProperty("contentLocation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Uri? ContentLocation { get; set; } 

        [JsonProperty("contentId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ContentId { get; set; } 

        [JsonProperty("isAttachment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsAttachment { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MimeMessage
    {
        [JsonProperty("headers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Header>? Headers { get; set; } 

        [JsonProperty("importance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MessageImportance? Importance { get; set; } 

        [JsonProperty("priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MessagePriority? Priority { get; set; } 

        [JsonProperty("xPriority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public XMessagePriority? XPriority { get; set; } 

        [JsonProperty("sender", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailboxAddress? Sender { get; set; } 

        [JsonProperty("resentSender", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MailboxAddress? ResentSender { get; set; } 

        [JsonProperty("from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? From { get; set; } 

        [JsonProperty("resentFrom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? ResentFrom { get; set; } 

        [JsonProperty("replyTo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? ReplyTo { get; set; } 

        [JsonProperty("resentReplyTo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? ResentReplyTo { get; set; } 

        [JsonProperty("to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? To { get; set; } 

        [JsonProperty("resentTo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? ResentTo { get; set; } 

        [JsonProperty("cc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? Cc { get; set; } 

        [JsonProperty("resentCc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? ResentCc { get; set; } 

        [JsonProperty("bcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? Bcc { get; set; } 

        [JsonProperty("resentBcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InternetAddress>? ResentBcc { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("resentDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? ResentDate { get; set; } 

        [JsonProperty("references", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? References { get; set; } 

        [JsonProperty("inReplyTo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? InReplyTo { get; set; } 

        [JsonProperty("messageId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MessageId { get; set; } 

        [JsonProperty("resentMessageId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ResentMessageId { get; set; } 

        [JsonProperty("mimeVersion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MimeVersion { get; set; } 

        [JsonProperty("body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MimeEntity? Body { get; set; } 

        [JsonProperty("textBody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TextBody { get; set; } 

        [JsonProperty("htmlBody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? HtmlBody { get; set; } 

        [JsonProperty("bodyParts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MimeEntity>? BodyParts { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MimeEntity>? Attachments { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ModuleSetup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("module_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Module_name { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("core", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Core { get; set; } 

        [JsonProperty("licensed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Licensed { get; set; } 

        [JsonProperty("accesslevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Accesslevel { get; set; } 

        [JsonProperty("halointegratorenabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegratorenabled { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("actual_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Actual_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MoveMailRequest
    {
        [JsonProperty("mailbox_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_id { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class MultiselectFilter
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NCentralAlert
    {
        [JsonProperty("action", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Details { get; set; } 

        [JsonProperty("ncentralTicketId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? NcentralTicketId { get; set; } 

        [JsonProperty("psaTicketNumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PsaTicketNumber { get; set; } 

        [JsonProperty("customTags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public NCentralCustomTags? CustomTags { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NCentralCustomTags
    {
        [JsonProperty("requestType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? RequestType { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Priority { get; set; } 

        [JsonProperty("category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NCentralDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("toplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel { get; set; } 

        [JsonProperty("dontsyncaddr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsyncaddr { get; set; } 

        [JsonProperty("defassettypegroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defassettypegroup { get; set; } 

        [JsonProperty("defassettypegroup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defassettypegroup_name { get; set; } 

        [JsonProperty("newmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newmethod { get; set; } 

        [JsonProperty("alerttickettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Alerttickettype { get; set; } 

        [JsonProperty("tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_name { get; set; } 

        [JsonProperty("alertticketuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Alertticketuser { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("alertusername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alertusername { get; set; } 

        [JsonProperty("alertclientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alertclientid { get; set; } 

        [JsonProperty("syncentities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Syncentities { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("reqcredsremote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Reqcredsremote { get; set; } 

        [JsonProperty("deactivateclients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deactivateclients { get; set; } 

        [JsonProperty("deactivateassets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deactivateassets { get; set; } 

        [JsonProperty("asset_type_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_type_choice { get; set; } 

        [JsonProperty("default_assettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assettype { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_field { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("default_assettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assettype_name { get; set; } 

        [JsonProperty("client_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_links { get; set; } 

        [JsonProperty("site_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Site_links { get; set; } 

        [JsonProperty("asset_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Asset_fieldmappings { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("new_alert_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_alert_password { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("automaticclientsitelink", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Automaticclientsitelink { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("login_port", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Login_port { get; set; } 

        [JsonProperty("match_user_device", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Match_user_device { get; set; } 

        [JsonProperty("ignore_probes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignore_probes { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NHD_Claim
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NHD_DeviceInfo
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? User_id { get; set; } 

        [JsonProperty("device_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Device_name { get; set; } 

        [JsonProperty("manufacturer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Manufacturer { get; set; } 

        [JsonProperty("model", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Model { get; set; } 

        [JsonProperty("os", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Os { get; set; } 

        [JsonProperty("app_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? App_name { get; set; } 

        [JsonProperty("app_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? App_version { get; set; } 

        [JsonProperty("apns_device_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Apns_device_token { get; set; } 

        [JsonProperty("firebase_device_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Firebase_device_token { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NHD_Identity_Application
    {
        [JsonProperty("grant_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Grant_type { get; set; } 

        [JsonProperty("loginas_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Loginas_agent_id { get; set; } 

        [JsonProperty("loginas_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Loginas_agent_name { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("system_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? System_use { get; set; } 

        [JsonProperty("redirecturi", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirecturi { get; set; } 

        [JsonProperty("logoutredirecturi", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logoutredirecturi { get; set; } 

        [JsonProperty("cors_whitelist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cors_whitelist { get; set; } 

        [JsonProperty("redirecturi_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Redirecturi_list { get; set; } 

        [JsonProperty("postlogoutredirecturi_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Postlogoutredirecturi_list { get; set; } 

        [JsonProperty("cors_whitelist_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Cors_whitelist_list { get; set; } 

        [JsonProperty("scopes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<NHD_Identity_ApplicationScope>? Scopes { get; set; } 

        [JsonProperty("allowagents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowagents { get; set; } 

        [JsonProperty("allowusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowusers { get; set; } 

        [JsonProperty("organisation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Organisation_id { get; set; } 

        [JsonProperty("organisation_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Organisation_name { get; set; } 

        [JsonProperty("loginas_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Loginas_client_id { get; set; } 

        [JsonProperty("loginas_client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Loginas_client_name { get; set; } 

        [JsonProperty("loginas_supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Loginas_supplier_id { get; set; } 

        [JsonProperty("loginas_supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Loginas_supplier_name { get; set; } 

        [JsonProperty("loginentity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Loginentity { get; set; } 

        [JsonProperty("language_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Language_id { get; set; } 

        [JsonProperty("language_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Language_name { get; set; } 

        [JsonProperty("disable_windowsauth", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disable_windowsauth { get; set; } 

        [JsonProperty("disable_azure", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disable_azure { get; set; } 

        [JsonProperty("disable_adfs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disable_adfs { get; set; } 

        [JsonProperty("disable_okta", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disable_okta { get; set; } 

        [JsonProperty("disable_centrify", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disable_centrify { get; set; } 

        [JsonProperty("disable_google", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disable_google { get; set; } 

        [JsonProperty("button_config", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LoginScreenConfig>? Button_config { get; set; } 

        [JsonProperty("assertion_consumer_service_index", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assertion_consumer_service_index { get; set; } 

        [JsonProperty("disable_anon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disable_anon { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_issystem", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _issystem { get; set; } 

        [JsonProperty("authorizations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OpenIddictAuthorization>? Authorizations { get; set; } 

        [JsonProperty("clientId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ClientId { get; set; } 

        [JsonProperty("clientSecret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ClientSecret { get; set; } 

        [JsonProperty("concurrencyToken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ConcurrencyToken { get; set; } 

        [JsonProperty("consentType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ConsentType { get; set; } 

        [JsonProperty("displayName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? DisplayName { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("permissions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Permissions { get; set; } 

        [JsonProperty("postLogoutRedirectUris", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PostLogoutRedirectUris { get; set; } 

        [JsonProperty("properties", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Properties { get; set; } 

        [JsonProperty("redirectUris", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? RedirectUris { get; set; } 

        [JsonProperty("tokens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OpenIddictToken>? Tokens { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NHD_Identity_ApplicationScope
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("application_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Application_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NHD_Roles
    {
        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("chargerates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Restriction>? Chargerates { get; set; } 

        [JsonProperty("id_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id_int { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("teams", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameSection>? Teams { get; set; } 

        [JsonProperty("departments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameDepartment>? Departments { get; set; } 

        [JsonProperty("clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameAreaRestriction>? Clients { get; set; } 

        [JsonProperty("tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameRequestType>? Tickettypes { get; set; } 

        [JsonProperty("assetfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameField>? Assetfields { get; set; } 

        [JsonProperty("unamecustomfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameCustom>? Unamecustomfields { get; set; } 

        [JsonProperty("unameappointmenttypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameAppointment>? Unameappointmenttypes { get; set; } 

        [JsonProperty("notifications", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameNotification>? Notifications { get; set; } 

        [JsonProperty("claims", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<NHD_Claim>? Claims { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameButton>? Custombuttons { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("assettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameXtype>? Assettypes { get; set; } 

        [JsonProperty("Oo_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oo_name { get; set; } 

        [JsonProperty("uname_usercustomfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameCustom>? Uname_usercustomfields { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("ac_tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_tickettypes { get; set; } 

        [JsonProperty("ac_approvals", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_approvals { get; set; } 

        [JsonProperty("ac_rules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_rules { get; set; } 

        [JsonProperty("ac_cannedtext", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_cannedtext { get; set; } 

        [JsonProperty("ac_customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_customfields { get; set; } 

        [JsonProperty("ac_customtables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_customtables { get; set; } 

        [JsonProperty("ac_dashboards", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_dashboards { get; set; } 

        [JsonProperty("ac_workflows", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_workflows { get; set; } 

        [JsonProperty("ac_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_roles { get; set; } 

        [JsonProperty("ac_slas", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_slas { get; set; } 

        [JsonProperty("ac_templates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_templates { get; set; } 

        [JsonProperty("ac_outcomes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_outcomes { get; set; } 

        [JsonProperty("ac_workdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_workdays { get; set; } 

        [JsonProperty("ac_emailtemplates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_emailtemplates { get; set; } 

        [JsonProperty("ac_messagegroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_messagegroups { get; set; } 

        [JsonProperty("ac_reportgroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_reportgroups { get; set; } 

        [JsonProperty("ac_fieldgroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_fieldgroups { get; set; } 

        [JsonProperty("ac_languagepacks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_languagepacks { get; set; } 

        [JsonProperty("ac_itemgroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_itemgroups { get; set; } 

        [JsonProperty("ac_suppliers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_suppliers { get; set; } 

        [JsonProperty("ac_suppliercontracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_suppliercontracts { get; set; } 

        [JsonProperty("is_integration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_integration { get; set; } 

        [JsonProperty("ac_assettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_assettypes { get; set; } 

        [JsonProperty("ac_assetgroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_assetgroups { get; set; } 

        [JsonProperty("ac_servicecategories", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_servicecategories { get; set; } 

        [JsonProperty("ac_services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_services { get; set; } 

        [JsonProperty("ac_chatprofiles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_chatprofiles { get; set; } 

        [JsonProperty("ac_faqlists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_faqlists { get; set; } 

        [JsonProperty("ac_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_devices { get; set; } 

        [JsonProperty("sites", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameSite>? Sites { get; set; } 

        [JsonProperty("ac_databaselookups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_databaselookups { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("normalizedName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? NormalizedName { get; set; } 

        [JsonProperty("concurrencyStamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ConcurrencyStamp { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NHServerConfig
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("acceptattachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Acceptattachments { get; set; } 

        [JsonProperty("acceptautoreplycheckbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Acceptautoreplycheckbox { get; set; } 

        [JsonProperty("actionemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Actionemails { get; set; } 

        [JsonProperty("actionsendlimit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionsendlimit { get; set; } 

        [JsonProperty("approvalscan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Approvalscan { get; set; } 

        [JsonProperty("assetattachmentmaintenance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Assetattachmentmaintenance { get; set; } 

        [JsonProperty("autocreatedevice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autocreatedevice { get; set; } 

        [JsonProperty("autodevicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Autodevicesite { get; set; } 

        [JsonProperty("autodevicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Autodevicetype { get; set; } 

        [JsonProperty("autolinkdevices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autolinkdevices { get; set; } 

        [JsonProperty("automatchlocation2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Automatchlocation2 { get; set; } 

        [JsonProperty("autoondiagram", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autoondiagram { get; set; } 

        [JsonProperty("autorequests", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autorequests { get; set; } 

        [JsonProperty("calendarsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Calendarsync { get; set; } 

        [JsonProperty("clearlogboxes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Clearlogboxes { get; set; } 

        [JsonProperty("confforemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Confforemails { get; set; } 

        [JsonProperty("datefilter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datefilter { get; set; } 

        [JsonProperty("deleteerrors", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deleteerrors { get; set; } 

        [JsonProperty("emailcreatenewuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailcreatenewuser { get; set; } 

        [JsonProperty("emaillogfolder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emaillogfolder { get; set; } 

        [JsonProperty("emailnoack", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailnoack { get; set; } 

        [JsonProperty("emailrequesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailrequesttype { get; set; } 

        [JsonProperty("emailsiteint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailsiteint { get; set; } 

        [JsonProperty("emailtechieint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailtechieint { get; set; } 

        [JsonProperty("emailusefullname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailusefullname { get; set; } 

        [JsonProperty("emailuserdefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailuserdefault { get; set; } 

        [JsonProperty("emailuserint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailuserint { get; set; } 

        [JsonProperty("emailusesitedomain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailusesitedomain { get; set; } 

        [JsonProperty("errorreportemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Errorreportemail { get; set; } 

        [JsonProperty("errorreportemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Errorreportemailaddress { get; set; } 

        [JsonProperty("errorreportrequest", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Errorreportrequest { get; set; } 

        [JsonProperty("ewslastapptsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ewslastapptsync { get; set; } 

        [JsonProperty("forcehtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Forcehtml { get; set; } 

        [JsonProperty("highlevellogging", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Highlevellogging { get; set; } 

        [JsonProperty("ignorecc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignorecc { get; set; } 

        [JsonProperty("ignoreduplicateemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignoreduplicateemails { get; set; } 

        [JsonProperty("ignoreifsitenotmatched", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignoreifsitenotmatched { get; set; } 

        [JsonProperty("intervalseconds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Intervalseconds { get; set; } 

        [JsonProperty("maintenancerequests", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Maintenancerequests { get; set; } 

        [JsonProperty("mainttime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mainttime { get; set; } 

        [JsonProperty("nhdsuppliersync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Nhdsuppliersync { get; set; } 

        [JsonProperty("nooverduescan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Nooverduescan { get; set; } 

        [JsonProperty("pop3interface", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Pop3interface { get; set; } 

        [JsonProperty("popuptimeoutseconds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Popuptimeoutseconds { get; set; } 

        [JsonProperty("prepayautotopup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prepayautotopup { get; set; } 

        [JsonProperty("processxmlfiles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Processxmlfiles { get; set; } 

        [JsonProperty("recurringcalendarsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Recurringcalendarsync { get; set; } 

        [JsonProperty("refreshautoinv", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Refreshautoinv { get; set; } 

        [JsonProperty("requestscan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Requestscan { get; set; } 

        [JsonProperty("saverawemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Saverawemail { get; set; } 

        [JsonProperty("sendsmtp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendsmtp { get; set; } 

        [JsonProperty("sendtray", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendtray { get; set; } 

        [JsonProperty("sendwelcomeemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendwelcomeemail { get; set; } 

        [JsonProperty("servicestatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Servicestatus { get; set; } 

        [JsonProperty("statussendlimit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statussendlimit { get; set; } 

        [JsonProperty("storeemailsindb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Storeemailsindb { get; set; } 

        [JsonProperty("timeoutseconds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Timeoutseconds { get; set; } 

        [JsonProperty("emailsitename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailsitename { get; set; } 

        [JsonProperty("emailusername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailusername { get; set; } 

        [JsonProperty("autodevicesitename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Autodevicesitename { get; set; } 

        [JsonProperty("autodevicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Autodevicetypename { get; set; } 

        [JsonProperty("reporttimeout", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reporttimeout { get; set; } 

        [JsonProperty("deletecustomdata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deletecustomdata { get; set; } 

        [JsonProperty("bulkemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Bulkemail { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NPR_Result
    {
        [JsonProperty("windows_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Windows_user { get; set; } 

        [JsonProperty("email_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_address { get; set; } 

        [JsonProperty("activedirectory_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Activedirectory_dn { get; set; } 

        [JsonProperty("onpremise_activedirectory_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Onpremise_activedirectory_dn { get; set; } 

        [JsonProperty("enrolled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enrolled { get; set; } 

        [JsonProperty("questions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SecurityQuestion>? Questions { get; set; } 

        [JsonProperty("hide_answers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_answers { get; set; } 

        [JsonProperty("validated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Validated { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NinjaAlert
    {
        [JsonProperty("uid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Uid { get; set; } 

        [JsonProperty("deviceId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? DeviceId { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message { get; set; } 

        [JsonProperty("createTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? CreateTime { get; set; } 

        [JsonProperty("updateTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? UpdateTime { get; set; } 

        [JsonProperty("sourceType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SourceType { get; set; } 

        [JsonProperty("sourceConfigUid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SourceConfigUid { get; set; } 

        [JsonProperty("sourceName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SourceName { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NinjaWebhook
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("activityTime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? ActivityTime { get; set; } 

        [JsonProperty("deviceId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? DeviceId { get; set; } 

        [JsonProperty("seriesUid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SeriesUid { get; set; } 

        [JsonProperty("activityType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ActivityType { get; set; } 

        [JsonProperty("statusCode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? StatusCode { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("activityResult", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ActivityResult { get; set; } 

        [JsonProperty("sourceConfigUid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SourceConfigUid { get; set; } 

        [JsonProperty("sourceName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SourceName { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("severity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Severity { get; set; } 

        [JsonProperty("priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Priority { get; set; } 

        [JsonProperty("data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public NinjaWebhookData? Data { get; set; } 

        [JsonProperty("resourceObject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? ResourceObject { get; set; } 

        [JsonProperty("activityTypeEnum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public NinjaWebhookActivityType? ActivityTypeEnum { get; set; } 

        [JsonProperty("statusCodeEnum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public NinjaWebhookStatus? StatusCodeEnum { get; set; } 

        [JsonProperty("activityResultEnum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public NinjaWebhookActivityResult? ActivityResultEnum { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum NinjaWebhookActivityResult
    {

        _0 = 0,

        _1 = 1,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum NinjaWebhookActivityType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

        _5 = 5,

        _6 = 6,

        _7 = 7,

        _8 = 8,

        _9 = 9,

        _10 = 10,

        _11 = 11,

        _12 = 12,

        _13 = 13,

        _14 = 14,

        _15 = 15,

        _16 = 16,

        _17 = 17,

        _18 = 18,

        _19 = 19,

        _20 = 20,

        _21 = 21,

        _22 = 22,

        _23 = 23,

        _24 = 24,

        _25 = 25,

        _26 = 26,

        _27 = 27,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NinjaWebhookData
    {
        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public NinjaWebhookDataMessage? Message { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NinjaWebhookDataMessage
    {
        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("_params", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public NinjaWebhookDataMessageParams? _params { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NinjaWebhookDataMessageParams
    {
        [JsonProperty("threshold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Threshold { get; set; } 

        [JsonProperty("unit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Unit { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("top_processes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Top_processes { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum NinjaWebhookStatus
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NotificationConditions
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_id { get; set; } 

        [JsonProperty("notification_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Notification_guid { get; set; } 

        [JsonProperty("fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldname { get; set; } 

        [JsonProperty("fieldid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fieldid { get; set; } 

        [JsonProperty("change_context", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Change_context { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("value_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_int { get; set; } 

        [JsonProperty("valueint_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Valueint_guid { get; set; } 

        [JsonProperty("value_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_string { get; set; } 

        [JsonProperty("value_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_display { get; set; } 

        [JsonProperty("value_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_type { get; set; } 

        [JsonProperty("timezonestring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timezonestring { get; set; } 

        [JsonProperty("tablename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tablename { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("fieldtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldtype { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class NotificationContent
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message { get; set; } 

        [JsonProperty("body_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body_text { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OktaMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("siteid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Siteid { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("included_statuses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Included_statuses { get; set; } 

        [JsonProperty("included_statuses_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Included_statuses_list { get; set; } 

        [JsonProperty("included_statuses_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Included_statuses_display { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("roleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Roleid { get; set; } 

        [JsonProperty("applicationid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Applicationid { get; set; } 

        [JsonProperty("applicationid_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Applicationid_display { get; set; } 

        [JsonProperty("filterbyapp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Filterbyapp { get; set; } 

        [JsonProperty("userroleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userroleid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("new_users_only", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_users_only { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFilter>? Filters { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OnlineStatus
    {
        [JsonProperty("techID", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TechID { get; set; } 

        [JsonProperty("lastOnlineDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastOnlineDate { get; set; } 

        [JsonProperty("isOnline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsOnline { get; set; } 

        [JsonProperty("lastOnline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? LastOnline { get; set; } 

        [JsonProperty("agent_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_status { get; set; } 

        [JsonProperty("status_overidden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Status_overidden { get; set; } 

        [JsonProperty("fetch_all", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fetch_all { get; set; } 

        [JsonProperty("is_logout", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_logout { get; set; } 

        [JsonProperty("command", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Command { get; set; } 

        [JsonProperty("last_active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_active { get; set; } 

        [JsonProperty("is_idle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_idle { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OpenIddictApplication
    {
        [JsonProperty("authorizations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OpenIddictAuthorization>? Authorizations { get; set; } 

        [JsonProperty("clientId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ClientId { get; set; } 

        [JsonProperty("clientSecret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ClientSecret { get; set; } 

        [JsonProperty("concurrencyToken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ConcurrencyToken { get; set; } 

        [JsonProperty("consentType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ConsentType { get; set; } 

        [JsonProperty("displayName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? DisplayName { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("permissions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Permissions { get; set; } 

        [JsonProperty("postLogoutRedirectUris", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PostLogoutRedirectUris { get; set; } 

        [JsonProperty("properties", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Properties { get; set; } 

        [JsonProperty("redirectUris", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? RedirectUris { get; set; } 

        [JsonProperty("tokens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OpenIddictToken>? Tokens { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OpenIddictAuthorization
    {
        [JsonProperty("application", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public OpenIddictApplication? Application { get; set; } 

        [JsonProperty("concurrencyToken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ConcurrencyToken { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("properties", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Properties { get; set; } 

        [JsonProperty("scopes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Scopes { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("tokens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OpenIddictToken>? Tokens { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OpenIddictToken
    {
        [JsonProperty("application", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public OpenIddictApplication? Application { get; set; } 

        [JsonProperty("authorization", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public OpenIddictAuthorization? Authorization { get; set; } 

        [JsonProperty("concurrencyToken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ConcurrencyToken { get; set; } 

        [JsonProperty("creationDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreationDate { get; set; } 

        [JsonProperty("expirationDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? ExpirationDate { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("payload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Payload { get; set; } 

        [JsonProperty("properties", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Properties { get; set; } 

        [JsonProperty("referenceId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ReferenceId { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OrderHead
    {
        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("client_to_invoice_to_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_to_invoice_to_id { get; set; } 

        [JsonProperty("assigned_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assigned_agent { get; set; } 

        [JsonProperty("assigned_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assigned_agent_name { get; set; } 

        [JsonProperty("open_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_status { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("ship_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ship_date { get; set; } 

        [JsonProperty("total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total { get; set; } 

        [JsonProperty("cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Cost { get; set; } 

        [JsonProperty("profit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Profit { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("po_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Po_number { get; set; } 

        [JsonProperty("createdby_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Createdby_agent_id { get; set; } 

        [JsonProperty("deliverby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Deliverby { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("datereceived", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datereceived { get; set; } 

        [JsonProperty("numberbottles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Numberbottles { get; set; } 

        [JsonProperty("ship_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ship_status { get; set; } 

        [JsonProperty("soldby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Soldby { get; set; } 

        [JsonProperty("accountsref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsref { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("leadsource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Leadsource { get; set; } 

        [JsonProperty("canvasser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Canvasser { get; set; } 

        [JsonProperty("invoice_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Invoice_date { get; set; } 

        [JsonProperty("invoicenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoicenumber { get; set; } 

        [JsonProperty("includegroupeditemprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includegroupeditemprice { get; set; } 

        [JsonProperty("includegroupeditemqty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includegroupeditemqty { get; set; } 

        [JsonProperty("currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currency { get; set; } 

        [JsonProperty("currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Currency_code { get; set; } 

        [JsonProperty("currency_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currency_code_name { get; set; } 

        [JsonProperty("currency_conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Currency_conversion_rate { get; set; } 

        [JsonProperty("quotation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quotation_id { get; set; } 

        [JsonProperty("consignment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Consignment_id { get; set; } 

        [JsonProperty("do_not_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Do_not_invoice { get; set; } 

        [JsonProperty("closeandconsignwhenpoprocessed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Closeandconsignwhenpoprocessed { get; set; } 

        [JsonProperty("lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OrderLine>? Lines { get; set; } 

        [JsonProperty("add_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OrderLine>? Add_lines { get; set; } 

        [JsonProperty("_cancel_reserve", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _cancel_reserve { get; set; } 

        [JsonProperty("_validateonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _validateonly { get; set; } 

        [JsonProperty("_print_preview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_preview { get; set; } 

        [JsonProperty("_print_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_generate { get; set; } 

        [JsonProperty("printhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printhtml { get; set; } 

        [JsonProperty("pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_attachment_id { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("pdftemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdftemplate_name { get; set; } 

        [JsonProperty("purchaseorder_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchaseorder_count { get; set; } 

        [JsonProperty("invoice_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_count { get; set; } 

        [JsonProperty("percentage_invoiced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percentage_invoiced { get; set; } 

        [JsonProperty("outstanding_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Outstanding_total { get; set; } 

        [JsonProperty("_create_po", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _create_po { get; set; } 

        [JsonProperty("_create_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _create_invoice { get; set; } 

        [JsonProperty("_create_invoice_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _create_invoice_method { get; set; } 

        [JsonProperty("_create_invoice_percentage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? _create_invoice_percentage { get; set; } 

        [JsonProperty("_create_invoice_amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? _create_invoice_amount { get; set; } 

        [JsonProperty("_create_invoice_qty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? _create_invoice_qty { get; set; } 

        [JsonProperty("_create_invoice_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OrderLine>? _create_invoice_lines { get; set; } 

        [JsonProperty("_create_invoice_line_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _create_invoice_line_description { get; set; } 

        [JsonProperty("_create_invoice_invoice_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? _create_invoice_invoice_date { get; set; } 

        [JsonProperty("_return_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _return_invoice { get; set; } 

        [JsonProperty("createdbyagentname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Createdbyagentname { get; set; } 

        [JsonProperty("last_update_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_update_time { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_distributorMessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _distributorMessage { get; set; } 

        [JsonProperty("project_faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Project_faultid { get; set; } 

        [JsonProperty("order_project_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order_project_template_id { get; set; } 

        [JsonProperty("order_project_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Order_project_template_name { get; set; } 

        [JsonProperty("_iscopy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _iscopy { get; set; } 

        [JsonProperty("includegrouppriceandqty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includegrouppriceandqty { get; set; } 

        [JsonProperty("costperweight", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costperweight { get; set; } 

        [JsonProperty("showpercentageinvoiced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showpercentageinvoiced { get; set; } 

        [JsonProperty("linked_to_opportunity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Linked_to_opportunity { get; set; } 

        [JsonProperty("linked_to_ticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Linked_to_ticket { get; set; } 

        [JsonProperty("linked_to_project", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Linked_to_project { get; set; } 

        [JsonProperty("intacct_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class { get; set; } 

        [JsonProperty("intacct_class_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class_name { get; set; } 

        [JsonProperty("intacct_save_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_save_location { get; set; } 

        [JsonProperty("override_delivery_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Override_delivery_address { get; set; } 

        [JsonProperty("deladdress1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress1 { get; set; } 

        [JsonProperty("deladdress2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress2 { get; set; } 

        [JsonProperty("deladdress3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress3 { get; set; } 

        [JsonProperty("deladdress4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress4 { get; set; } 

        [JsonProperty("deladdress5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress5 { get; set; } 

        [JsonProperty("delivery_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Delivery_address { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("dattocommerce_clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dattocommerce_clientid { get; set; } 

        [JsonProperty("dattocommerce_contactname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dattocommerce_contactname { get; set; } 

        [JsonProperty("dattocommerce_contactemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dattocommerce_contactemail { get; set; } 

        [JsonProperty("deliveryamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Deliveryamount { get; set; } 

        [JsonProperty("deliverytax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Deliverytax { get; set; } 

        [JsonProperty("is_so_screen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_so_screen { get; set; } 

        [JsonProperty("_novalidate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _novalidate { get; set; } 

        [JsonProperty("avalara_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Avalara_details_id { get; set; } 

        [JsonProperty("avalara_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_details_name { get; set; } 

        [JsonProperty("originaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Originaddress { get; set; } 

        [JsonProperty("originaddress1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress1 { get; set; } 

        [JsonProperty("originaddress2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress2 { get; set; } 

        [JsonProperty("originaddress3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress3 { get; set; } 

        [JsonProperty("originaddress4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress4 { get; set; } 

        [JsonProperty("originaddress5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress5 { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("extratabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tabname>? Extratabs { get; set; } 

        [JsonProperty("_dotaxsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dotaxsync { get; set; } 

        [JsonProperty("tax_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_total { get; set; } 

        [JsonProperty("revenue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Revenue { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OrderLine
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("sort_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sort_seq { get; set; } 

        [JsonProperty("group_sort_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_sort_seq { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("productcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Productcode { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("assetgroup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetgroup_name { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("costprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costprice { get; set; } 

        [JsonProperty("profit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Profit { get; set; } 

        [JsonProperty("profit_percentage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Profit_percentage { get; set; } 

        [JsonProperty("quantity_shipped", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_shipped { get; set; } 

        [JsonProperty("quantity_reserved", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_reserved { get; set; } 

        [JsonProperty("invoiced_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Invoiced_quantity { get; set; } 

        [JsonProperty("quantity_on_open_po", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_on_open_po { get; set; } 

        [JsonProperty("total_costprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_costprice { get; set; } 

        [JsonProperty("total_profit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_profit { get; set; } 

        [JsonProperty("total_price_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_monthly { get; set; } 

        [JsonProperty("total_net_total_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total_monthly { get; set; } 

        [JsonProperty("total_costprice_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_costprice_monthly { get; set; } 

        [JsonProperty("total_profit_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_profit_monthly { get; set; } 

        [JsonProperty("total_tax_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_monthly { get; set; } 

        [JsonProperty("total_price_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_annual { get; set; } 

        [JsonProperty("total_net_total_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total_annual { get; set; } 

        [JsonProperty("total_costprice_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_costprice_annual { get; set; } 

        [JsonProperty("total_profit_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_profit_annual { get; set; } 

        [JsonProperty("total_tax_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_annual { get; set; } 

        [JsonProperty("total_price_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_yearone { get; set; } 

        [JsonProperty("total_net_total_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total_yearone { get; set; } 

        [JsonProperty("total_costprice_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_costprice_yearone { get; set; } 

        [JsonProperty("total_profit_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_profit_yearone { get; set; } 

        [JsonProperty("total_tax_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_yearone { get; set; } 

        [JsonProperty("unit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unit { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("stocklocation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stocklocation_id { get; set; } 

        [JsonProperty("stocklocation_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stocklocation_name { get; set; } 

        [JsonProperty("quantity_in_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_in_stock { get; set; } 

        [JsonProperty("total_quantity_in_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_quantity_in_stock { get; set; } 

        [JsonProperty("total_quantity_reserved", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_quantity_reserved { get; set; } 

        [JsonProperty("selected", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Selected { get; set; } 

        [JsonProperty("servicefee", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Servicefee { get; set; } 

        [JsonProperty("recovery", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Recovery { get; set; } 

        [JsonProperty("margin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Margin { get; set; } 

        [JsonProperty("poqty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Poqty { get; set; } 

        [JsonProperty("billingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingperiod { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("autorenew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autorenew { get; set; } 

        [JsonProperty("recurringinvoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurringinvoice_id { get; set; } 

        [JsonProperty("item_recurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_recurring { get; set; } 

        [JsonProperty("line_recurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Line_recurring { get; set; } 

        [JsonProperty("item_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_contract { get; set; } 

        [JsonProperty("item_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_template { get; set; } 

        [JsonProperty("item_budgettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_budgettype { get; set; } 

        [JsonProperty("item_doesnotneedconsigning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_doesnotneedconsigning { get; set; } 

        [JsonProperty("supplier_po", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_po { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("consignment_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Consignment_ids { get; set; } 

        [JsonProperty("quotation_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quotation_line_id { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("isgroupdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isgroupdesc { get; set; } 

        [JsonProperty("nominalcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominalcode { get; set; } 

        [JsonProperty("cost_centre", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cost_centre { get; set; } 

        [JsonProperty("project_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Project_id { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("contract_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contract_ref { get; set; } 

        [JsonProperty("do_not_invoice_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Do_not_invoice_line { get; set; } 

        [JsonProperty("item_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_description { get; set; } 

        [JsonProperty("item_purchase_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_purchase_description { get; set; } 

        [JsonProperty("item_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_note { get; set; } 

        [JsonProperty("item_internal_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_internal_reference { get; set; } 

        [JsonProperty("item_external_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_external_reference { get; set; } 

        [JsonProperty("item_tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_tax_name { get; set; } 

        [JsonProperty("item_min_purchase_qty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_min_purchase_qty { get; set; } 

        [JsonProperty("_create_po", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _create_po { get; set; } 

        [JsonProperty("_create_ticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _create_ticket { get; set; } 

        [JsonProperty("quantity_to_reserve", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_to_reserve { get; set; } 

        [JsonProperty("assets_to_reserve", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Assets_to_reserve { get; set; } 

        [JsonProperty("reserved_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Reserved_assets { get; set; } 

        [JsonProperty("consigned_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Consigned_assets { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_id { get; set; } 

        [JsonProperty("soitemurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Soitemurl { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("line_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Line_site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_id { get; set; } 

        [JsonProperty("sales_order_ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sales_order_ticket_id { get; set; } 

        [JsonProperty("sales_order_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Sales_order_date { get; set; } 

        [JsonProperty("sales_order_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sales_order_status { get; set; } 

        [JsonProperty("intacct_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class { get; set; } 

        [JsonProperty("intacct_class_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class_name { get; set; } 

        [JsonProperty("intacct_save_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_save_location { get; set; } 

        [JsonProperty("line_periods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Line_periods { get; set; } 

        [JsonProperty("hideitems", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hideitems { get; set; } 

        [JsonProperty("isleased", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isleased { get; set; } 

        [JsonProperty("addbudget", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Addbudget { get; set; } 

        [JsonProperty("add_child_templates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Add_child_templates { get; set; } 

        [JsonProperty("stockbin_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stockbin_id { get; set; } 

        [JsonProperty("isfreightline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isfreightline { get; set; } 

        [JsonProperty("asset_type_matching_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_type_matching_field_name { get; set; } 

        [JsonProperty("items_in_group_no_consign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Items_in_group_no_consign { get; set; } 

        [JsonProperty("serialise_only_one", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Serialise_only_one { get; set; } 

        [JsonProperty("invoice_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Invoice_ids { get; set; } 

        [JsonProperty("percentage_invoiced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percentage_invoiced { get; set; } 

        [JsonProperty("item_weight", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_weight { get; set; } 

        [JsonProperty("create_child_project", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_child_project { get; set; } 

        [JsonProperty("taxable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Taxable { get; set; } 

        [JsonProperty("project_child_faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Project_child_faultid { get; set; } 

        [JsonProperty("_create_invoice_percentage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? _create_invoice_percentage { get; set; } 

        [JsonProperty("is_bundled_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_bundled_line { get; set; } 

        [JsonProperty("dattocommercelineid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dattocommercelineid { get; set; } 

        [JsonProperty("line_ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Line_ticket_id { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("is_deferred_revenue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_deferred_revenue { get; set; } 

        [JsonProperty("chargerates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Lookup>? Chargerates { get; set; } 

        [JsonProperty("budgets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FaultBudget>? Budgets { get; set; } 

        [JsonProperty("hide_grouped_items_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_grouped_items_price { get; set; } 

        [JsonProperty("discount_perc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Discount_perc { get; set; } 

        [JsonProperty("purchase_currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchase_currency_code { get; set; } 

        [JsonProperty("item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_tax_code { get; set; } 

        [JsonProperty("cost_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Cost_converted { get; set; } 

        [JsonProperty("purchase_currency_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_currency_code_name { get; set; } 

        [JsonProperty("purchase_currency_symbol", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_currency_symbol { get; set; } 

        [JsonProperty("purchase_conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Purchase_conversion_rate { get; set; } 

        [JsonProperty("exclude_auto_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exclude_auto_increase { get; set; } 

        [JsonProperty("auto_increase_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_increase_period { get; set; } 

        [JsonProperty("percent_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percent_increase { get; set; } 

        [JsonProperty("use_rpi_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_rpi_increase { get; set; } 

        [JsonProperty("net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_total { get; set; } 

        [JsonProperty("total_tax_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_converted { get; set; } 

        [JsonProperty("tax_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_converted { get; set; } 

        [JsonProperty("mark_as_complete", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mark_as_complete { get; set; } 

        [JsonProperty("consignment_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Consignment_address { get; set; } 

        [JsonProperty("budget_add_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Budget_add_type { get; set; } 

        [JsonProperty("baseprice_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Baseprice_converted { get; set; } 

        [JsonProperty("baseprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Baseprice { get; set; } 

        [JsonProperty("total_price_monthly_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_monthly_converted { get; set; } 

        [JsonProperty("total_price_annual_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_annual_converted { get; set; } 

        [JsonProperty("total_price_yearone_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_yearone_converted { get; set; } 

        [JsonProperty("total_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax { get; set; } 

        [JsonProperty("total_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price { get; set; } 

        [JsonProperty("total_discount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_discount { get; set; } 

        [JsonProperty("conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Conversion_rate { get; set; } 

        [JsonProperty("discount_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Discount_converted { get; set; } 

        [JsonProperty("net_amount_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_amount_converted { get; set; } 

        [JsonProperty("total_price_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_converted { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_name { get; set; } 

        [JsonProperty("taxRuleResult", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TaxRuleResult>? TaxRuleResult { get; set; } 

        [JsonProperty("decimalplacesforinvoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Decimalplacesforinvoices { get; set; } 

        [JsonProperty("total_net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Organisation
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("reply_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reply_address { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Address { get; set; } 

        [JsonProperty("phone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone { get; set; } 

        [JsonProperty("fax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fax { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("website", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Website { get; set; } 

        [JsonProperty("logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logo { get; set; } 

        [JsonProperty("portal_logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_logo { get; set; } 

        [JsonProperty("portalbackgroundimageurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string? Portalbackgroundimageurl { get; set; } 

        [JsonProperty("deliverysite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Deliverysite { get; set; } 

        [JsonProperty("portalurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portalurl { get; set; } 

        [JsonProperty("portalcolour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portalcolour { get; set; } 

        [JsonProperty("portalfolderlocation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portalfolderlocation { get; set; } 

        [JsonProperty("departments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tree_List>? Departments { get; set; } 

        [JsonProperty("linked_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_client_id { get; set; } 

        [JsonProperty("allowall_tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_tickettypes { get; set; } 

        [JsonProperty("allowed_tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestType_List>? Allowed_tickettypes { get; set; } 

        [JsonProperty("faqlists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FAQListHead>? Faqlists { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("isorganisationdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isorganisationdetails { get; set; } 

        [JsonProperty("bank_details_line_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bank_details_line_1 { get; set; } 

        [JsonProperty("bank_details_line_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bank_details_line_2 { get; set; } 

        [JsonProperty("bank_details_line_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bank_details_line_3 { get; set; } 

        [JsonProperty("bank_details_line_4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bank_details_line_4 { get; set; } 

        [JsonProperty("bank_details_line_5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bank_details_line_5 { get; set; } 

        [JsonProperty("tax_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_number { get; set; } 

        [JsonProperty("new_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_icon { get; set; } 

        [JsonProperty("portal_title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_title { get; set; } 

        [JsonProperty("user_faqlists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FAQListHead>? User_faqlists { get; set; } 

        [JsonProperty("all_user_faqlists_allowed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? All_user_faqlists_allowed { get; set; } 

        [JsonProperty("portal_chat_profile_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_chat_profile_override { get; set; } 

        [JsonProperty("portal_chat_profile_override_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portal_chat_profile_override_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OrganisationField
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("org_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Org_id { get; set; } 

        [JsonProperty("org_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Org_name { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OrionAlert
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("application", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Application { get; set; } 

        [JsonProperty("alert_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alert_id { get; set; } 

        [JsonProperty("alert_active_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alert_active_id { get; set; } 

        [JsonProperty("alert_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alert_name { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Details { get; set; } 

        [JsonProperty("severity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Severity { get; set; } 

        [JsonProperty("asset_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_value { get; set; } 

        [JsonProperty("team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team { get; set; } 

        [JsonProperty("agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OutboundIntegration
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("authorizationtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Authorizationtype { get; set; } 

        [JsonProperty("granttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Granttype { get; set; } 

        [JsonProperty("authorizationurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Authorizationurl { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("tokenurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tokenurl { get; set; } 

        [JsonProperty("scope", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Scope { get; set; } 

        [JsonProperty("state", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? State { get; set; } 

        [JsonProperty("headername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Headername { get; set; } 

        [JsonProperty("headerprefix", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Headerprefix { get; set; } 

        [JsonProperty("algorithm", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Algorithm { get; set; } 

        [JsonProperty("bearername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bearername { get; set; } 

        [JsonProperty("bearerlocation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bearerlocation { get; set; } 

        [JsonProperty("resourcebaseurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resourcebaseurl { get; set; } 

        [JsonProperty("certificate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Certificate_id { get; set; } 

        [JsonProperty("certificate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Certificate_name { get; set; } 

        [JsonProperty("response_token_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Response_token_name { get; set; } 

        [JsonProperty("token_expiry_mins", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Token_expiry_mins { get; set; } 

        [JsonProperty("library_licence_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Library_licence_name { get; set; } 

        [JsonProperty("icon_base64", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon_base64 { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("major_version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Major_version_number { get; set; } 

        [JsonProperty("minor_version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Minor_version_number { get; set; } 

        [JsonProperty("patch_version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Patch_version_number { get; set; } 

        [JsonProperty("version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version_number { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Note { get; set; } 

        [JsonProperty("install_popup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Install_popup { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("methods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethod>? Methods { get; set; } 

        [JsonProperty("_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _code { get; set; } 

        [JsonProperty("_verifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _verifier { get; set; } 

        [JsonProperty("_callback_uri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _callback_uri { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OutboundIntegrationMethod
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_id { get; set; } 

        [JsonProperty("integration_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Integration_guid { get; set; } 

        [JsonProperty("integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_name { get; set; } 

        [JsonProperty("integration_baseurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_baseurl { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("full_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Full_name { get; set; } 

        [JsonProperty("resource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resource { get; set; } 

        [JsonProperty("path", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Path { get; set; } 

        [JsonProperty("method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Method { get; set; } 

        [JsonProperty("authorizationtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Authorizationtype { get; set; } 

        [JsonProperty("requesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requesttype { get; set; } 

        [JsonProperty("responsetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Responsetype { get; set; } 

        [JsonProperty("requestbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestbody { get; set; } 

        [JsonProperty("log_retention_policy_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Log_retention_policy_days { get; set; } 

        [JsonProperty("uri_params", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValue>? Uri_params { get; set; } 

        [JsonProperty("headers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValue>? Headers { get; set; } 

        [JsonProperty("body_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValue>? Body_mappings { get; set; } 

        [JsonProperty("output_variables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValue>? Output_variables { get; set; } 

        [JsonProperty("_test", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _test { get; set; } 

        [JsonProperty("_test_variables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationRunbookVariable>? _test_variables { get; set; } 

        [JsonProperty("_test_runbook_variables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationRunbookVariable>? _test_runbook_variables { get; set; } 

        [JsonProperty("_test_output_variables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationRunbookVariable>? _test_output_variables { get; set; } 

        [JsonProperty("_test_result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WebhookEvent? _test_result { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_isbatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isbatch { get; set; } 

        [JsonProperty("_is_system_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_system_method { get; set; } 

        [JsonProperty("_is_cf_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_cf_method { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OutboundIntegrationMethodValue
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("method_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Method_id { get; set; } 

        [JsonProperty("runbook_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Runbook_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("data_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Data_type { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("value_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValueMapping>? Value_mappings { get; set; } 

        [JsonProperty("extra_process", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Extra_process { get; set; } 

        [JsonProperty("step_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Step_id { get; set; } 

        [JsonProperty("step_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Step_seq { get; set; } 

        [JsonProperty("step_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Step_name { get; set; } 

        [JsonProperty("persist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Persist { get; set; } 

        [JsonProperty("mapping_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mapping_type { get; set; } 

        [JsonProperty("object_mapping", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Object_mapping { get; set; } 

        [JsonProperty("rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_id { get; set; } 

        [JsonProperty("rule_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Rule_guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class OutboundIntegrationMethodValueMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("methodvalue_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Methodvalue_id { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("input", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Input { get; set; } 

        [JsonProperty("output", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Output { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Outgoingemail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("datesent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datesent { get; set; } 

        [JsonProperty("memo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Memo { get; set; } 

        [JsonProperty("html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Html { get; set; } 

        [JsonProperty("delete", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete { get; set; } 

        [JsonProperty("from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? From { get; set; } 

        [JsonProperty("to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? To { get; set; } 

        [JsonProperty("cc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cc { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("likely_cause", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Likely_cause { get; set; } 

        [JsonProperty("changeseq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Changeseq { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("idone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Idone { get; set; } 

        [JsonProperty("idtwo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Idtwo { get; set; } 

        [JsonProperty("actiondate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Actiondate { get; set; } 

        [JsonProperty("error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Error { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PDFTemplatePage
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("mainhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mainhtml { get; set; } 

        [JsonProperty("maindesign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public HtmlDesign? Maindesign { get; set; } 

        [JsonProperty("subhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subhtml { get; set; } 

        [JsonProperty("subhtml2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subhtml2 { get; set; } 

        [JsonProperty("subhtml3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subhtml3 { get; set; } 

        [JsonProperty("istitlepage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Istitlepage { get; set; } 

        [JsonProperty("backgroundimageurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Backgroundimageurl { get; set; } 

        [JsonProperty("content", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Content { get; set; } 

        [JsonProperty("toggle_editor", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Toggle_editor { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PRTGDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("defsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defsite { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("defassettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defassettype { get; set; } 

        [JsonProperty("assettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_name { get; set; } 

        [JsonProperty("assetmatchingfield_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetmatchingfield_name { get; set; } 

        [JsonProperty("assetmatchingfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetmatchingfield { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("halointegratorenabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegratorenabled { get; set; } 

        [JsonProperty("halointegratorlasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegratorlasterror { get; set; } 

        [JsonProperty("halointegratorlastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegratorlastsync { get; set; } 

        [JsonProperty("asset_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Asset_fieldmappings { get; set; } 

        [JsonProperty("enable_webhooks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_webhooks { get; set; } 

        [JsonProperty("new_webhook_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_webhook_secret { get; set; } 

        [JsonProperty("webhook_ticket_type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Webhook_ticket_type_id { get; set; } 

        [JsonProperty("webhook_ticket_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Webhook_ticket_user_id { get; set; } 

        [JsonProperty("webhook_ticket_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_ticket_user_name { get; set; } 

        [JsonProperty("webhook_ticket_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_ticket_summary { get; set; } 

        [JsonProperty("webhook_ticket_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_ticket_details { get; set; } 

        [JsonProperty("webhook_autoclosure_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_autoclosure_status { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PagerDutyMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("serviceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Serviceid { get; set; } 

        [JsonProperty("service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_name { get; set; } 

        [JsonProperty("default_tickettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_tickettype { get; set; } 

        [JsonProperty("tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_name { get; set; } 

        [JsonProperty("default_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_agent { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("dontsyncusertickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsyncusertickets { get; set; } 

        [JsonProperty("new_webhook_signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_webhook_signature { get; set; } 

        [JsonProperty("default_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_user { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("default_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_description { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Parameter
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("encoding", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Encoding? Encoding { get; set; } 

        [JsonProperty("encodingMethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ParameterEncodingMethod? EncodingMethod { get; set; } 

        [JsonProperty("alwaysQuote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? AlwaysQuote { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum ParameterEncodingMethod
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PartsLookup
    {
        [JsonProperty("lookup_value_obj", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Lookup_value_obj { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Use { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("table_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_id { get; set; } 

        [JsonProperty("table_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Table_name { get; set; } 

        [JsonProperty("sql_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_user { get; set; } 

        [JsonProperty("sql_new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_new_password { get; set; } 

        [JsonProperty("sql_server", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_server { get; set; } 

        [JsonProperty("sql_database", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_database { get; set; } 

        [JsonProperty("sql_script", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_script { get; set; } 

        [JsonProperty("key_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key_field { get; set; } 

        [JsonProperty("lookup_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_field { get; set; } 

        [JsonProperty("itemdesc1_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itemdesc1_field { get; set; } 

        [JsonProperty("itemdesc2_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itemdesc2_field { get; set; } 

        [JsonProperty("itemdesc3_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itemdesc3_field { get; set; } 

        [JsonProperty("itemvalue_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itemvalue_field { get; set; } 

        [JsonProperty("matchedhint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matchedhint { get; set; } 

        [JsonProperty("notmatchedhint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notmatchedhint { get; set; } 

        [JsonProperty("lookuponrefresh", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Lookuponrefresh { get; set; } 

        [JsonProperty("messagestring_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Messagestring_user { get; set; } 

        [JsonProperty("messagestring_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Messagestring_agent { get; set; } 

        [JsonProperty("showmessagetouseroragent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Showmessagetouseroragent { get; set; } 

        [JsonProperty("messagerequiresconfirmationuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Messagerequiresconfirmationuser { get; set; } 

        [JsonProperty("messagerequiresconfirmationagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Messagerequiresconfirmationagent { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PartsLookupField>? Fields { get; set; } 

        [JsonProperty("field_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PartsLookupMapping>? Field_mappings { get; set; } 

        [JsonProperty("agent_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TechPartsLookup>? Agent_mappings { get; set; } 

        [JsonProperty("run", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Run { get; set; } 

        [JsonProperty("lookup_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_value { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public PartsLookupResult? Lookup { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("lookupconnectiontype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookupconnectiontype { get; set; } 

        [JsonProperty("lookup_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup_type { get; set; } 

        [JsonProperty("lookup_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_type_name { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("certificate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Certificate_id { get; set; } 

        [JsonProperty("certificate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Certificate_name { get; set; } 

        [JsonProperty("allowmultipleresults", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowmultipleresults { get; set; } 

        [JsonProperty("lookup_field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup_field_id { get; set; } 

        [JsonProperty("lookup_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_field_name { get; set; } 

        [JsonProperty("outcome_mapped_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome_mapped_field { get; set; } 

        [JsonProperty("outcome_mapped_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Outcome_mapped_field_name { get; set; } 

        [JsonProperty("invert_outcome_mapped_result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Invert_outcome_mapped_result { get; set; } 

        [JsonProperty("trigger_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Trigger_type { get; set; } 

        [JsonProperty("rules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Autoassign>? Rules { get; set; } 

        [JsonProperty("integration_method_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_method_id { get; set; } 

        [JsonProperty("integration_method_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_method_name { get; set; } 

        [JsonProperty("integration_method_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_method_value { get; set; } 

        [JsonProperty("integration_method_value_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_method_value_name { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PartsLookupConfirmation
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("database_lookup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Database_lookup_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("form_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Form_id { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value { get; set; } 

        [JsonProperty("lookup_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_values { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PartsLookupField
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("lookup_profile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup_profile_id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("required", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Required { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PartsLookupMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("lookup_profile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup_profile_id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("lookup_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_field { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PartsLookupResult
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("lookup_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_value { get; set; } 

        [JsonProperty("success", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Success { get; set; } 

        [JsonProperty("error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Error { get; set; } 

        [JsonProperty("data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, object?>? Data { get; set; } 

        [JsonProperty("field_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Field_values { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("lookup_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_values { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message { get; set; } 

        [JsonProperty("popup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Popup { get; set; } 

        [JsonProperty("confirm_popup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Confirm_popup { get; set; } 

        [JsonProperty("data_multiple", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IDictionary<string, object>>? Data_multiple { get; set; } 

        [JsonProperty("message_multiple", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message_multiple { get; set; } 

        [JsonProperty("customfields_multiple", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ICollection<CustomField>>? Customfields_multiple { get; set; } 

        [JsonProperty("mapped_outcome_field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mapped_outcome_field_id { get; set; } 

        [JsonProperty("mapped_outcome_inverted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mapped_outcome_inverted { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum PasswordObjectType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PdfTemplate
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("orientation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Orientation { get; set; } 

        [JsonProperty("margin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Margin { get; set; } 

        [JsonProperty("default_mainhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_mainhtml { get; set; } 

        [JsonProperty("default_subhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_subhtml { get; set; } 

        [JsonProperty("default_subhtml2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_subhtml2 { get; set; } 

        [JsonProperty("default_subhtml3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_subhtml3 { get; set; } 

        [JsonProperty("includeheader", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includeheader { get; set; } 

        [JsonProperty("headerl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Headerl { get; set; } 

        [JsonProperty("headerc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Headerc { get; set; } 

        [JsonProperty("headerr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Headerr { get; set; } 

        [JsonProperty("headerishtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Headerishtml { get; set; } 

        [JsonProperty("headerheight", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Headerheight { get; set; } 

        [JsonProperty("headerhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Headerhtml { get; set; } 

        [JsonProperty("includefooter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includefooter { get; set; } 

        [JsonProperty("footerl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Footerl { get; set; } 

        [JsonProperty("footerc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Footerc { get; set; } 

        [JsonProperty("footerr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Footerr { get; set; } 

        [JsonProperty("footerishtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Footerishtml { get; set; } 

        [JsonProperty("footerheight", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Footerheight { get; set; } 

        [JsonProperty("footerhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Footerhtml { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("colour_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Colour_type { get; set; } 

        [JsonProperty("backgroundimageurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string? Backgroundimageurl { get; set; } 

        [JsonProperty("width", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Width { get; set; } 

        [JsonProperty("config_source_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Config_source_type { get; set; } 

        [JsonProperty("config_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(1000)]
        public string? Config_url { get; set; } 

        [JsonProperty("reportingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reportingperiod { get; set; } 

        [JsonProperty("system_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(50)]
        public string? System_use { get; set; } 

        [JsonProperty("detailcolumns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PdfTemplateDetail>? Detailcolumns { get; set; } 

        [JsonProperty("pages", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PDFTemplatePage>? Pages { get; set; } 

        [JsonProperty("is_preview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_preview { get; set; } 

        [JsonProperty("is_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_generate { get; set; } 

        [JsonProperty("printhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printhtml { get; set; } 

        [JsonProperty("pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_attachment_id { get; set; } 

        [JsonProperty("pdf_attachment_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdf_attachment_link { get; set; } 

        [JsonProperty("quotation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public QuotationHeader? Quotation { get; set; } 

        [JsonProperty("salesorder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public OrderHead? Salesorder { get; set; } 

        [JsonProperty("purchaseorder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SupplierOrderHeader? Purchaseorder { get; set; } 

        [JsonProperty("invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public InvoiceHeader? Invoice { get; set; } 

        [JsonProperty("contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ContractHeader? Contract { get; set; } 

        [JsonProperty("report", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AnalyzerProfile? Report { get; set; } 

        [JsonProperty("consignment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ConsignmentHeader? Consignment { get; set; } 

        [JsonProperty("reports", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PdfTemplateReport>? Reports { get; set; } 

        [JsonProperty("composite_report_apid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Composite_report_apid { get; set; } 

        [JsonProperty("canbeaccessedbyallusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canbeaccessedbyallusers { get; set; } 

        [JsonProperty("permissions_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserAnalyzer>? Permissions_user { get; set; } 

        [JsonProperty("schedule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StdRequest_List>? Schedule { get; set; } 

        [JsonProperty("clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clientid { get; set; } 

        [JsonProperty("licencename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Licencename { get; set; } 

        [JsonProperty("library_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Library_id { get; set; } 

        [JsonProperty("image_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Image_attachment_id { get; set; } 

        [JsonProperty("pagewidthinches", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Pagewidthinches { get; set; } 

        [JsonProperty("pageheightinches", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Pageheightinches { get; set; } 

        [JsonProperty("icon_base64", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon_base64 { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("kbentry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KBEntry? Kbentry { get; set; } 

        [JsonProperty("showinlineimage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showinlineimage { get; set; } 

        [JsonProperty("pdf_media_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_media_type { get; set; } 

        [JsonProperty("asset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Device? Asset { get; set; } 

        [JsonProperty("prefix_pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prefix_pdf_attachment_id { get; set; } 

        [JsonProperty("prefixpdfappend", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prefixpdfappend { get; set; } 

        [JsonProperty("iscustomised", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iscustomised { get; set; } 

        [JsonProperty("show_bundled_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Show_bundled_lines { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_xmlwarning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _xmlwarning { get; set; } 

        [JsonProperty("override_attachment_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_attachment_name { get; set; } 

        [JsonProperty("portal_display_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Portal_display_type { get; set; } 

        [JsonProperty("bulkprint_asset_id_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Bulkprint_asset_id_list { get; set; } 

        [JsonProperty("invoicexmltemplate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoicexmltemplate { get; set; } 

        [JsonProperty("pdftinvoicexmltemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdftinvoicexmltemplate_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PdfTemplateDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("sytemuse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sytemuse { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Html { get; set; } 

        [JsonProperty("textalign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Textalign { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PdfTemplateReport
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("report_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Report_id { get; set; } 

        [JsonProperty("report_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Report_name { get; set; } 

        [JsonProperty("report_data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AnalyzerProfile? Report_data { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Permalinks
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("entity_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_name { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id { get; set; } 

        [JsonProperty("published_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Published_guid { get; set; } 

        [JsonProperty("access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Access_token { get; set; } 

        [JsonProperty("publishedlink", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Publishedlink { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Policy
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; } 

        [JsonProperty("slaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Slaid { get; set; } 

        [JsonProperty("sla_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Sla_guid { get; set; } 

        [JsonProperty("priorityid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priorityid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("fixtime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Fixtime { get; set; } 

        [JsonProperty("fixunits", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fixunits { get; set; } 

        [JsonProperty("enterslaexcuse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enterslaexcuse { get; set; } 

        [JsonProperty("responsetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Responsetime { get; set; } 

        [JsonProperty("responseunits", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Responseunits { get; set; } 

        [JsonProperty("ishidden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ishidden { get; set; } 

        [JsonProperty("fixendofday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fixendofday { get; set; } 

        [JsonProperty("responseendofday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Responseendofday { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("catprompt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Catprompt { get; set; } 

        [JsonProperty("workdaysoverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workdaysoverride { get; set; } 

        [JsonProperty("responsestartofday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Responsestartofday { get; set; } 

        [JsonProperty("responsestartofdaytime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Responsestartofdaytime { get; set; } 

        [JsonProperty("startofday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Startofday { get; set; } 

        [JsonProperty("startofdaytime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Startofdaytime { get; set; } 

        [JsonProperty("workdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Workdays? Workdays { get; set; } 

        [JsonProperty("setfixtostartdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Setfixtostartdate { get; set; } 

        [JsonProperty("setfixtotargetdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Setfixtotargetdate { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("enterslaresponseexcuse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enterslaresponseexcuse { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Pop3Message
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("haloMailboxId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? HaloMailboxId { get; set; } 

        [JsonProperty("incomingEmailId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? IncomingEmailId { get; set; } 

        [JsonProperty("mimeMessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public MimeMessage? MimeMessage { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PowerShellScript
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Location { get; set; } 

        [JsonProperty("resultstring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resultstring { get; set; } 

        [JsonProperty("resultpartialmatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Resultpartialmatch { get; set; } 

        [JsonProperty("resultstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resultstatus { get; set; } 

        [JsonProperty("resultfailedstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resultfailedstatus { get; set; } 

        [JsonProperty("customtableid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customtableid { get; set; } 

        [JsonProperty("customtable_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customtable_name { get; set; } 

        [JsonProperty("fieldmappings_powershell", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<PowerShellScriptCriteria>? Fieldmappings_powershell { get; set; } 

        [JsonProperty("method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Method { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("halointegrator_allowedclientidslist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair3>? Halointegrator_allowedclientidslist { get; set; } 

        [JsonProperty("halointegrator_allowedclientids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_allowedclientids { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("usepowershellseven", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Usepowershellseven { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PowerShellScriptCriteria
    {
        [JsonProperty("pssid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pssid { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("fiid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fiid { get; set; } 

        [JsonProperty("finame", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Finame { get; set; } 

        [JsonProperty("parametername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parametername { get; set; } 

        [JsonProperty("fiusage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fiusage { get; set; } 

        [JsonProperty("filabel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filabel { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PowerShellScriptProcessing
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("pssid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pssid { get; set; } 

        [JsonProperty("faultid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Faultid { get; set; } 

        [JsonProperty("processed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Processed { get; set; } 

        [JsonProperty("failactionadded", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Failactionadded { get; set; } 

        [JsonProperty("execution_parameters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, object?>? Execution_parameters { get; set; } 

        [JsonProperty("success", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Success { get; set; } 

        [JsonProperty("result_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Result_message { get; set; } 

        [JsonProperty("run_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Run_date { get; set; } 

        [JsonProperty("script_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Script_name { get; set; } 

        [JsonProperty("_requeue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _requeue { get; set; } 

        [JsonProperty("requeued", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Requeued { get; set; } 

        [JsonProperty("rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PrePayThreshold
    {
        [JsonProperty("asAmount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? AsAmount { get; set; } 

        [JsonProperty("newHours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? NewHours { get; set; } 

        [JsonProperty("newAmount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? NewAmount { get; set; } 

        [JsonProperty("currentUsed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? CurrentUsed { get; set; } 

        [JsonProperty("total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PrepayHistory
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("invoicedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Invoicedate { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_id { get; set; } 

        [JsonProperty("amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount { get; set; } 

        [JsonProperty("expirydate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Expirydate { get; set; } 

        [JsonProperty("expirychecked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Expirychecked { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("invoice_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_number { get; set; } 

        [JsonProperty("client_to_invoice_to_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_to_invoice_to_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PrepayPeriod
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("start_date_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date_display { get; set; } 

        [JsonProperty("end_date_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date_display { get; set; } 

        [JsonProperty("current", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Current { get; set; } 

        [JsonProperty("hours_added", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours_added { get; set; } 

        [JsonProperty("hours_expired", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours_expired { get; set; } 

        [JsonProperty("hours_remaining", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours_remaining { get; set; } 

        [JsonProperty("hours_used_this_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours_used_this_period { get; set; } 

        [JsonProperty("amount_added", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount_added { get; set; } 

        [JsonProperty("amount_expired", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount_expired { get; set; } 

        [JsonProperty("amount_remaining", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount_remaining { get; set; } 

        [JsonProperty("amount_used_this_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Amount_used_this_period { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PresignedURLRequest
    {
        [JsonProperty("filename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filename { get; set; } 

        [JsonProperty("filesize", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Filesize { get; set; } 

        [JsonProperty("_tempid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? _tempid { get; set; } 

        [JsonProperty("originalfilename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originalfilename { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("unique_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unique_id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("atfilename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Atfilename { get; set; } 

        [JsonProperty("atdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Atdesc { get; set; } 

        [JsonProperty("atparentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Atparentid { get; set; } 

        [JsonProperty("atlinkedversionid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Atlinkedversionid { get; set; } 

        [JsonProperty("atnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Atnote { get; set; } 

        [JsonProperty("allow_anon_upload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_anon_upload { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("tickettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ProcessStreetAudit
    {
        [JsonProperty("createdDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreatedDate { get; set; } 

        [JsonProperty("createdBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ProcessStreetUser? CreatedBy { get; set; } 

        [JsonProperty("updatedDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdatedDate { get; set; } 

        [JsonProperty("updatedBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ProcessStreetUser? UpdatedBy { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ProcessStreetData
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("audit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ProcessStreetAudit? Audit { get; set; } 

        [JsonProperty("template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ProcessStreetGenericObject? Template { get; set; } 

        [JsonProperty("formFields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? FormFields { get; set; } 

        [JsonProperty("tasks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ProcessStreetTask>? Tasks { get; set; } 

        [JsonProperty("updatedDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdatedDate { get; set; } 

        [JsonProperty("updatedBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ProcessStreetUser? UpdatedBy { get; set; } 

        [JsonProperty("taskTemplateGroupId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TaskTemplateGroupId { get; set; } 

        [JsonProperty("taskType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TaskType { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("stopped", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Stopped { get; set; } 

        [JsonProperty("hidden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hidden { get; set; } 

        [JsonProperty("checklist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ProcessStreetGenericObject? Checklist { get; set; } 

        [JsonProperty("completedBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ProcessStreetUser? CompletedBy { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ProcessStreetGenericObject
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ProcessStreetTask
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("updatedDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdatedDate { get; set; } 

        [JsonProperty("updatedBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ProcessStreetUser? UpdatedBy { get; set; } 

        [JsonProperty("taskTemplateGroupId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TaskTemplateGroupId { get; set; } 

        [JsonProperty("taskType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TaskType { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("stopped", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Stopped { get; set; } 

        [JsonProperty("hidden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hidden { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ProcessStreetUser
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ProcessStreetWebhook
    {
        [JsonProperty("createdDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? CreatedDate { get; set; } 

        [JsonProperty("data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ProcessStreetData? Data { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class PublishProfiles
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("profile_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Profile_username { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("auth_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auth_method { get; set; } 

        [JsonProperty("basic_auth_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Basic_auth_password { get; set; } 

        [JsonProperty("basic_auth_salt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Basic_auth_salt { get; set; } 

        [JsonProperty("basic_auth_iterations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Basic_auth_iterations { get; set; } 

        [JsonProperty("_profile_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _profile_access_token { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class QBOWebhookEventEntity
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("operation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Operation { get; set; } 

        [JsonProperty("lastUpdated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastUpdated { get; set; } 

        [JsonProperty("realmId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? RealmId { get; set; } 

        [JsonProperty("resourceObject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? ResourceObject { get; set; } 

        [JsonProperty("eventTypeNum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public RelayEventType? EventTypeNum { get; set; } 

        [JsonProperty("eventCategoryNum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public RelayEventCategory? EventCategoryNum { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Qualification
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("weight", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Weight { get; set; } 

        [JsonProperty("mustmatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mustmatch { get; set; } 

        [JsonProperty("criteria", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<QualificationCategory>? Criteria { get; set; } 

        [JsonProperty("agents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameQualification>? Agents { get; set; } 

        [JsonProperty("agent_matched", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Agent_matched { get; set; } 

        [JsonProperty("_domatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _domatch { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class QualificationCategory
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("qlid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qlid { get; set; } 

        [JsonProperty("qualification_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Qualification_guid { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutoassignCriteria>? Fields { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class QualysHostAssetSoftwareHostAssetSoftware
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class QuickBooksDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("country", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Country { get; set; } 

        [JsonProperty("company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Company_id { get; set; } 

        [JsonProperty("company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Company_name { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("redirect_uri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirect_uri { get; set; } 

        [JsonProperty("authorization_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Authorization_code { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("automatic_sales_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Automatic_sales_tax { get; set; } 

        [JsonProperty("online_payments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Online_payments { get; set; } 

        [JsonProperty("api_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Api_url { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("default_tax_code_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_tax_code_id { get; set; } 

        [JsonProperty("default_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_tax_code_name { get; set; } 

        [JsonProperty("default_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Default_tax_code { get; set; } 

        [JsonProperty("zero_tax_rate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zero_tax_rate_id { get; set; } 

        [JsonProperty("zero_tax_rate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Zero_tax_rate_name { get; set; } 

        [JsonProperty("zero_tax_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Zero_tax_rate { get; set; } 

        [JsonProperty("client_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_top_level { get; set; } 

        [JsonProperty("client_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_top_level_name { get; set; } 

        [JsonProperty("client_name_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_name_field { get; set; } 

        [JsonProperty("inventory_item_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inventory_item_group { get; set; } 

        [JsonProperty("inventory_item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Inventory_item_group_name { get; set; } 

        [JsonProperty("non_inventory_item_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Non_inventory_item_group { get; set; } 

        [JsonProperty("non_inventory_item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Non_inventory_item_group_name { get; set; } 

        [JsonProperty("service_item_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_item_group { get; set; } 

        [JsonProperty("service_item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_item_group_name { get; set; } 

        [JsonProperty("enable_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_sync { get; set; } 

        [JsonProperty("sync_entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sync_entities { get; set; } 

        [JsonProperty("sync_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sync_entities_list { get; set; } 

        [JsonProperty("show_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_message { get; set; } 

        [JsonProperty("deactivate_customers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deactivate_customers { get; set; } 

        [JsonProperty("default_invoice_item", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_invoice_item { get; set; } 

        [JsonProperty("default_order_item", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_order_item { get; set; } 

        [JsonProperty("default_invoice_item_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_invoice_item_name { get; set; } 

        [JsonProperty("default_order_item_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_order_item_name { get; set; } 

        [JsonProperty("invoice_email_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_email_status { get; set; } 

        [JsonProperty("supplier_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_top_level { get; set; } 

        [JsonProperty("supplier_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_top_level_name { get; set; } 

        [JsonProperty("supplier_name_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_name_field { get; set; } 

        [JsonProperty("invoice_custom_po", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Invoice_custom_po { get; set; } 

        [JsonProperty("invoice_custom_po_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_custom_po_id { get; set; } 

        [JsonProperty("invoice_custom_po_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_custom_po_name { get; set; } 

        [JsonProperty("default_order_account_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_order_account_id { get; set; } 

        [JsonProperty("default_order_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_order_account_name { get; set; } 

        [JsonProperty("default_order_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Default_order_account { get; set; } 

        [JsonProperty("order_email_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order_email_status { get; set; } 

        [JsonProperty("multi_currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Multi_currency { get; set; } 

        [JsonProperty("default_sales_account_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_sales_account_id { get; set; } 

        [JsonProperty("default_sales_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_sales_account_name { get; set; } 

        [JsonProperty("default_sales_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Default_sales_account { get; set; } 

        [JsonProperty("default_expense_account_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_expense_account_id { get; set; } 

        [JsonProperty("default_expense_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_expense_account_name { get; set; } 

        [JsonProperty("default_expense_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Default_expense_account { get; set; } 

        [JsonProperty("default_asset_account_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_asset_account_id { get; set; } 

        [JsonProperty("default_asset_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_asset_account_name { get; set; } 

        [JsonProperty("default_asset_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Default_asset_account { get; set; } 

        [JsonProperty("receive_client_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_client_created { get; set; } 

        [JsonProperty("receive_client_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_client_updated { get; set; } 

        [JsonProperty("receive_payment_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_payment_created { get; set; } 

        [JsonProperty("receive_payment_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_payment_updated { get; set; } 

        [JsonProperty("sync_halo_invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_halo_invoice_id { get; set; } 

        [JsonProperty("sync_invoice_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_invoice_class { get; set; } 

        [JsonProperty("sync_invoice_bill_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_invoice_bill_address { get; set; } 

        [JsonProperty("sync_invoice_ship_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_invoice_ship_address { get; set; } 

        [JsonProperty("use_qbo_invoice_terms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_qbo_invoice_terms { get; set; } 

        [JsonProperty("round_payments_to_2dp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Round_payments_to_2dp { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("default_deferred_code_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_deferred_code_id { get; set; } 

        [JsonProperty("default_deferred_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_deferred_code_name { get; set; } 

        [JsonProperty("dont_post_item_quantities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_post_item_quantities { get; set; } 

        [JsonProperty("dont_sync_cost_tracking_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_sync_cost_tracking_lines { get; set; } 

        [JsonProperty("remove_unapplied_payments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Remove_unapplied_payments { get; set; } 

        [JsonProperty("default_deferred_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Default_deferred_account { get; set; } 

        [JsonProperty("qbo_sitemappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Qbo_sitemappings { get; set; } 

        [JsonProperty("mark_as_void", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mark_as_void { get; set; } 

        [JsonProperty("minor_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Minor_version { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class QuotationApproval
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token { get; set; } 

        [JsonProperty("result", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Result { get; set; } 

        [JsonProperty("approvalname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalname { get; set; } 

        [JsonProperty("approvalemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalemailaddress { get; set; } 

        [JsonProperty("approvalnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalnote { get; set; } 

        [JsonProperty("ponumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ponumber { get; set; } 

        [JsonProperty("signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Signature { get; set; } 

        [JsonProperty("optional_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<QuotationDetail>? Optional_lines { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class QuotationDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("sort_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sort_seq { get; set; } 

        [JsonProperty("group_sort_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_sort_seq { get; set; } 

        [JsonProperty("productcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Productcode { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("costprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costprice { get; set; } 

        [JsonProperty("total_price_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_monthly { get; set; } 

        [JsonProperty("total_price_monthly_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_monthly_converted { get; set; } 

        [JsonProperty("total_net_total_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total_monthly { get; set; } 

        [JsonProperty("total_costprice_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_costprice_monthly { get; set; } 

        [JsonProperty("total_profit_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_profit_monthly { get; set; } 

        [JsonProperty("total_tax_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_monthly { get; set; } 

        [JsonProperty("total_discount_monthly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_discount_monthly { get; set; } 

        [JsonProperty("total_price_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_annual { get; set; } 

        [JsonProperty("total_price_annual_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_annual_converted { get; set; } 

        [JsonProperty("total_net_total_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total_annual { get; set; } 

        [JsonProperty("total_costprice_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_costprice_annual { get; set; } 

        [JsonProperty("total_profit_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_profit_annual { get; set; } 

        [JsonProperty("total_tax_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_annual { get; set; } 

        [JsonProperty("total_discount_annual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_discount_annual { get; set; } 

        [JsonProperty("total_price_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_yearone { get; set; } 

        [JsonProperty("total_price_yearone_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_yearone_converted { get; set; } 

        [JsonProperty("total_net_total_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total_yearone { get; set; } 

        [JsonProperty("total_costprice_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_costprice_yearone { get; set; } 

        [JsonProperty("total_profit_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_profit_yearone { get; set; } 

        [JsonProperty("total_tax_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_yearone { get; set; } 

        [JsonProperty("total_discount_yearone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_discount_yearone { get; set; } 

        [JsonProperty("qhid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qhid { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("note_hidden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Note_hidden { get; set; } 

        [JsonProperty("servicefee", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Servicefee { get; set; } 

        [JsonProperty("recovery", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Recovery { get; set; } 

        [JsonProperty("margin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Margin { get; set; } 

        [JsonProperty("billingperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Billingperiod { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("autorenew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autorenew { get; set; } 

        [JsonProperty("item_recurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_recurring { get; set; } 

        [JsonProperty("item_taxable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_taxable { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("printitem", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Printitem { get; set; } 

        [JsonProperty("isgroupdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isgroupdesc { get; set; } 

        [JsonProperty("discount_perc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Discount_perc { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("optional", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Optional { get; set; } 

        [JsonProperty("approval_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_status { get; set; } 

        [JsonProperty("cost_centre", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cost_centre { get; set; } 

        [JsonProperty("stock_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stock_location { get; set; } 

        [JsonProperty("item_internal_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_internal_reference { get; set; } 

        [JsonProperty("item_external_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_external_reference { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("item_tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_tax_name { get; set; } 

        [JsonProperty("quoteitemurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Quoteitemurl { get; set; } 

        [JsonProperty("addedtorecurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Addedtorecurring { get; set; } 

        [JsonProperty("addedtononrecurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Addedtononrecurring { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("assetgroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetgroup_id { get; set; } 

        [JsonProperty("maxitemdiscount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Maxitemdiscount { get; set; } 

        [JsonProperty("line_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Line_site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("line_periods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Line_periods { get; set; } 

        [JsonProperty("hideitems", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hideitems { get; set; } 

        [JsonProperty("ignoretaxcalc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignoretaxcalc { get; set; } 

        [JsonProperty("current_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Current_quantity { get; set; } 

        [JsonProperty("current_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Current_price { get; set; } 

        [JsonProperty("current_net_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Current_net_price { get; set; } 

        [JsonProperty("isleased", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isleased { get; set; } 

        [JsonProperty("stockbin_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stockbin_id { get; set; } 

        [JsonProperty("quoter_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Quoter_id { get; set; } 

        [JsonProperty("is_bundled_line", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_bundled_line { get; set; } 

        [JsonProperty("optional_line_quantity_change", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Optional_line_quantity_change { get; set; } 

        [JsonProperty("created_from_group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Created_from_group_id { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("chargerates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Lookup>? Chargerates { get; set; } 

        [JsonProperty("budgets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FaultBudget>? Budgets { get; set; } 

        [JsonProperty("item_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_template { get; set; } 

        [JsonProperty("item_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_contract { get; set; } 

        [JsonProperty("hide_grouped_items_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_grouped_items_price { get; set; } 

        [JsonProperty("nominal_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nominal_code { get; set; } 

        [JsonProperty("one_optional_mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? One_optional_mandatory { get; set; } 

        [JsonProperty("one_optional_mandatory_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? One_optional_mandatory_list { get; set; } 

        [JsonProperty("force_quantity_relationship", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_quantity_relationship { get; set; } 

        [JsonProperty("force_price_relationship", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_price_relationship { get; set; } 

        [JsonProperty("force_term_relationship", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Force_term_relationship { get; set; } 

        [JsonProperty("price_calculation_formula", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Price_calculation_formula { get; set; } 

        [JsonProperty("purchase_currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchase_currency_code { get; set; } 

        [JsonProperty("cost_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Cost_converted { get; set; } 

        [JsonProperty("purchase_currency_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_currency_code_name { get; set; } 

        [JsonProperty("purchase_currency_symbol", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Purchase_currency_symbol { get; set; } 

        [JsonProperty("purchase_conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Purchase_conversion_rate { get; set; } 

        [JsonProperty("stocklocation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stocklocation_id { get; set; } 

        [JsonProperty("exclude_auto_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exclude_auto_increase { get; set; } 

        [JsonProperty("auto_increase_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_increase_period { get; set; } 

        [JsonProperty("percent_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percent_increase { get; set; } 

        [JsonProperty("use_rpi_increase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_rpi_increase { get; set; } 

        [JsonProperty("net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_total { get; set; } 

        [JsonProperty("total_tax_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_converted { get; set; } 

        [JsonProperty("tax_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_converted { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? External_link { get; set; } 

        [JsonProperty("ingram_quote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ingram_quote { get; set; } 

        [JsonProperty("hubspot_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hubspot_id { get; set; } 

        [JsonProperty("item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_tax_code { get; set; } 

        [JsonProperty("baseprice_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Baseprice_converted { get; set; } 

        [JsonProperty("unitprice_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unitprice_converted { get; set; } 

        [JsonProperty("override_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_tax_code { get; set; } 

        [JsonProperty("baseprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Baseprice { get; set; } 

        [JsonProperty("total_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax { get; set; } 

        [JsonProperty("total_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price { get; set; } 

        [JsonProperty("total_discount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_discount { get; set; } 

        [JsonProperty("conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Conversion_rate { get; set; } 

        [JsonProperty("discount_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Discount_converted { get; set; } 

        [JsonProperty("net_amount_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_amount_converted { get; set; } 

        [JsonProperty("total_price_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_converted { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_name { get; set; } 

        [JsonProperty("taxRuleResult", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TaxRuleResult>? TaxRuleResult { get; set; } 

        [JsonProperty("decimalplacesforinvoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Decimalplacesforinvoices { get; set; } 

        [JsonProperty("total_net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class QuotationHeader
    {
        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Table { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("po_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Po_ref { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("expiry_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Expiry_date { get; set; } 

        [JsonProperty("revenue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Revenue { get; set; } 

        [JsonProperty("tax_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_total { get; set; } 

        [JsonProperty("total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total { get; set; } 

        [JsonProperty("carriage_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Carriage_desc { get; set; } 

        [JsonProperty("carriage_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Carriage_price { get; set; } 

        [JsonProperty("tax_total_estimate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_total_estimate { get; set; } 

        [JsonProperty("auth_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auth_by { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Users? User { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("scope", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Scope { get; set; } 

        [JsonProperty("risk", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Risk { get; set; } 

        [JsonProperty("qr2filename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qr2filename { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("assigned_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assigned_agent { get; set; } 

        [JsonProperty("assigned_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assigned_agent_name { get; set; } 

        [JsonProperty("includegroupeditemprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includegroupeditemprice { get; set; } 

        [JsonProperty("includegroupeditemqty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includegroupeditemqty { get; set; } 

        [JsonProperty("daystodeliver", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Daystodeliver { get; set; } 

        [JsonProperty("currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currency { get; set; } 

        [JsonProperty("currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Currency_code { get; set; } 

        [JsonProperty("currency_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currency_code_name { get; set; } 

        [JsonProperty("currency_conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Currency_conversion_rate { get; set; } 

        [JsonProperty("includequotationlinenotes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includequotationlinenotes { get; set; } 

        [JsonProperty("includegrouppriceandqty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includegrouppriceandqty { get; set; } 

        [JsonProperty("approvalname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalname { get; set; } 

        [JsonProperty("approvalemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalemailaddress { get; set; } 

        [JsonProperty("approvaldatetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Approvaldatetime { get; set; } 

        [JsonProperty("approvalnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalnote { get; set; } 

        [JsonProperty("approvalstate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approvalstate { get; set; } 

        [JsonProperty("lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<QuotationDetail>? Lines { get; set; } 

        [JsonProperty("_validateonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _validateonly { get; set; } 

        [JsonProperty("_print_preview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_preview { get; set; } 

        [JsonProperty("_print_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_generate { get; set; } 

        [JsonProperty("printhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printhtml { get; set; } 

        [JsonProperty("pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_attachment_id { get; set; } 

        [JsonProperty("ponumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ponumber { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("pdftemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdftemplate_name { get; set; } 

        [JsonProperty("portal_display_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Portal_display_type { get; set; } 

        [JsonProperty("_create_so", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _create_so { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("salesorder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public OrderHead? Salesorder { get; set; } 

        [JsonProperty("signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Signature { get; set; } 

        [JsonProperty("createdbyagentname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Createdbyagentname { get; set; } 

        [JsonProperty("quote_viewed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Quote_viewed { get; set; } 

        [JsonProperty("canned_text_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Canned_text_id { get; set; } 

        [JsonProperty("canned_text_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Canned_text_name { get; set; } 

        [JsonProperty("canned_text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Canned_text { get; set; } 

        [JsonProperty("last_update_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_update_time { get; set; } 

        [JsonProperty("images", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment_List>? Images { get; set; } 

        [JsonProperty("internal_approval_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Internal_approval_status { get; set; } 

        [JsonProperty("approval_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Approval_start { get; set; } 

        [JsonProperty("internal_approvalagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Internal_approvalagent { get; set; } 

        [JsonProperty("internal_approvalemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Internal_approvalemailaddress { get; set; } 

        [JsonProperty("internal_approvalnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Internal_approvalnote { get; set; } 

        [JsonProperty("internal_approvalagentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Internal_approvalagentid { get; set; } 

        [JsonProperty("internal_approvaldatetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Internal_approvaldatetime { get; set; } 

        [JsonProperty("requires_approval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Requires_approval { get; set; } 

        [JsonProperty("ticket_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_summary { get; set; } 

        [JsonProperty("ticket_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_note { get; set; } 

        [JsonProperty("new_ticket_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_ticket_status { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("datto_commerce_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Datto_commerce_id { get; set; } 

        [JsonProperty("datto_commerce_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_commerce_url { get; set; } 

        [JsonProperty("third_party_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_url { get; set; } 

        [JsonProperty("dattocommerce_clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dattocommerce_clientid { get; set; } 

        [JsonProperty("dattocommerce_contactname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dattocommerce_contactname { get; set; } 

        [JsonProperty("dattocommerce_contactemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dattocommerce_contactemail { get; set; } 

        [JsonProperty("deliveryamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Deliveryamount { get; set; } 

        [JsonProperty("dattocommerce_tenantid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dattocommerce_tenantid { get; set; } 

        [JsonProperty("deliverytax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Deliverytax { get; set; } 

        [JsonProperty("dontupdateporef", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontupdateporef { get; set; } 

        [JsonProperty("can_approve", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_approve { get; set; } 

        [JsonProperty("linked_pdf_list_append", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<QuotationHeaderPdf>? Linked_pdf_list_append { get; set; } 

        [JsonProperty("linked_pdf_list_prepend", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<QuotationHeaderPdf>? Linked_pdf_list_prepend { get; set; } 

        [JsonProperty("automatic_sales_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Automatic_sales_tax { get; set; } 

        [JsonProperty("contactuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contactuser { get; set; } 

        [JsonProperty("contactusername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contactusername { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("third_party_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_number { get; set; } 

        [JsonProperty("intacct_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class { get; set; } 

        [JsonProperty("intacct_class_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class_name { get; set; } 

        [JsonProperty("intacct_save_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_save_location { get; set; } 

        [JsonProperty("is_leased", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_leased { get; set; } 

        [JsonProperty("term_limit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Term_limit { get; set; } 

        [JsonProperty("margin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Margin { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("billingcontactname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billingcontactname { get; set; } 

        [JsonProperty("billingcontactemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billingcontactemailaddress { get; set; } 

        [JsonProperty("billingcontactphonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Billingcontactphonenumber { get; set; } 

        [JsonProperty("so_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? So_number { get; set; } 

        [JsonProperty("use_ticket_approval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_ticket_approval { get; set; } 

        [JsonProperty("approval_process_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_process_id { get; set; } 

        [JsonProperty("new_approvalprocess_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_approvalprocess_agent_id { get; set; } 

        [JsonProperty("new_approvalprocess_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_approvalprocess_user_id { get; set; } 

        [JsonProperty("new_approvalprocess_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users_List>? New_approvalprocess_users { get; set; } 

        [JsonProperty("new_approvalprocess_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_approvalprocess_email { get; set; } 

        [JsonProperty("new_approvalprocess_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_approvalprocess_cab_id { get; set; } 

        [JsonProperty("new_approvalprocess_cab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CabMember>? New_approvalprocess_cab { get; set; } 

        [JsonProperty("site_delivery_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_delivery_override { get; set; } 

        [JsonProperty("address1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address1 { get; set; } 

        [JsonProperty("address2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address2 { get; set; } 

        [JsonProperty("address3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address3 { get; set; } 

        [JsonProperty("address4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address4 { get; set; } 

        [JsonProperty("address5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address5 { get; set; } 

        [JsonProperty("deladdress1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress1 { get; set; } 

        [JsonProperty("deladdress2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress2 { get; set; } 

        [JsonProperty("deladdress3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress3 { get; set; } 

        [JsonProperty("deladdress4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress4 { get; set; } 

        [JsonProperty("deladdress5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress5 { get; set; } 

        [JsonProperty("address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Address { get; set; } 

        [JsonProperty("delivery_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Delivery_address { get; set; } 

        [JsonProperty("workflow_history", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<WorkflowHistory>? Workflow_history { get; set; } 

        [JsonProperty("workflow_step", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workflow_step { get; set; } 

        [JsonProperty("workflow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workflow_id { get; set; } 

        [JsonProperty("_isclone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isclone { get; set; } 

        [JsonProperty("_revision_from_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _revision_from_id { get; set; } 

        [JsonProperty("_originalid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _originalid { get; set; } 

        [JsonProperty("_customisepdf", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _customisepdf { get; set; } 

        [JsonProperty("is_customised_pdf", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_customised_pdf { get; set; } 

        [JsonProperty("customisedpdf", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public PdfTemplate? Customisedpdf { get; set; } 

        [JsonProperty("new_approvalprocess_role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_approvalprocess_role_id { get; set; } 

        [JsonProperty("is_quote_screen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_quote_screen { get; set; } 

        [JsonProperty("_novalidate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _novalidate { get; set; } 

        [JsonProperty("avalara_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Avalara_details_id { get; set; } 

        [JsonProperty("adobe_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Adobe_details_id { get; set; } 

        [JsonProperty("avalara_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_details_name { get; set; } 

        [JsonProperty("_startthirdpartysign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _startthirdpartysign { get; set; } 

        [JsonProperty("_hasadobesignopen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _hasadobesignopen { get; set; } 

        [JsonProperty("user_approval_unavailable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? User_approval_unavailable { get; set; } 

        [JsonProperty("top_level_purchase_currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Top_level_purchase_currency_code { get; set; } 

        [JsonProperty("tree_purchase_currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Currency? Tree_purchase_currency { get; set; } 

        [JsonProperty("_updatepurchasecurrency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _updatepurchasecurrency { get; set; } 

        [JsonProperty("_remove_zero_quantity_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _remove_zero_quantity_lines { get; set; } 

        [JsonProperty("site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Site? Site { get; set; } 

        [JsonProperty("originaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Originaddress { get; set; } 

        [JsonProperty("originaddress1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress1 { get; set; } 

        [JsonProperty("originaddress2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress2 { get; set; } 

        [JsonProperty("originaddress3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress3 { get; set; } 

        [JsonProperty("originaddress4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress4 { get; set; } 

        [JsonProperty("originaddress5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress5 { get; set; } 

        [JsonProperty("original_revised_from_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Original_revised_from_id { get; set; } 

        [JsonProperty("quoteapprovalfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Quoteapprovalfields { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("extratabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tabname>? Extratabs { get; set; } 

        [JsonProperty("status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_name { get; set; } 

        [JsonProperty("_dotaxsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dotaxsync { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class QuotationHeaderPdf
    {
        [JsonProperty("desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Desc { get; set; } 

        [JsonProperty("uniqueid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uniqueid { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("quotationheaderid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quotationheaderid { get; set; } 

        [JsonProperty("prepend", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prepend { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RT_Permission
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("create", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create { get; set; } 

        [JsonProperty("read", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Read { get; set; } 

        [JsonProperty("edit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Edit { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RelayEventCategory
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

        _5 = 5,

        _6 = 6,

        _7 = 7,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum RelayEventType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Release
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("name_expanded", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name_expanded { get; set; } 

        [JsonProperty("releasetype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Releasetype_id { get; set; } 

        [JsonProperty("releasetype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Releasetype_name { get; set; } 

        [JsonProperty("branch_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Branch_id { get; set; } 

        [JsonProperty("branch_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Branch_name { get; set; } 

        [JsonProperty("whoreleased_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Whoreleased_id { get; set; } 

        [JsonProperty("builddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Builddate { get; set; } 

        [JsonProperty("releasedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Releasedate { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("public_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Public_note { get; set; } 

        [JsonProperty("product_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Product_id { get; set; } 

        [JsonProperty("product_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Product_name { get; set; } 

        [JsonProperty("product_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Product_icon { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("major_version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Major_version_number { get; set; } 

        [JsonProperty("minor_version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Minor_version_number { get; set; } 

        [JsonProperty("patch_version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Patch_version_number { get; set; } 

        [JsonProperty("releasenote_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Releasenote_count { get; set; } 

        [JsonProperty("release1_emaildate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Release1_emaildate { get; set; } 

        [JsonProperty("release2_emaildate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Release2_emaildate { get; set; } 

        [JsonProperty("release3_emaildate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Release3_emaildate { get; set; } 

        [JsonProperty("send_release1_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Send_release1_email { get; set; } 

        [JsonProperty("send_release2_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Send_release2_email { get; set; } 

        [JsonProperty("send_release3_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Send_release3_email { get; set; } 

        [JsonProperty("preview_release_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Preview_release_email { get; set; } 

        [JsonProperty("release_email_subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Release_email_subject { get; set; } 

        [JsonProperty("release_email_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Release_email_html { get; set; } 

        [JsonProperty("release_email_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Release_email_tickets { get; set; } 

        [JsonProperty("releasetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ReleaseType? Releasetype { get; set; } 

        [JsonProperty("instance_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Instance_count { get; set; } 

        [JsonProperty("total_instance_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_instance_count { get; set; } 

        [JsonProperty("adoption", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Adoption { get; set; } 

        [JsonProperty("issues_logged", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Issues_logged { get; set; } 

        [JsonProperty("open_issues", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_issues { get; set; } 

        [JsonProperty("licences", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LicenceInfo>? Licences { get; set; } 

        [JsonProperty("jira_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ReleaseBranch
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("product_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Product_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Name { get; set; } 

        [JsonProperty("releasenoteset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Releasenoteset { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ReleaseComponent
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("product_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Product_id { get; set; } 

        [JsonProperty("product_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Product_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ReleaseNote
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category { get; set; } 

        [JsonProperty("important", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Important { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("changeinformation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Changeinformation { get; set; } 

        [JsonProperty("changeinformationexists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Changeinformationexists { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("month", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Month { get; set; } 

        [JsonProperty("version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version { get; set; } 

        [JsonProperty("group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ReleaseNoteGroup? Group { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ReleaseNoteGroup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("releasenote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Releasenote { get; set; } 

        [JsonProperty("releasenotes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ReleaseNote>? Releasenotes { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ReleasePipeline
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("integration_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_link { get; set; } 

        [JsonProperty("linked_product", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_product { get; set; } 

        [JsonProperty("devops_pipeline_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Devops_pipeline_id { get; set; } 

        [JsonProperty("devops_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Devops_details_id { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("devops_project_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Devops_project_id { get; set; } 

        [JsonProperty("pipeline_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Pipeline_mappings { get; set; } 

        [JsonProperty("linked_product_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_product_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ReleaseProduct
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("release_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Release_count { get; set; } 

        [JsonProperty("logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logo { get; set; } 

        [JsonProperty("new_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_icon { get; set; } 

        [JsonProperty("release_emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ReleaseProductEmail>? Release_emails { get; set; } 

        [JsonProperty("components", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ReleaseComponent>? Components { get; set; } 

        [JsonProperty("third_party_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_name { get; set; } 

        [JsonProperty("third_party_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_url { get; set; } 

        [JsonProperty("devops_project", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DevOpsProject? Devops_project { get; set; } 

        [JsonProperty("devops_otherfield_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Devops_otherfield_mappings { get; set; } 

        [JsonProperty("devops_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Devops_details_id { get; set; } 

        [JsonProperty("devops_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Devops_details_name { get; set; } 

        [JsonProperty("devops_instance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AzureDevOpsDetails? Devops_instance { get; set; } 

        [JsonProperty("show_devops_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_devops_mappings { get; set; } 

        [JsonProperty("github_repo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Github_repo { get; set; } 

        [JsonProperty("branches", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ReleaseBranch>? Branches { get; set; } 

        [JsonProperty("jira_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Jira_details_id { get; set; } 

        [JsonProperty("jira_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_details_name { get; set; } 

        [JsonProperty("jira_instance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public JiraDetails? Jira_instance { get; set; } 

        [JsonProperty("jirafield_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Jirafield_mappings { get; set; } 

        [JsonProperty("jira_project", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Jira_project { get; set; } 

        [JsonProperty("devops_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Devops_id { get; set; } 

        [JsonProperty("devops_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Devops_name { get; set; } 

        [JsonProperty("devops_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Devops_url { get; set; } 

        [JsonProperty("default_pipeline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_pipeline { get; set; } 

        [JsonProperty("default_pipeline_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_pipeline_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ReleaseProductEmail
    {
        [JsonProperty("product_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Product_id { get; set; } 

        [JsonProperty("release_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Release_id { get; set; } 

        [JsonProperty("releasetype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Releasetype_name { get; set; } 

        [JsonProperty("emailtemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailtemplate_id { get; set; } 

        [JsonProperty("emailtemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailtemplate_name { get; set; } 

        [JsonProperty("change_status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Change_status_id { get; set; } 

        [JsonProperty("push_to_children", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Push_to_children { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ReleaseType
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("releasenoteset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Releasenoteset { get; set; } 

        [JsonProperty("template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Template_id { get; set; } 

        [JsonProperty("template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Template_name { get; set; } 

        [JsonProperty("spotlight_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Spotlight_template_id { get; set; } 

        [JsonProperty("spotlight_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Spotlight_template_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RemoteSessionData
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("thirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyid { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("actionnumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionnumber { get; set; } 

        [JsonProperty("calllogid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Calllogid { get; set; } 

        [JsonProperty("customername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customername { get; set; } 

        [JsonProperty("sitename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sitename { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("emailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress { get; set; } 

        [JsonProperty("sessionstate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sessionstate { get; set; } 

        [JsonProperty("sessionfinished", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sessionfinished { get; set; } 

        [JsonProperty("unum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unum { get; set; } 

        [JsonProperty("uname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Uname { get; set; } 

        [JsonProperty("queuedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Queuedate { get; set; } 

        [JsonProperty("leftqueuedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Leftqueuedate { get; set; } 

        [JsonProperty("sessionstartdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Sessionstartdate { get; set; } 

        [JsonProperty("sessionenddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Sessionenddate { get; set; } 

        [JsonProperty("matchedclient", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Matchedclient { get; set; } 

        [JsonProperty("matchedsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Matchedsite { get; set; } 

        [JsonProperty("matcheduser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matcheduser { get; set; } 

        [JsonProperty("outcome", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome { get; set; } 

        [JsonProperty("phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phonenumber { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("resolved", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Resolved { get; set; } 

        [JsonProperty("isnewreq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isnewreq { get; set; } 

        [JsonProperty("userid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userid { get; set; } 

        [JsonProperty("livechatid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Livechatid { get; set; } 

        [JsonProperty("clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clientid { get; set; } 

        [JsonProperty("siteid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Siteid { get; set; } 

        [JsonProperty("_override_create_action", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _override_create_action { get; set; } 

        [JsonProperty("time_taken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Time_taken { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("agent_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_url { get; set; } 

        [JsonProperty("new_webhook_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_webhook_password { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("recording_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Recording_url { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RemoteSessionTeams
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("thirdpartyname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyname { get; set; } 

        [JsonProperty("thirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyid { get; set; } 

        [JsonProperty("msid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Msid { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ReportContent
    {
        [JsonProperty("loaded", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Loaded { get; set; } 

        [JsonProperty("load_error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Load_error { get; set; } 

        [JsonProperty("rows", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IDictionary<string, object>>? Rows { get; set; } 

        [JsonProperty("chart_labels", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Chart_labels { get; set; } 

        [JsonProperty("chart_dataset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Chart_dataset { get; set; } 

        [JsonProperty("chart_dataset1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Chart_dataset1 { get; set; } 

        [JsonProperty("chart_dataset2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Chart_dataset2 { get; set; } 

        [JsonProperty("chart_dataset3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Chart_dataset3 { get; set; } 

        [JsonProperty("chart_dataset4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Chart_dataset4 { get; set; } 

        [JsonProperty("chart_dataset5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Chart_dataset5 { get; set; } 

        [JsonProperty("base_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Base_link { get; set; } 

        [JsonProperty("table_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Table_html { get; set; } 

        [JsonProperty("datasets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, ICollection<object>?>? Datasets { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RequestType
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("default_sla_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Default_sla_guid { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("jira_issue_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_issue_type { get; set; } 

        [JsonProperty("ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_count { get; set; } 

        [JsonProperty("cancreate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cancreate { get; set; } 

        [JsonProperty("agentscanselect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Agentscanselect { get; set; } 

        [JsonProperty("itilrequesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itilrequesttype { get; set; } 

        [JsonProperty("allowattachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowattachments { get; set; } 

        [JsonProperty("copyattachmentstochild", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copyattachmentstochild { get; set; } 

        [JsonProperty("copyattachmentstorelated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copyattachmentstorelated { get; set; } 

        [JsonProperty("is_sprint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_sprint { get; set; } 

        [JsonProperty("fieldidlist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Fieldidlist { get; set; } 

        [JsonProperty("enduserscanselect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enduserscanselect { get; set; } 

        [JsonProperty("anonymouscanselect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Anonymouscanselect { get; set; } 

        [JsonProperty("hasmandatorytechfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hasmandatorytechfields { get; set; } 

        [JsonProperty("hasmandatoryuserfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hasmandatoryuserfields { get; set; } 

        [JsonProperty("statusafteruserupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statusafteruserupdate { get; set; } 

        [JsonProperty("statusafteruserupdate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Statusafteruserupdate_guid { get; set; } 

        [JsonProperty("statusaftersupplierupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statusaftersupplierupdate { get; set; } 

        [JsonProperty("statusaftersupplierupdate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Statusaftersupplierupdate_guid { get; set; } 

        [JsonProperty("closedrequestswithupdates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Closedrequestswithupdates { get; set; } 

        [JsonProperty("pendingrequestswithupdates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pendingrequestswithupdates { get; set; } 

        [JsonProperty("portalcanreopen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Portalcanreopen { get; set; } 

        [JsonProperty("closedrequestswithupdatesincpending", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Closedrequestswithupdatesincpending { get; set; } 

        [JsonProperty("includeinmobiledbsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includeinmobiledbsync { get; set; } 

        [JsonProperty("workflow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workflow_id { get; set; } 

        [JsonProperty("workflow_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Workflow_guid { get; set; } 

        [JsonProperty("always_bcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Always_bcc { get; set; } 

        [JsonProperty("reopenedstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reopenedstatus { get; set; } 

        [JsonProperty("reopenedstatus_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Reopenedstatus_guid { get; set; } 

        [JsonProperty("closedrequestsemailid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Closedrequestsemailid { get; set; } 

        [JsonProperty("closedrequestsemailguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Closedrequestsemailguid { get; set; } 

        [JsonProperty("pendingrequestsemailid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pendingrequestsemailid { get; set; } 

        [JsonProperty("pendingrequestsemailguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Pendingrequestsemailguid { get; set; } 

        [JsonProperty("closedrequestsemail_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Closedrequestsemail_name { get; set; } 

        [JsonProperty("pendingrequestsemail_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pendingrequestsemail_name { get; set; } 

        [JsonProperty("closeduserupdatehours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Closeduserupdatehours { get; set; } 

        [JsonProperty("pendinguserupdatehours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Pendinguserupdatehours { get; set; } 

        [JsonProperty("webannouncement", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webannouncement { get; set; } 

        [JsonProperty("chargerate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate { get; set; } 

        [JsonProperty("initial_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Initial_status { get; set; } 

        [JsonProperty("initial_status_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Initial_status_guid { get; set; } 

        [JsonProperty("default_team_to_agents_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_team_to_agents_default { get; set; } 

        [JsonProperty("default_sla", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_sla { get; set; } 

        [JsonProperty("default_category_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_category_1 { get; set; } 

        [JsonProperty("default_category_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_category_2 { get; set; } 

        [JsonProperty("default_category_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_category_3 { get; set; } 

        [JsonProperty("default_category_4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_category_4 { get; set; } 

        [JsonProperty("default_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_summary { get; set; } 

        [JsonProperty("default_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_details { get; set; } 

        [JsonProperty("default_details_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_details_html { get; set; } 

        [JsonProperty("default_excludefromsla", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_excludefromsla { get; set; } 

        [JsonProperty("default_showforusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_showforusers { get; set; } 

        [JsonProperty("default_sendack", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_sendack { get; set; } 

        [JsonProperty("default_sendemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_sendemail { get; set; } 

        [JsonProperty("default_matchedkbid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_matchedkbid { get; set; } 

        [JsonProperty("default_kb_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_kb_name { get; set; } 

        [JsonProperty("default_kb_accessible_for_enduser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_kb_accessible_for_enduser { get; set; } 

        [JsonProperty("allowall_actions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_actions { get; set; } 

        [JsonProperty("allowall_team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_team { get; set; } 

        [JsonProperty("allowed_teams", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SectionRequestType>? Allowed_teams { get; set; } 

        [JsonProperty("allowed_actions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Restriction>? Allowed_actions { get; set; } 

        [JsonProperty("allowall_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_status { get; set; } 

        [JsonProperty("allowed_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeStatus>? Allowed_status { get; set; } 

        [JsonProperty("allowall_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category1 { get; set; } 

        [JsonProperty("allowed_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category1 { get; set; } 

        [JsonProperty("allowall_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category2 { get; set; } 

        [JsonProperty("allowed_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category2 { get; set; } 

        [JsonProperty("allowall_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category3 { get; set; } 

        [JsonProperty("allowed_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category3 { get; set; } 

        [JsonProperty("allowall_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category4 { get; set; } 

        [JsonProperty("allowed_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category4 { get; set; } 

        [JsonProperty("approval_process_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_process_id { get; set; } 

        [JsonProperty("approval_process_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Approval_process_guid { get; set; } 

        [JsonProperty("approval_process_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approval_process_name { get; set; } 

        [JsonProperty("from_mailbox_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? From_mailbox_id { get; set; } 

        [JsonProperty("hide_respond", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_respond { get; set; } 

        [JsonProperty("close_kb_action", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Close_kb_action { get; set; } 

        [JsonProperty("default_product_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_product_id { get; set; } 

        [JsonProperty("default_product_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_product_name { get; set; } 

        [JsonProperty("default_budgettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_budgettype_id { get; set; } 

        [JsonProperty("default_budgettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_budgettype_name { get; set; } 

        [JsonProperty("email_start_tag_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_start_tag_override { get; set; } 

        [JsonProperty("email_end_tag_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_end_tag_override { get; set; } 

        [JsonProperty("acknowledgementtemplate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Acknowledgementtemplate { get; set; } 

        [JsonProperty("acknowledgementtemplate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Acknowledgementtemplate_guid { get; set; } 

        [JsonProperty("acknowledgementtemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Acknowledgementtemplate_name { get; set; } 

        [JsonProperty("acknowledgementtemplateooh", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Acknowledgementtemplateooh { get; set; } 

        [JsonProperty("acknowledgementtemplateooh_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Acknowledgementtemplateooh_guid { get; set; } 

        [JsonProperty("acknowledgementtemplateooh_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Acknowledgementtemplateooh_name { get; set; } 

        [JsonProperty("dontsendslareminders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsendslareminders { get; set; } 

        [JsonProperty("dontusependingclosure", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontusependingclosure { get; set; } 

        [JsonProperty("database_lookup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Database_lookup_id { get; set; } 

        [JsonProperty("database_lookup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Database_lookup_name { get; set; } 

        [JsonProperty("applydefaultsontypechangebool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Applydefaultsontypechangebool { get; set; } 

        [JsonProperty("apply_workflow_on_type_change", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Apply_workflow_on_type_change { get; set; } 

        [JsonProperty("allowtickettypetobechild", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowtickettypetobechild { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Fields { get; set; } 

        [JsonProperty("default_estimate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Default_estimate { get; set; } 

        [JsonProperty("mustclosechildbeforeclosurebool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mustclosechildbeforeclosurebool { get; set; } 

        [JsonProperty("default_sendremoteinvite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_sendremoteinvite { get; set; } 

        [JsonProperty("logtimeindays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Logtimeindays { get; set; } 

        [JsonProperty("logtimeindaysincrement", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Logtimeindaysincrement { get; set; } 

        [JsonProperty("usetimeslotsforstartandtargettimes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Usetimeslotsforstartandtargettimes { get; set; } 

        [JsonProperty("childticketcolumnsoverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Childticketcolumnsoverride { get; set; } 

        [JsonProperty("childticketcolumnsoverride_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Childticketcolumnsoverride_guid { get; set; } 

        [JsonProperty("childticketcolumnsoverride_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Childticketcolumnsoverride_name { get; set; } 

        [JsonProperty("showunborntab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showunborntab { get; set; } 

        [JsonProperty("allowcustomiseunborn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowcustomiseunborn { get; set; } 

        [JsonProperty("inform_account_manager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inform_account_manager { get; set; } 

        [JsonProperty("statusaftertechupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statusaftertechupdate { get; set; } 

        [JsonProperty("statusaftertechupdate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Statusaftertechupdate_guid { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("pdftemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdftemplate_name { get; set; } 

        [JsonProperty("quote_pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quote_pdftemplate_id { get; set; } 

        [JsonProperty("quote_pdftemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Quote_pdftemplate_name { get; set; } 

        [JsonProperty("maximumRestrictedPriority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? MaximumRestrictedPriority { get; set; } 

        [JsonProperty("auto_respond_logged_manually", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_respond_logged_manually { get; set; } 

        [JsonProperty("autoCloseHours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? AutoCloseHours { get; set; } 

        [JsonProperty("allowed_clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaRequestType>? Allowed_clients { get; set; } 

        [JsonProperty("closedrequestreplylimit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Closedrequestreplylimit { get; set; } 

        [JsonProperty("pendingrequestreplylimit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pendingrequestreplylimit { get; set; } 

        [JsonProperty("alluserscanviewit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Alluserscanviewit { get; set; } 

        [JsonProperty("alluserscanview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Alluserscanview { get; set; } 

        [JsonProperty("thisentitycanbevotedfor", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Thisentitycanbevotedfor { get; set; } 

        [JsonProperty("show_vote_comment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_vote_comment { get; set; } 

        [JsonProperty("overridewiththefollowingtemplatewhenloggingmanually", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Overridewiththefollowingtemplatewhenloggingmanually { get; set; } 

        [JsonProperty("overridewiththefollowingtemplatewhenloggingmanually_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Overridewiththefollowingtemplatewhenloggingmanually_guid { get; set; } 

        [JsonProperty("editservstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Editservstatus { get; set; } 

        [JsonProperty("appointmentdefaultbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Appointmentdefaultbody { get; set; } 

        [JsonProperty("appointmentdefaultbody_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Appointmentdefaultbody_guid { get; set; } 

        [JsonProperty("appointmentdefaultbody_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Appointmentdefaultbody_name { get; set; } 

        [JsonProperty("setrelatedservicesfromassets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Setrelatedservicesfromassets { get; set; } 

        [JsonProperty("default_sendtosoc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_sendtosoc { get; set; } 

        [JsonProperty("default_soctargettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_soctargettype { get; set; } 

        [JsonProperty("default_soctargetid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_soctargetid { get; set; } 

        [JsonProperty("default_soctargetname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_soctargetname { get; set; } 

        [JsonProperty("soc_default_target", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Soc_default_target { get; set; } 

        [JsonProperty("forwardinboundupdates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Forwardinboundupdates { get; set; } 

        [JsonProperty("default_appointment_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_appointment_summary { get; set; } 

        [JsonProperty("default_appointment_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_appointment_details { get; set; } 

        [JsonProperty("displayonquicktime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Displayonquicktime { get; set; } 

        [JsonProperty("statusafterapproverupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statusafterapproverupdate { get; set; } 

        [JsonProperty("statusafterapproverupdate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Statusafterapproverupdate_guid { get; set; } 

        [JsonProperty("display_audit_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Display_audit_tab { get; set; } 

        [JsonProperty("overwrite_showforusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Overwrite_showforusers { get; set; } 

        [JsonProperty("default_services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServSite_List>? Default_services { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("showdownvote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showdownvote { get; set; } 

        [JsonProperty("addactionstolinked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Addactionstolinked { get; set; } 

        [JsonProperty("addnoteonlytolinked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Addnoteonlytolinked { get; set; } 

        [JsonProperty("dontconfirm_updateparent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontconfirm_updateparent { get; set; } 

        [JsonProperty("default_impact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_impact { get; set; } 

        [JsonProperty("default_risklevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_risklevel { get; set; } 

        [JsonProperty("default_justification", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_justification { get; set; } 

        [JsonProperty("default_impactdescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_impactdescription { get; set; } 

        [JsonProperty("default_riskleveldescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_riskleveldescription { get; set; } 

        [JsonProperty("default_testplan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_testplan { get; set; } 

        [JsonProperty("default_backoutplan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_backoutplan { get; set; } 

        [JsonProperty("default_communicationplan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_communicationplan { get; set; } 

        [JsonProperty("default_changeinformation_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_changeinformation_html { get; set; } 

        [JsonProperty("isbillable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isbillable { get; set; } 

        [JsonProperty("items_are_billable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Items_are_billable { get; set; } 

        [JsonProperty("defaultresourcetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultresourcetype { get; set; } 

        [JsonProperty("defaultresourcetype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultresourcetype_name { get; set; } 

        [JsonProperty("defaultlisttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultlisttype { get; set; } 

        [JsonProperty("defaulttab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaulttab { get; set; } 

        [JsonProperty("defaultsync_to_sentinel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Defaultsync_to_sentinel { get; set; } 

        [JsonProperty("adduserupdatestochildren", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Adduserupdatestochildren { get; set; } 

        [JsonProperty("default_targetdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_targetdate { get; set; } 

        [JsonProperty("allowed_resourcebooking_teams", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SectionRequestType>? Allowed_resourcebooking_teams { get; set; } 

        [JsonProperty("defaultresourcetype_name_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultresourcetype_name_agent { get; set; } 

        [JsonProperty("agentresourcebookingtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agentresourcebookingtype { get; set; } 

        [JsonProperty("userbookfromportal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Userbookfromportal { get; set; } 

        [JsonProperty("defaultresourcetype_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultresourcetype_agent { get; set; } 

        [JsonProperty("defaultagentresourcebookingduration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultagentresourcebookingduration_id { get; set; } 

        [JsonProperty("rtdefaultagentresourcebookingduration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Rtdefaultagentresourcebookingduration_name { get; set; } 

        [JsonProperty("showotheropenticketsinnewtab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showotheropenticketsinnewtab { get; set; } 

        [JsonProperty("showopenusertickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showopenusertickets { get; set; } 

        [JsonProperty("showopensitetickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showopensitetickets { get; set; } 

        [JsonProperty("showopenclienttickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showopenclienttickets { get; set; } 

        [JsonProperty("showopendevicetickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showopendevicetickets { get; set; } 

        [JsonProperty("showuserfeed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showuserfeed { get; set; } 

        [JsonProperty("updateservicestatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Updateservicestatus { get; set; } 

        [JsonProperty("default_servicestatusnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_servicestatusnote { get; set; } 

        [JsonProperty("attendeesenduser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Attendeesenduser { get; set; } 

        [JsonProperty("showautomationstab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showautomationstab { get; set; } 

        [JsonProperty("showbillingtab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showbillingtab { get; set; } 

        [JsonProperty("showsuggestionstab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showsuggestionstab { get; set; } 

        [JsonProperty("showoppcontacttab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showoppcontacttab { get; set; } 

        [JsonProperty("showactivestatuskanban", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showactivestatuskanban { get; set; } 

        [JsonProperty("ganttgrandchildview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ganttgrandchildview { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("submitlabeloverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Submitlabeloverride { get; set; } 

        [JsonProperty("allowall_appointment_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_appointment_types { get; set; } 

        [JsonProperty("include_appointments_scheduled_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Include_appointments_scheduled_hours { get; set; } 

        [JsonProperty("ticketlinktype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticketlinktype { get; set; } 

        [JsonProperty("allowed_appointment_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AppointmentTypeRequestType>? Allowed_appointment_types { get; set; } 

        [JsonProperty("allowall_iframe_customtabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_iframe_customtabs { get; set; } 

        [JsonProperty("allowed_iframe_customtabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IframeTabRequestType>? Allowed_iframe_customtabs { get; set; } 

        [JsonProperty("default_sync_to_salesforce", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_sync_to_salesforce { get; set; } 

        [JsonProperty("salesforce_default_stage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesforce_default_stage { get; set; } 

        [JsonProperty("show_add_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_add_note { get; set; } 

        [JsonProperty("auto_delete_data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_delete_data { get; set; } 

        [JsonProperty("auto_delete_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_delete_days { get; set; } 

        [JsonProperty("show_child_tasks_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Show_child_tasks_type { get; set; } 

        [JsonProperty("pin_important_actions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Pin_important_actions { get; set; } 

        [JsonProperty("showdecendantwarningoptions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showdecendantwarningoptions { get; set; } 

        [JsonProperty("statusafterresourcebook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statusafterresourcebook { get; set; } 

        [JsonProperty("parentstatusafterallchildclosed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parentstatusafterallchildclosed { get; set; } 

        [JsonProperty("parentstatusafterallchildclosed_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parentstatusafterallchildclosed_name { get; set; } 

        [JsonProperty("allowlogonbehalfof", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Allowlogonbehalfof { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("auto_create_appt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_create_appt { get; set; } 

        [JsonProperty("hide_anon_contact_info", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_anon_contact_info { get; set; } 

        [JsonProperty("ticket_created_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_created_override { get; set; } 

        [JsonProperty("newrequestmessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Newrequestmessage { get; set; } 

        [JsonProperty("allow_anonymous_logging", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_anonymous_logging { get; set; } 

        [JsonProperty("published_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Published_id { get; set; } 

        [JsonProperty("cors_whitelist_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Cors_whitelist_list { get; set; } 

        [JsonProperty("add_ack_attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Add_ack_attachments { get; set; } 

        [JsonProperty("defaultpagerdutyservice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultpagerdutyservice { get; set; } 

        [JsonProperty("defaultpagerdutyservice_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultpagerdutyservice_name { get; set; } 

        [JsonProperty("defaultsidebarcollapsed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Defaultsidebarcollapsed { get; set; } 

        [JsonProperty("logonbehalflabeloverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logonbehalflabeloverride { get; set; } 

        [JsonProperty("tab_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_display { get; set; } 

        [JsonProperty("sprint_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sprint_tickettype_id { get; set; } 

        [JsonProperty("sprint_tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sprint_tickettype_name { get; set; } 

        [JsonProperty("usemilestones", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Usemilestones { get; set; } 

        [JsonProperty("tab_config", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TabConfig>? Tab_config { get; set; } 

        [JsonProperty("enableusermentions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableusermentions { get; set; } 

        [JsonProperty("sladontclose", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sladontclose { get; set; } 

        [JsonProperty("pendingdontclose", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Pendingdontclose { get; set; } 

        [JsonProperty("minattachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Minattachments { get; set; } 

        [JsonProperty("enableforecasting", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableforecasting { get; set; } 

        [JsonProperty("make_cc_followers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Make_cc_followers { get; set; } 

        [JsonProperty("default_kanban_view", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_kanban_view { get; set; } 

        [JsonProperty("showgeneralsurveyfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showgeneralsurveyfields { get; set; } 

        [JsonProperty("default_send_to_pagerduty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_send_to_pagerduty { get; set; } 

        [JsonProperty("completion_status_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Completion_status_type { get; set; } 

        [JsonProperty("show_project_task_dates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_project_task_dates { get; set; } 

        [JsonProperty("auto_forward_email_updates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Auto_forward_email_updates { get; set; } 

        [JsonProperty("default_is_sensitive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_is_sensitive { get; set; } 

        [JsonProperty("process_open_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Process_open_tickets { get; set; } 

        [JsonProperty("todolistportalvisibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Todolistportalvisibility { get; set; } 

        [JsonProperty("legacy_print_request_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Legacy_print_request_details { get; set; } 

        [JsonProperty("legacy_print_service_form", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Legacy_print_service_form { get; set; } 

        [JsonProperty("default_appt_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_appt_type { get; set; } 

        [JsonProperty("show_child_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_child_assets { get; set; } 

        [JsonProperty("hide_anon_phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_anon_phonenumber { get; set; } 

        [JsonProperty("showconfirmemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showconfirmemail { get; set; } 

        [JsonProperty("ticket_status_after_appointment", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_status_after_appointment { get; set; } 

        [JsonProperty("max_open_per_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Max_open_per_user { get; set; } 

        [JsonProperty("max_total_per_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Max_total_per_user { get; set; } 

        [JsonProperty("max_open_per_user_reached", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Max_open_per_user_reached { get; set; } 

        [JsonProperty("max_total_per_user_reached", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Max_total_per_user_reached { get; set; } 

        [JsonProperty("milestone_billing", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Milestone_billing { get; set; } 

        [JsonProperty("showopensuppliertickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showopensuppliertickets { get; set; } 

        [JsonProperty("allowall_suggestion_faqlists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_suggestion_faqlists { get; set; } 

        [JsonProperty("allowed_suggestion_faqlists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FaqRequestType>? Allowed_suggestion_faqlists { get; set; } 

        [JsonProperty("startdate_validation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Startdate_validation { get; set; } 

        [JsonProperty("startdate_validation_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Startdate_validation_days { get; set; } 

        [JsonProperty("targetdate_validation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Targetdate_validation { get; set; } 

        [JsonProperty("targetdate_validation_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Targetdate_validation_days { get; set; } 

        [JsonProperty("auto_contributor", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Auto_contributor { get; set; } 

        [JsonProperty("allow_teams_chat_creation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_teams_chat_creation { get; set; } 

        [JsonProperty("teams_chat_default_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teams_chat_default_name { get; set; } 

        [JsonProperty("show_teams_chats_as_tabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_teams_chats_as_tabs { get; set; } 

        [JsonProperty("default_servicenow_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_servicenow_type { get; set; } 

        [JsonProperty("enable_task_dependencies", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_task_dependencies { get; set; } 

        [JsonProperty("exclude_from_sales_mailbox_match", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exclude_from_sales_mailbox_match { get; set; } 

        [JsonProperty("lapsafe_status_after_webhook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lapsafe_status_after_webhook { get; set; } 

        [JsonProperty("lapsafe_status_after_webhook_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Lapsafe_status_after_webhook_guid { get; set; } 

        [JsonProperty("show_status_on_portal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_status_on_portal { get; set; } 

        [JsonProperty("allow_slack_channel_creation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_slack_channel_creation { get; set; } 

        [JsonProperty("slack_channel_default_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Slack_channel_default_name { get; set; } 

        [JsonProperty("show_slack_channels_as_tabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_slack_channels_as_tabs { get; set; } 

        [JsonProperty("slack_channel_access_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Slack_channel_access_type { get; set; } 

        [JsonProperty("slack_channel_workspace", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Slack_channel_workspace { get; set; } 

        [JsonProperty("slack_channel_workspace_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Slack_channel_workspace_name { get; set; } 

        [JsonProperty("hide_anon_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Hide_anon_email { get; set; } 

        [JsonProperty("continue_autorelease", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Continue_autorelease { get; set; } 

        [JsonProperty("do_ai_survey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Do_ai_survey { get; set; } 

        [JsonProperty("enduserscanlog", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enduserscanlog { get; set; } 

        [JsonProperty("anonymouscanlog", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Anonymouscanlog { get; set; } 

        [JsonProperty("generate_ai_embeddings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Generate_ai_embeddings { get; set; } 

        [JsonProperty("load_balance_interval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Load_balance_interval { get; set; } 

        [JsonProperty("load_balance_max_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Load_balance_max_tickets { get; set; } 

        [JsonProperty("load_balance_on_schedule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Load_balance_on_schedule { get; set; } 

        [JsonProperty("load_balance_schedule_frequency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Load_balance_schedule_frequency { get; set; } 

        [JsonProperty("load_balance_schedule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AssignSchedule? Load_balance_schedule { get; set; } 

        [JsonProperty("allowall_child_tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_child_tickettypes { get; set; } 

        [JsonProperty("allowed_child_tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ChildRequestType>? Allowed_child_tickettypes { get; set; } 

        [JsonProperty("portal_summary_hint_is_placeholder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Portal_summary_hint_is_placeholder { get; set; } 

        [JsonProperty("portal_details_hint_is_placeholder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Portal_details_hint_is_placeholder { get; set; } 

        [JsonProperty("agent_summary_hint_is_placeholder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Agent_summary_hint_is_placeholder { get; set; } 

        [JsonProperty("agent_details_hint_is_placeholder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Agent_details_hint_is_placeholder { get; set; } 

        [JsonProperty("portal_screen_after_logging", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Portal_screen_after_logging { get; set; } 

        [JsonProperty("show_related_of_related", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Show_related_of_related { get; set; } 

        [JsonProperty("show_all_related", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Show_all_related { get; set; } 

        [JsonProperty("hideuserdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hideuserdetails { get; set; } 

        [JsonProperty("allowanonattachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowanonattachments { get; set; } 

        [JsonProperty("inherit_parent_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inherit_parent_category1 { get; set; } 

        [JsonProperty("inherit_parent_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inherit_parent_category2 { get; set; } 

        [JsonProperty("inherit_parent_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inherit_parent_category3 { get; set; } 

        [JsonProperty("inherit_parent_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inherit_parent_category4 { get; set; } 

        [JsonProperty("default_is_downtime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_is_downtime { get; set; } 

        [JsonProperty("is_chat_ticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_chat_ticket { get; set; } 

        [JsonProperty("add_related_assets_to_parent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Add_related_assets_to_parent { get; set; } 

        [JsonProperty("third_party_migration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_migration_id { get; set; } 

        [JsonProperty("wait_time_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Wait_time_type { get; set; } 

        [JsonProperty("default_wait_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Default_wait_time { get; set; } 

        [JsonProperty("wait_time_calc_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Wait_time_calc_hours { get; set; } 

        [JsonProperty("project_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Project_type { get; set; } 

        [JsonProperty("kanbanstatuschoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Kanbanstatuschoice { get; set; } 

        [JsonProperty("kanbanstatuschoice_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kanbanstatuschoice_list { get; set; } 

        [JsonProperty("email_start_tag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_start_tag { get; set; } 

        [JsonProperty("email_end_tag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_end_tag { get; set; } 

        [JsonProperty("default_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_agent { get; set; } 

        [JsonProperty("default_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_agent_name { get; set; } 

        [JsonProperty("default_team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_team { get; set; } 

        [JsonProperty("workflow_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workflow_name { get; set; } 

        [JsonProperty("overridewiththefollowingtemplatewhenloggingmanuallyname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Overridewiththefollowingtemplatewhenloggingmanuallyname { get; set; } 

        [JsonProperty("default_priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_priority { get; set; } 

        [JsonProperty("visible", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Visible { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RequestTypeField
    {
        [JsonProperty("copytochildonupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytochildonupdate { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("rtid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rtid { get; set; } 

        [JsonProperty("fieldid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fieldid { get; set; } 

        [JsonProperty("fieldguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Fieldguid { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("tableid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tableid { get; set; } 

        [JsonProperty("tableguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Tableguid { get; set; } 

        [JsonProperty("groupid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Groupid { get; set; } 

        [JsonProperty("groupguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Groupguid { get; set; } 

        [JsonProperty("endusernew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Endusernew { get; set; } 

        [JsonProperty("enduserdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Enduserdetail { get; set; } 

        [JsonProperty("enduserdetailrejected", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Enduserdetailrejected { get; set; } 

        [JsonProperty("technew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technew { get; set; } 

        [JsonProperty("techdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Techdetail { get; set; } 

        [JsonProperty("fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldname { get; set; } 

        [JsonProperty("fieldinfo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FieldInfo? Fieldinfo { get; set; } 

        [JsonProperty("visibility_conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldVisibility>? Visibility_conditions { get; set; } 

        [JsonProperty("visibility_conditions_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldVisibility>? Visibility_conditions_value { get; set; } 

        [JsonProperty("value_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldValueRestrictions>? Value_restrictions { get; set; } 

        [JsonProperty("group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public FieldGroup? Group { get; set; } 

        [JsonProperty("technewlocation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technewlocation { get; set; } 

        [JsonProperty("restrictupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictupdate { get; set; } 

        [JsonProperty("update_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeFieldRestriction>? Update_restrictions { get; set; } 

        [JsonProperty("techtab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Techtab_id { get; set; } 

        [JsonProperty("techtab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Techtab_name { get; set; } 

        [JsonProperty("showdependency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showdependency { get; set; } 

        [JsonProperty("canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canupdate { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("override_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_fieldname { get; set; } 

        [JsonProperty("override_action_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_action_fieldname { get; set; } 

        [JsonProperty("boldlabelandvalue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Boldlabelandvalue { get; set; } 

        [JsonProperty("enduserdetailhideifempty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enduserdetailhideifempty { get; set; } 

        [JsonProperty("techdetailhideifempty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Techdetailhideifempty { get; set; } 

        [JsonProperty("copytochild", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytochild { get; set; } 

        [JsonProperty("copytorelated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copytorelated { get; set; } 

        [JsonProperty("restrictread", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictread { get; set; } 

        [JsonProperty("read_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeFieldRestriction>? Read_restrictions { get; set; } 

        [JsonProperty("techtab_columns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Techtab_columns { get; set; } 

        [JsonProperty("chat_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chat_message { get; set; } 

        [JsonProperty("techaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Techaction { get; set; } 

        [JsonProperty("enduseraction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Enduseraction { get; set; } 

        [JsonProperty("endusercheckboxmandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Endusercheckboxmandatory { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("display_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Display_type { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RequestTypeFieldRestriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("alloweditbeforeapproval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Alloweditbeforeapproval { get; set; } 

        [JsonProperty("alloweditafterapproval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Alloweditafterapproval { get; set; } 

        [JsonProperty("alloweditduringapproval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Alloweditduringapproval { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RequestTypeGroup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Fields { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RequestTypeStatus
    {
        [JsonProperty("ticketype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticketype_id { get; set; } 

        [JsonProperty("tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_name { get; set; } 

        [JsonProperty("status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_id { get; set; } 

        [JsonProperty("status_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Status_guid { get; set; } 

        [JsonProperty("status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_name { get; set; } 

        [JsonProperty("tickettype_group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_group_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RequestType_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("default_sla", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_sla { get; set; } 

        [JsonProperty("default_sla_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Default_sla_guid { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("jira_issue_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_issue_type { get; set; } 

        [JsonProperty("ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_count { get; set; } 

        [JsonProperty("cancreate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cancreate { get; set; } 

        [JsonProperty("agentscanselect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Agentscanselect { get; set; } 

        [JsonProperty("itilrequesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itilrequesttype { get; set; } 

        [JsonProperty("allowattachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowattachments { get; set; } 

        [JsonProperty("copyattachmentstochild", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copyattachmentstochild { get; set; } 

        [JsonProperty("copyattachmentstorelated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Copyattachmentstorelated { get; set; } 

        [JsonProperty("is_sprint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_sprint { get; set; } 

        [JsonProperty("fieldidlist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<int>? Fieldidlist { get; set; } 

        [JsonProperty("enduserscanselect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enduserscanselect { get; set; } 

        [JsonProperty("anonymouscanselect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Anonymouscanselect { get; set; } 

        [JsonProperty("hasmandatorytechfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hasmandatorytechfields { get; set; } 

        [JsonProperty("hasmandatoryuserfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hasmandatoryuserfields { get; set; } 

        [JsonProperty("project_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Project_type { get; set; } 

        [JsonProperty("kanbanstatuschoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Kanbanstatuschoice { get; set; } 

        [JsonProperty("kanbanstatuschoice_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kanbanstatuschoice_list { get; set; } 

        [JsonProperty("email_start_tag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_start_tag { get; set; } 

        [JsonProperty("email_end_tag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_end_tag { get; set; } 

        [JsonProperty("default_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_agent { get; set; } 

        [JsonProperty("default_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_agent_name { get; set; } 

        [JsonProperty("default_team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_team { get; set; } 

        [JsonProperty("workflow_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workflow_name { get; set; } 

        [JsonProperty("overridewiththefollowingtemplatewhenloggingmanuallyname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Overridewiththefollowingtemplatewhenloggingmanuallyname { get; set; } 

        [JsonProperty("default_priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_priority { get; set; } 

        [JsonProperty("visible", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Visible { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Restriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("key1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key1 { get; set; } 

        [JsonProperty("key1_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key1_name { get; set; } 

        [JsonProperty("key2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key2 { get; set; } 

        [JsonProperty("key2_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Key2_guid { get; set; } 

        [JsonProperty("key2_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key2_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class RoundRobinLog
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("assign_datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Assign_datetime { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SOCCreateIncident
    {
        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Details { get; set; } 

        [JsonProperty("userName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UserName { get; set; } 

        [JsonProperty("isMultiResponder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsMultiResponder { get; set; } 

        [JsonProperty("targets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SOCCreateIncidentTarget>? Targets { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SOCCreateIncidentTarget
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("slug", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Slug { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SOCWebhook
    {
        [JsonProperty("phase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phase { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_id { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Details { get; set; } 

        [JsonProperty("incident", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Incident { get; set; } 

        [JsonProperty("last_timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Last_timestamp { get; set; } 

        [JsonProperty("ack_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Ack_at { get; set; } 

        [JsonProperty("ack_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ack_by { get; set; } 

        [JsonProperty("ack_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ack_message { get; set; } 

        [JsonProperty("resolved_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Resolved_at { get; set; } 

        [JsonProperty("resolved_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resolved_by { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("resourceObject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? ResourceObject { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SQLImport
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Table { get; set; } 

        [JsonProperty("udlpath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Udlpath { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("sql", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql { get; set; } 

        [JsonProperty("keyfield", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Keyfield { get; set; } 

        [JsonProperty("datafield1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datafield1 { get; set; } 

        [JsonProperty("datafield2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datafield2 { get; set; } 

        [JsonProperty("datafield3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datafield3 { get; set; } 

        [JsonProperty("datafield4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datafield4 { get; set; } 

        [JsonProperty("defaultsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultsite { get; set; } 

        [JsonProperty("defaultsitename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultsitename { get; set; } 

        [JsonProperty("lastrundate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastrundate { get; set; } 

        [JsonProperty("nhdfield3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nhdfield3 { get; set; } 

        [JsonProperty("updateonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Updateonly { get; set; } 

        [JsonProperty("integrator_enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Integrator_enabled { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SQLImportField>? Fields { get; set; } 

        [JsonProperty("sqlserver", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sqlserver { get; set; } 

        [JsonProperty("sqldatabase", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sqldatabase { get; set; } 

        [JsonProperty("sqlusername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sqlusername { get; set; } 

        [JsonProperty("sisqlpassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sisqlpassword { get; set; } 

        [JsonProperty("new_sql_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_sql_password { get; set; } 

        [JsonProperty("useusers_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Useusers_site { get; set; } 

        [JsonProperty("dontupdatesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontupdatesite { get; set; } 

        [JsonProperty("dontremoveusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontremoveusers { get; set; } 

        [JsonProperty("canupdaterecords", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canupdaterecords { get; set; } 

        [JsonProperty("syncto3party", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Syncto3party { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("halointegrator_allowed_clientids_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Halointegrator_allowed_clientids_list { get; set; } 

        [JsonProperty("halointegrator_allowed_clientids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_allowed_clientids { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("allow_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_access { get; set; } 

        [JsonProperty("include_linux_software", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Include_linux_software { get; set; } 

        [JsonProperty("dontupdatetoplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontupdatetoplevel { get; set; } 

        [JsonProperty("donotvalidate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Donotvalidate { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Assetimportidentifier_guid { get; set; } 

        [JsonProperty("assetimportidentifier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_name { get; set; } 

        [JsonProperty("sql_provider", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sql_provider { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("sql_driver", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_driver { get; set; } 

        [JsonProperty("dontupdatetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontupdatetype { get; set; } 

        [JsonProperty("sql_timeout", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sql_timeout { get; set; } 

        [JsonProperty("sql_port", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_port { get; set; } 

        [JsonProperty("import_table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_table { get; set; } 

        [JsonProperty("import_table_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_table_name { get; set; } 

        [JsonProperty("entity_match_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_match_field { get; set; } 

        [JsonProperty("table_matching_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_matching_field { get; set; } 

        [JsonProperty("table_matching_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Table_matching_field_name { get; set; } 

        [JsonProperty("linkto_table_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linkto_table_id { get; set; } 

        [JsonProperty("table_update_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Table_update_type { get; set; } 

        [JsonProperty("match_accountsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Match_accountsid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SQLImportField
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("siid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Siid { get; set; } 

        [JsonProperty("thirdpartyname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyname { get; set; } 

        [JsonProperty("nhdname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nhdname { get; set; } 

        [JsonProperty("is_site_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_site_field { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class STDToDo
    {
        [JsonProperty("template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Template_id { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("allowed_clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaToDo>? Allowed_clients { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ToDoGroup? Group { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("group_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_seq { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class STDrequestbudget
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Template_id { get; set; } 

        [JsonProperty("hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours { get; set; } 

        [JsonProperty("days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Days { get; set; } 

        [JsonProperty("rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Rate { get; set; } 

        [JsonProperty("rate_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Rate_days { get; set; } 

        [JsonProperty("budgettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Budgettype_id { get; set; } 

        [JsonProperty("budgettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Budgettype_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SageBusinessCloudDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("tokenexpiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Tokenexpiry { get; set; } 

        [JsonProperty("isauthorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isauthorized { get; set; } 

        [JsonProperty("redirecturi", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirecturi { get; set; } 

        [JsonProperty("clienttoplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clienttoplevel { get; set; } 

        [JsonProperty("itemgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itemgroup { get; set; } 

        [JsonProperty("enablesync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enablesync { get; set; } 

        [JsonProperty("defaultitemcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultitemcode { get; set; } 

        [JsonProperty("showmessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showmessage { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("syncentities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Syncentities { get; set; } 

        [JsonProperty("sbcdnewmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sbcdnewmethod { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_group_name { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("client_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_top_level_name { get; set; } 

        [JsonProperty("sync_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sync_entities_list { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("client_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_mappings { get; set; } 

        [JsonProperty("item_group_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Item_group_mappings { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SalesMailbox
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("tenantid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenantid { get; set; } 

        [JsonProperty("applicationid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Applicationid { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

        [JsonProperty("halointegrator_enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegrator_enabled { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("redirect_uri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirect_uri { get; set; } 

        [JsonProperty("_authcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _authcode { get; set; } 

        [JsonProperty("_exchangecodefortoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecodefortoken { get; set; } 

        [JsonProperty("mailboxes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SalesMailboxDetail>? Mailboxes { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("google_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Google_authorized { get; set; } 

        [JsonProperty("new_google_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_google_access_token { get; set; } 

        [JsonProperty("new_google_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_google_refresh_token { get; set; } 

        [JsonProperty("google_token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Google_token_expiry { get; set; } 

        [JsonProperty("google_redirect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Google_redirect { get; set; } 

        [JsonProperty("google_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Google_email { get; set; } 

        [JsonProperty("_getgoogletoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _getgoogletoken { get; set; } 

        [JsonProperty("google_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Google_code { get; set; } 

        [JsonProperty("google_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Google_type { get; set; } 

        [JsonProperty("graph_host", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Graph_host { get; set; } 

        [JsonProperty("import_sent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Import_sent { get; set; } 

        [JsonProperty("match_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Match_method { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SalesMailboxDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("smid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Smid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("enableautomatching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableautomatching { get; set; } 

        [JsonProperty("lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsync { get; set; } 

        [JsonProperty("sentlastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Sentlastsync { get; set; } 

        [JsonProperty("lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lasterror { get; set; } 

        [JsonProperty("_hasAccess", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _hasAccess { get; set; } 

        [JsonProperty("google_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Google_authorized { get; set; } 

        [JsonProperty("new_google_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_google_access_token { get; set; } 

        [JsonProperty("new_google_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_google_refresh_token { get; set; } 

        [JsonProperty("google_token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Google_token_expiry { get; set; } 

        [JsonProperty("google_redirect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Google_redirect { get; set; } 

        [JsonProperty("_getgoogletoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _getgoogletoken { get; set; } 

        [JsonProperty("agent_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_email { get; set; } 

        [JsonProperty("_authcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _authcode { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("applicationid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Applicationid { get; set; } 

        [JsonProperty("linked_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_agent { get; set; } 

        [JsonProperty("linked_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_agent_name { get; set; } 

        [JsonProperty("linked_agent_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_agent_email { get; set; } 

        [JsonProperty("match_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Match_type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Schedule
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Hours { get; set; } 

        [JsonProperty("dailyrecurrencepattern", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dailyrecurrencepattern { get; set; } 

        [JsonProperty("dailyrecurrencedays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dailyrecurrencedays { get; set; } 

        [JsonProperty("weeklyrecurrenceweeks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Weeklyrecurrenceweeks { get; set; } 

        [JsonProperty("endafteramount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Endafteramount { get; set; } 

        [JsonProperty("rangeofrecurrence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rangeofrecurrence { get; set; } 

        [JsonProperty("requesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requesttype { get; set; } 

        [JsonProperty("recurrencepattern", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recurrencepattern { get; set; } 

        [JsonProperty("agentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agentid { get; set; } 

        [JsonProperty("monthlyrecurrencepattern", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Monthlyrecurrencepattern { get; set; } 

        [JsonProperty("yearlyrecurrencepattern", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yearlyrecurrencepattern { get; set; } 

        [JsonProperty("monthlyrecurrencespecificdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Monthlyrecurrencespecificdate { get; set; } 

        [JsonProperty("monthlyrecurrencespecificdateinterval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Monthlyrecurrencespecificdateinterval { get; set; } 

        [JsonProperty("monthlyrecurrencespecificday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Monthlyrecurrencespecificday { get; set; } 

        [JsonProperty("monthlyrecurrencespecificdayofweek", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Monthlyrecurrencespecificdayofweek { get; set; } 

        [JsonProperty("monthlyrecurrencespecificdayinterval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Monthlyrecurrencespecificdayinterval { get; set; } 

        [JsonProperty("yearlyrecurrencespecificdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yearlyrecurrencespecificdate { get; set; } 

        [JsonProperty("yearlyrecurrencespecificdatemonth", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yearlyrecurrencespecificdatemonth { get; set; } 

        [JsonProperty("yearlyrecurrencespecificdateinterval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yearlyrecurrencespecificdateinterval { get; set; } 

        [JsonProperty("yearlyrecurrencespecificday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yearlyrecurrencespecificday { get; set; } 

        [JsonProperty("yearlyrecurrencespecificdayofweek", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yearlyrecurrencespecificdayofweek { get; set; } 

        [JsonProperty("yearlyrecurrencespecificdaymonth", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yearlyrecurrencespecificdaymonth { get; set; } 

        [JsonProperty("yearlyrecurrencespecificdayinterval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yearlyrecurrencespecificdayinterval { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("uniqueid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uniqueid { get; set; } 

        [JsonProperty("weeklyrecurrencestring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Weeklyrecurrencestring { get; set; } 

        [JsonProperty("nextcreationdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextcreationdate { get; set; } 

        [JsonProperty("nextrundate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextrundate { get; set; } 

        [JsonProperty("contract_schedule_plan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ContractSchedulePlan>? Contract_schedule_plan { get; set; } 

        [JsonProperty("weeklyrecurrenceamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Weeklyrecurrenceamount { get; set; } 

        [JsonProperty("_validateonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _validateonly { get; set; } 

        [JsonProperty("events", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Appointment>? Events { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ScreenLayout
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("usage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Usage { get; set; } 

        [JsonProperty("tab_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_display { get; set; } 

        [JsonProperty("tab_config", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TabConfig>? Tab_config { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("field1_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field1_visibility { get; set; } 

        [JsonProperty("field2_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field2_visibility { get; set; } 

        [JsonProperty("field3_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field3_visibility { get; set; } 

        [JsonProperty("field4_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field4_visibility { get; set; } 

        [JsonProperty("field5_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field5_visibility { get; set; } 

        [JsonProperty("field6_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field6_visibility { get; set; } 

        [JsonProperty("field7_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field7_visibility { get; set; } 

        [JsonProperty("field8_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field8_visibility { get; set; } 

        [JsonProperty("field1_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field1_tab { get; set; } 

        [JsonProperty("field2_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field2_tab { get; set; } 

        [JsonProperty("field3_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field3_tab { get; set; } 

        [JsonProperty("field4_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field4_tab { get; set; } 

        [JsonProperty("field5_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field5_tab { get; set; } 

        [JsonProperty("field6_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field6_tab { get; set; } 

        [JsonProperty("field7_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field7_tab { get; set; } 

        [JsonProperty("field8_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field8_tab { get; set; } 

        [JsonProperty("field9_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field9_tab { get; set; } 

        [JsonProperty("field10_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field10_tab { get; set; } 

        [JsonProperty("field1_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field1_tab_name { get; set; } 

        [JsonProperty("field2_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field2_tab_name { get; set; } 

        [JsonProperty("field3_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field3_tab_name { get; set; } 

        [JsonProperty("field4_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field4_tab_name { get; set; } 

        [JsonProperty("field5_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field5_tab_name { get; set; } 

        [JsonProperty("field6_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field6_tab_name { get; set; } 

        [JsonProperty("field7_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field7_tab_name { get; set; } 

        [JsonProperty("field8_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field8_tab_name { get; set; } 

        [JsonProperty("field9_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field9_tab_name { get; set; } 

        [JsonProperty("field10_tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field10_tab_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ScriptChoice
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("script_question_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Script_question_id { get; set; } 

        [JsonProperty("choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Choice { get; set; } 

        [JsonProperty("next_question_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Next_question_id { get; set; } 

        [JsonProperty("sort_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sort_seq { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ScriptHeader
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("category_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_1 { get; set; } 

        [JsonProperty("questions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ScriptLine>? Questions { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ScriptLine
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("script_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Script_id { get; set; } 

        [JsonProperty("sort_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sort_seq { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("question", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Question { get; set; } 

        [JsonProperty("next_question_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Next_question_id { get; set; } 

        [JsonProperty("update_field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Update_field_id { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("input_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Input_type { get; set; } 

        [JsonProperty("temp_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Temp_id { get; set; } 

        [JsonProperty("choices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ScriptChoice>? Choices { get; set; } 

        [JsonProperty("verification_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldInfo>? Verification_fields { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SectionDetail
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("forrequests", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Forrequests { get; set; } 

        [JsonProperty("foropps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Foropps { get; set; } 

        [JsonProperty("forprojects", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Forprojects { get; set; } 

        [JsonProperty("ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_count { get; set; } 

        [JsonProperty("department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Department_id { get; set; } 

        [JsonProperty("department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Department_name { get; set; } 

        [JsonProperty("org_team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Org_team_name { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("override_column_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_column_id { get; set; } 

        [JsonProperty("managers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Manager>? Managers { get; set; } 

        [JsonProperty("teamphotopath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teamphotopath { get; set; } 

        [JsonProperty("last_modified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_modified { get; set; } 

        [JsonProperty("hide_agents_in_tree_if_no_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_agents_in_tree_if_no_tickets { get; set; } 

        [JsonProperty("timesheet_approver", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Timesheet_approver { get; set; } 

        [JsonProperty("timesheet_approver_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timesheet_approver_name { get; set; } 

        [JsonProperty("concurrent_lic_limit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Concurrent_lic_limit { get; set; } 

        [JsonProperty("workinghoursbeforealert", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Workinghoursbeforealert { get; set; } 

        [JsonProperty("emailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress { get; set; } 

        [JsonProperty("addtoallagents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Addtoallagents { get; set; } 

        [JsonProperty("allowlivechat", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowlivechat { get; set; } 

        [JsonProperty("rtid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rtid { get; set; } 

        [JsonProperty("mailbox_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_override { get; set; } 

        [JsonProperty("agents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameSection>? Agents { get; set; } 

        [JsonProperty("organisation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Organisation_id { get; set; } 

        [JsonProperty("cannedtext", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CannedText>? Cannedtext { get; set; } 

        [JsonProperty("templates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StdRequest_List>? Templates { get; set; } 

        [JsonProperty("allowall_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category1 { get; set; } 

        [JsonProperty("allowed_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category1 { get; set; } 

        [JsonProperty("allowall_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category2 { get; set; } 

        [JsonProperty("allowed_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category2 { get; set; } 

        [JsonProperty("allowall_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category3 { get; set; } 

        [JsonProperty("allowed_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category3 { get; set; } 

        [JsonProperty("allowall_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category4 { get; set; } 

        [JsonProperty("includeinloadbalance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includeinloadbalance { get; set; } 

        [JsonProperty("allowed_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category4 { get; set; } 

        [JsonProperty("override_column_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_column_name { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate { get; set; } 

        [JsonProperty("_canupdate2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate2 { get; set; } 

        [JsonProperty("main_email_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Main_email_address { get; set; } 

        [JsonProperty("phone_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone_number { get; set; } 

        [JsonProperty("timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timezone { get; set; } 

        [JsonProperty("alternative_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alternative_name { get; set; } 

        [JsonProperty("logo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logo { get; set; } 

        [JsonProperty("dontsendsurvey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsendsurvey { get; set; } 

        [JsonProperty("team_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_note { get; set; } 

        [JsonProperty("booking_workday_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Booking_workday_id { get; set; } 

        [JsonProperty("booking_workday_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Booking_workday_name { get; set; } 

        [JsonProperty("recurring_shifts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Appointment_List>? Recurring_shifts { get; set; } 

        [JsonProperty("third_party_migration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_migration_id { get; set; } 

        [JsonProperty("enable_teams_shifts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_teams_shifts { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("department_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Department_guid { get; set; } 

        [JsonProperty("homescreendashboardid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Homescreendashboardid { get; set; } 

        [JsonProperty("homescreendashboardname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Homescreendashboardname { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SectionDetail_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("forrequests", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Forrequests { get; set; } 

        [JsonProperty("foropps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Foropps { get; set; } 

        [JsonProperty("forprojects", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Forprojects { get; set; } 

        [JsonProperty("ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_count { get; set; } 

        [JsonProperty("department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Department_id { get; set; } 

        [JsonProperty("department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Department_name { get; set; } 

        [JsonProperty("org_team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Org_team_name { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("override_column_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_column_id { get; set; } 

        [JsonProperty("agents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Uname_List>? Agents { get; set; } 

        [JsonProperty("managers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Manager>? Managers { get; set; } 

        [JsonProperty("teamphotopath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teamphotopath { get; set; } 

        [JsonProperty("last_modified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_modified { get; set; } 

        [JsonProperty("hide_agents_in_tree_if_no_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_agents_in_tree_if_no_tickets { get; set; } 

        [JsonProperty("timesheet_approver", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Timesheet_approver { get; set; } 

        [JsonProperty("timesheet_approver_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timesheet_approver_name { get; set; } 

        [JsonProperty("concurrent_lic_limit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Concurrent_lic_limit { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("department_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Department_guid { get; set; } 

        [JsonProperty("homescreendashboardid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Homescreendashboardid { get; set; } 

        [JsonProperty("homescreendashboardname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Homescreendashboardname { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SectionRequestType
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("section_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Section_id { get; set; } 

        [JsonProperty("section_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Section_name { get; set; } 

        [JsonProperty("allowedteamsrestriction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowedteamsrestriction { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SecurityQuestion
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("answer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Answer { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServSite
    {
        [JsonProperty("sendemailtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sendemailtype { get; set; } 

        [JsonProperty("email_subscriber_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Email_subscriber_count { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("showinusercatalog", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showinusercatalog { get; set; } 

        [JsonProperty("showintechcatalog", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showintechcatalog { get; set; } 

        [JsonProperty("trackstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Trackstatus { get; set; } 

        [JsonProperty("service_category_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_category_id { get; set; } 

        [JsonProperty("service_category_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Service_category_guid { get; set; } 

        [JsonProperty("service_category_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_category_name { get; set; } 

        [JsonProperty("business_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Business_owner_id { get; set; } 

        [JsonProperty("business_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_name { get; set; } 

        [JsonProperty("business_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Business_owner_cab_id { get; set; } 

        [JsonProperty("business_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_cab_name { get; set; } 

        [JsonProperty("technical_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technical_owner_id { get; set; } 

        [JsonProperty("technical_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner_name { get; set; } 

        [JsonProperty("technical_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technical_owner_cab_id { get; set; } 

        [JsonProperty("technical_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner_cab_name { get; set; } 

        [JsonProperty("compliance_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Compliance_owner_id { get; set; } 

        [JsonProperty("compliance_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Compliance_owner_name { get; set; } 

        [JsonProperty("compliance_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Compliance_owner_cab_id { get; set; } 

        [JsonProperty("compliance_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Compliance_owner_cab_name { get; set; } 

        [JsonProperty("cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Cost { get; set; } 

        [JsonProperty("estimated_delivery", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Estimated_delivery { get; set; } 

        [JsonProperty("estimated_delivery_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Estimated_delivery_days { get; set; } 

        [JsonProperty("subscribable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Subscribable { get; set; } 

        [JsonProperty("subscriber_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Subscriber_count { get; set; } 

        [JsonProperty("asset_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_count { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("assettype_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_ids { get; set; } 

        [JsonProperty("current_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Current_status { get; set; } 

        [JsonProperty("status_message_update_internal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_message_update_internal { get; set; } 

        [JsonProperty("status_message_update_public", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_message_update_public { get; set; } 

        [JsonProperty("using_default_public_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Using_default_public_message { get; set; } 

        [JsonProperty("status_ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_ticket_id { get; set; } 

        [JsonProperty("status_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_date { get; set; } 

        [JsonProperty("service_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_tickettype_id { get; set; } 

        [JsonProperty("serviceshownewreqscreen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Serviceshownewreqscreen { get; set; } 

        [JsonProperty("service_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_template_id { get; set; } 

        [JsonProperty("newservicereqtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newservicereqtype { get; set; } 

        [JsonProperty("incident_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Incident_tickettype_id { get; set; } 

        [JsonProperty("incident_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Incident_template_id { get; set; } 

        [JsonProperty("newincidenttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newincidenttype { get; set; } 

        [JsonProperty("relatedworkdayid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relatedworkdayid { get; set; } 

        [JsonProperty("status_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_end_date { get; set; } 

        [JsonProperty("status_ticket_start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_ticket_start_date { get; set; } 

        [JsonProperty("status_ticket_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_ticket_end_date { get; set; } 

        [JsonProperty("requestdetails_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestdetails_count { get; set; } 

        [JsonProperty("requestdetails_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestdetails_id { get; set; } 

        [JsonProperty("requestdetail_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestdetail_url { get; set; } 

        [JsonProperty("requestdetail_shownewreqscreen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Requestdetail_shownewreqscreen { get; set; } 

        [JsonProperty("requestdetail_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestdetail_type { get; set; } 

        [JsonProperty("screenafterlogging", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Screenafterlogging { get; set; } 

        [JsonProperty("pricingrange", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Pricingrange { get; set; } 

        [JsonProperty("override_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_site_id { get; set; } 

        [JsonProperty("failcreaterequest", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Failcreaterequest { get; set; } 

        [JsonProperty("workdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workdays { get; set; } 

        [JsonProperty("checkminutes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Checkminutes { get; set; } 

        [JsonProperty("failalwaysnewrequest", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Failalwaysnewrequest { get; set; } 

        [JsonProperty("criticality", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Criticality { get; set; } 

        [JsonProperty("search_score", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Search_score { get; set; } 

        [JsonProperty("device_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_id { get; set; } 

        [JsonProperty("override_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_site_name { get; set; } 

        [JsonProperty("override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override { get; set; } 

        [JsonProperty("checkmon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Checkmon { get; set; } 

        [JsonProperty("checktue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Checktue { get; set; } 

        [JsonProperty("checkwed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Checkwed { get; set; } 

        [JsonProperty("checkthu", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Checkthu { get; set; } 

        [JsonProperty("checkfri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Checkfri { get; set; } 

        [JsonProperty("checksat", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Checksat { get; set; } 

        [JsonProperty("checksun", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Checksun { get; set; } 

        [JsonProperty("servicekind", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicekind { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("param1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Param1 { get; set; } 

        [JsonProperty("param2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Param2 { get; set; } 

        [JsonProperty("param3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Param3 { get; set; } 

        [JsonProperty("min", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Min { get; set; } 

        [JsonProperty("max", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Max { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("pop3serverid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pop3serverid { get; set; } 

        [JsonProperty("pop3serverid_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pop3serverid_name { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("body", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Body { get; set; } 

        [JsonProperty("fromaddr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fromaddr { get; set; } 

        [JsonProperty("toaddr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Toaddr { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("oksubject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oksubject { get; set; } 

        [JsonProperty("okbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Okbody { get; set; } 

        [JsonProperty("okfromaddr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Okfromaddr { get; set; } 

        [JsonProperty("oktoaddr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oktoaddr { get; set; } 

        [JsonProperty("okany", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Okany { get; set; } 

        [JsonProperty("failsubject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Failsubject { get; set; } 

        [JsonProperty("failbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Failbody { get; set; } 

        [JsonProperty("failfromaddr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Failfromaddr { get; set; } 

        [JsonProperty("failtoaddr", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Failtoaddr { get; set; } 

        [JsonProperty("failany", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Failany { get; set; } 

        [JsonProperty("wdid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Wdid { get; set; } 

        [JsonProperty("cat2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cat2 { get; set; } 

        [JsonProperty("workdays_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workdays_name { get; set; } 

        [JsonProperty("photopath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Photopath { get; set; } 

        [JsonProperty("allowincidients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowincidients { get; set; } 

        [JsonProperty("allowoptin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowoptin { get; set; } 

        [JsonProperty("service_tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_tickettype_name { get; set; } 

        [JsonProperty("service_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_template_name { get; set; } 

        [JsonProperty("incident_tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Incident_tickettype_name { get; set; } 

        [JsonProperty("incident_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Incident_template_name { get; set; } 

        [JsonProperty("autoemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autoemail { get; set; } 

        [JsonProperty("servicedetailshtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicedetailshtml { get; set; } 

        [JsonProperty("alsosubscribe", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Alsosubscribe { get; set; } 

        [JsonProperty("allowunsubscribe", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowunsubscribe { get; set; } 

        [JsonProperty("allowservicerequests", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowservicerequests { get; set; } 

        [JsonProperty("userlevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userlevel { get; set; } 

        [JsonProperty("showonmyservicespage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonmyservicespage { get; set; } 

        [JsonProperty("assettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_name { get; set; } 

        [JsonProperty("smsmessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Smsmessage { get; set; } 

        [JsonProperty("servicerequestlbl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicerequestlbl { get; set; } 

        [JsonProperty("servicerequesthint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Servicerequesthint { get; set; } 

        [JsonProperty("incidentlbl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Incidentlbl { get; set; } 

        [JsonProperty("incidenthint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Incidenthint { get; set; } 

        [JsonProperty("allowall_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category1 { get; set; } 

        [JsonProperty("allowed_category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category1 { get; set; } 

        [JsonProperty("allowall_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category2 { get; set; } 

        [JsonProperty("allowed_category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category2 { get; set; } 

        [JsonProperty("allowall_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category3 { get; set; } 

        [JsonProperty("allowed_category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category3 { get; set; } 

        [JsonProperty("allowall_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_category4 { get; set; } 

        [JsonProperty("allowed_category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CategoryRestriction>? Allowed_category4 { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("unsubscribe_ticketortemplate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unsubscribe_ticketortemplate { get; set; } 

        [JsonProperty("unsubscribe_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unsubscribe_tickettype_id { get; set; } 

        [JsonProperty("unsubscribe_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unsubscribe_template_id { get; set; } 

        [JsonProperty("create_on_unsubscribe", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_on_unsubscribe { get; set; } 

        [JsonProperty("unsubscribe_all", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Unsubscribe_all { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_name { get; set; } 

        [JsonProperty("template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Template_name { get; set; } 

        [JsonProperty("recent_servicerequest_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recent_servicerequest_count { get; set; } 

        [JsonProperty("recent_incident_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Recent_incident_count { get; set; } 

        [JsonProperty("open_incident_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_incident_count { get; set; } 

        [JsonProperty("open_servicerequest_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_servicerequest_count { get; set; } 

        [JsonProperty("user_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServiceRestriction>? User_access { get; set; } 

        [JsonProperty("subscribers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServiceUser>? Subscribers { get; set; } 

        [JsonProperty("linked_services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServiceLinks>? Linked_services { get; set; } 

        [JsonProperty("assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Assets { get; set; } 

        [JsonProperty("update_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_status { get; set; } 

        [JsonProperty("user_subscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? User_subscribed { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Users? User { get; set; } 

        [JsonProperty("emailtemplate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailtemplate { get; set; } 

        [JsonProperty("send_service_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Send_service_email { get; set; } 

        [JsonProperty("preview_service_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Preview_service_email { get; set; } 

        [JsonProperty("service_email_from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_email_from { get; set; } 

        [JsonProperty("service_email_subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_email_subject { get; set; } 

        [JsonProperty("service_email_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_email_html { get; set; } 

        [JsonProperty("allowfollowfault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowfollowfault { get; set; } 

        [JsonProperty("status_subscribedtoupdates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Status_subscribedtoupdates { get; set; } 

        [JsonProperty("unsubcount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unsubcount { get; set; } 

        [JsonProperty("new_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_icon { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("showinrelatedservices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showinrelatedservices { get; set; } 

        [JsonProperty("user_canunsubscribe", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? User_canunsubscribe { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("optional_services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServiceOption>? Optional_services { get; set; } 

        [JsonProperty("isservicedetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isservicedetails { get; set; } 

        [JsonProperty("statushistoryportal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Statushistoryportal { get; set; } 

        [JsonProperty("status_history", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServStatus>? Status_history { get; set; } 

        [JsonProperty("service_request_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServiceRequestDetails>? Service_request_details { get; set; } 

        [JsonProperty("device_child_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_child_id { get; set; } 

        [JsonProperty("device_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_count { get; set; } 

        [JsonProperty("incidentonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incidentonly { get; set; } 

        [JsonProperty("cat_phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cat_phonenumber { get; set; } 

        [JsonProperty("kbs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KBEntry_List>? Kbs { get; set; } 

        [JsonProperty("search_index_sync_timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Search_index_sync_timestamp { get; set; } 

        [JsonProperty("search_index_sync_batches", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Search_index_sync_batches { get; set; } 

        [JsonProperty("preview_when_logging", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Preview_when_logging { get; set; } 

        [JsonProperty("tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tag>? Tags { get; set; } 

        [JsonProperty("track_availability", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Track_availability { get; set; } 

        [JsonProperty("tracking_period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tracking_period { get; set; } 

        [JsonProperty("tracking_target", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tracking_target { get; set; } 

        [JsonProperty("delay_avilability_calc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Delay_avilability_calc { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("relatedworkdayid_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Relatedworkdayid_name { get; set; } 

        [JsonProperty("relatedworkdayid_content", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Relatedworkdayid_content { get; set; } 

        [JsonProperty("status_message_update_internal_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_message_update_internal_html { get; set; } 

        [JsonProperty("status_message_update_public_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_message_update_public_html { get; set; } 

        [JsonProperty("future_statuses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Int32NullableStringDateTimeNullableInt32NullableTuple>? Future_statuses { get; set; } 

        [JsonProperty("current_statuses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Int32NullableStringDateTimeNullableInt32NullableDateTimeNullableTuple>? Current_statuses { get; set; } 

        [JsonProperty("service_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_url { get; set; } 

        [JsonProperty("incident_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Incident_url { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Link { get; set; } 

        [JsonProperty("tag_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tag_string { get; set; } 

        [JsonProperty("device_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Device_guid { get; set; } 

        [JsonProperty("device_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Device_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServSite_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("showinusercatalog", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showinusercatalog { get; set; } 

        [JsonProperty("showintechcatalog", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showintechcatalog { get; set; } 

        [JsonProperty("trackstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Trackstatus { get; set; } 

        [JsonProperty("service_category_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_category_id { get; set; } 

        [JsonProperty("service_category_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Service_category_guid { get; set; } 

        [JsonProperty("service_category_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_category_name { get; set; } 

        [JsonProperty("business_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Business_owner_id { get; set; } 

        [JsonProperty("business_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_name { get; set; } 

        [JsonProperty("business_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Business_owner_cab_id { get; set; } 

        [JsonProperty("business_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_owner_cab_name { get; set; } 

        [JsonProperty("technical_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technical_owner_id { get; set; } 

        [JsonProperty("technical_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner_name { get; set; } 

        [JsonProperty("technical_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technical_owner_cab_id { get; set; } 

        [JsonProperty("technical_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Technical_owner_cab_name { get; set; } 

        [JsonProperty("compliance_owner_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Compliance_owner_id { get; set; } 

        [JsonProperty("compliance_owner_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Compliance_owner_name { get; set; } 

        [JsonProperty("compliance_owner_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Compliance_owner_cab_id { get; set; } 

        [JsonProperty("compliance_owner_cab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Compliance_owner_cab_name { get; set; } 

        [JsonProperty("cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Cost { get; set; } 

        [JsonProperty("estimated_delivery", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Estimated_delivery { get; set; } 

        [JsonProperty("estimated_delivery_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Estimated_delivery_days { get; set; } 

        [JsonProperty("subscribable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Subscribable { get; set; } 

        [JsonProperty("subscriber_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Subscriber_count { get; set; } 

        [JsonProperty("asset_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_count { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("assettype_ids", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_ids { get; set; } 

        [JsonProperty("current_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Current_status { get; set; } 

        [JsonProperty("status_message_update_internal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_message_update_internal { get; set; } 

        [JsonProperty("status_message_update_public", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_message_update_public { get; set; } 

        [JsonProperty("using_default_public_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Using_default_public_message { get; set; } 

        [JsonProperty("status_ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_ticket_id { get; set; } 

        [JsonProperty("status_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_date { get; set; } 

        [JsonProperty("service_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_tickettype_id { get; set; } 

        [JsonProperty("serviceshownewreqscreen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Serviceshownewreqscreen { get; set; } 

        [JsonProperty("service_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_template_id { get; set; } 

        [JsonProperty("newservicereqtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newservicereqtype { get; set; } 

        [JsonProperty("incident_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Incident_tickettype_id { get; set; } 

        [JsonProperty("incident_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Incident_template_id { get; set; } 

        [JsonProperty("newincidenttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newincidenttype { get; set; } 

        [JsonProperty("relatedworkdayid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relatedworkdayid { get; set; } 

        [JsonProperty("status_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_end_date { get; set; } 

        [JsonProperty("status_ticket_start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_ticket_start_date { get; set; } 

        [JsonProperty("status_ticket_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_ticket_end_date { get; set; } 

        [JsonProperty("requestdetails_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestdetails_count { get; set; } 

        [JsonProperty("requestdetails_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestdetails_id { get; set; } 

        [JsonProperty("requestdetail_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestdetail_url { get; set; } 

        [JsonProperty("requestdetail_shownewreqscreen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Requestdetail_shownewreqscreen { get; set; } 

        [JsonProperty("requestdetail_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requestdetail_type { get; set; } 

        [JsonProperty("screenafterlogging", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Screenafterlogging { get; set; } 

        [JsonProperty("pricingrange", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Pricingrange { get; set; } 

        [JsonProperty("override_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_site_id { get; set; } 

        [JsonProperty("failcreaterequest", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Failcreaterequest { get; set; } 

        [JsonProperty("workdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workdays { get; set; } 

        [JsonProperty("checkminutes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Checkminutes { get; set; } 

        [JsonProperty("failalwaysnewrequest", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Failalwaysnewrequest { get; set; } 

        [JsonProperty("criticality", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Criticality { get; set; } 

        [JsonProperty("search_score", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Search_score { get; set; } 

        [JsonProperty("device_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("relatedworkdayid_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Relatedworkdayid_name { get; set; } 

        [JsonProperty("relatedworkdayid_content", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Relatedworkdayid_content { get; set; } 

        [JsonProperty("status_message_update_internal_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_message_update_internal_html { get; set; } 

        [JsonProperty("status_message_update_public_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_message_update_public_html { get; set; } 

        [JsonProperty("future_statuses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Int32NullableStringDateTimeNullableInt32NullableTuple>? Future_statuses { get; set; } 

        [JsonProperty("current_statuses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Int32NullableStringDateTimeNullableInt32NullableDateTimeNullableTuple>? Current_statuses { get; set; } 

        [JsonProperty("service_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_url { get; set; } 

        [JsonProperty("incident_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Incident_url { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Link { get; set; } 

        [JsonProperty("tag_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tag_string { get; set; } 

        [JsonProperty("device_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Device_guid { get; set; } 

        [JsonProperty("device_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Device_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServStatus
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("message_internal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message_internal { get; set; } 

        [JsonProperty("message_public", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message_public { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("who", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Who { get; set; } 

        [JsonProperty("lastcheck", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastcheck { get; set; } 

        [JsonProperty("lastok", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastok { get; set; } 

        [JsonProperty("lastfailed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastfailed { get; set; } 

        [JsonProperty("okcount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Okcount { get; set; } 

        [JsonProperty("failedcount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Failedcount { get; set; } 

        [JsonProperty("lastemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastemail { get; set; } 

        [JsonProperty("totaldownmins", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Totaldownmins { get; set; } 

        [JsonProperty("totaldowninstances", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Totaldowninstances { get; set; } 

        [JsonProperty("message_internal_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message_internal_html { get; set; } 

        [JsonProperty("message_public_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message_public_html { get; set; } 

        [JsonProperty("status_ticket_start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_ticket_start_date { get; set; } 

        [JsonProperty("status_ticket_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Status_ticket_end_date { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("uniqueid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Uniqueid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServStatusSubscribe
    {
        [JsonProperty("service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_id { get; set; } 

        [JsonProperty("subscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Subscribed { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServiceAvailability
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service { get; set; } 

        [JsonProperty("service_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_desc { get; set; } 

        [JsonProperty("period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Period { get; set; } 

        [JsonProperty("percent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percent { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

        [JsonProperty("totalhours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Totalhours { get; set; } 

        [JsonProperty("downhours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Downhours { get; set; } 

        [JsonProperty("targetmet", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Targetmet { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServiceCategory
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("userlevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userlevel { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("important", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Important { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("new_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_icon { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent_id { get; set; } 

        [JsonProperty("parent_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Parent_guid { get; set; } 

        [JsonProperty("parent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parent_name { get; set; } 

        [JsonProperty("grandparent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Grandparent_name { get; set; } 

        [JsonProperty("long_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Long_name { get; set; } 

        [JsonProperty("service_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_count { get; set; } 

        [JsonProperty("user_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServiceRestriction>? User_access { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phonenumber { get; set; } 

        [JsonProperty("portalbackgroundimageurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(500)]
        public string? Portalbackgroundimageurl { get; set; } 

        [JsonProperty("portaldesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Portaldesc { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServiceLinks
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_id { get; set; } 

        [JsonProperty("linked_service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_service_id { get; set; } 

        [JsonProperty("linked_service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_service_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServiceNowAction
    {
        [JsonProperty("sys_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sys_id { get; set; } 

        [JsonProperty("sys_created_on", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sys_created_on { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("element_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Element_id { get; set; } 

        [JsonProperty("sys_tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sys_tags { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("sys_created_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sys_created_by { get; set; } 

        [JsonProperty("element", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Element { get; set; } 

        [JsonProperty("halo_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_key { get; set; } 

        [JsonProperty("halo_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Halo_client_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServiceOption
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_id { get; set; } 

        [JsonProperty("optional_service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_service_id { get; set; } 

        [JsonProperty("optional_service_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Optional_service_guid { get; set; } 

        [JsonProperty("optional_service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_service_name { get; set; } 

        [JsonProperty("sequenceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequenceid { get; set; } 

        [JsonProperty("show_new_req_screen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_new_req_screen { get; set; } 

        [JsonProperty("mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mandatory { get; set; } 

        [JsonProperty("default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default { get; set; } 

        [JsonProperty("expandeddefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Expandeddefault { get; set; } 

        [JsonProperty("include", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Include { get; set; } 

        [JsonProperty("servicerequestdetails_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicerequestdetails_id { get; set; } 

        [JsonProperty("optional_parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_parent_id { get; set; } 

        [JsonProperty("rule_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_count { get; set; } 

        [JsonProperty("creation_rules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StdRequestRule>? Creation_rules { get; set; } 

        [JsonProperty("optional_service_name_short", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_service_name_short { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServiceRequestDetails
    {
        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("servicedetail_servsiteid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicedetail_servsiteid { get; set; } 

        [JsonProperty("servicedetail_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicedetail_type { get; set; } 

        [JsonProperty("servicedetail_requesttypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicedetail_requesttypeid { get; set; } 

        [JsonProperty("servicedetail_requesttypeguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Servicedetail_requesttypeguid { get; set; } 

        [JsonProperty("servicedetail_requesttypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicedetail_requesttypename { get; set; } 

        [JsonProperty("servicedetail_templateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Servicedetail_templateid { get; set; } 

        [JsonProperty("servicedetail_templateguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Servicedetail_templateguid { get; set; } 

        [JsonProperty("servicedetail_templatename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicedetail_templatename { get; set; } 

        [JsonProperty("servicedetail_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicedetail_url { get; set; } 

        [JsonProperty("servicedetail_label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicedetail_label { get; set; } 

        [JsonProperty("servicedetail_hint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicedetail_hint { get; set; } 

        [JsonProperty("servicedetail_shownewreqscreen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Servicedetail_shownewreqscreen { get; set; } 

        [JsonProperty("optional_services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServiceOption>? Optional_services { get; set; } 

        [JsonProperty("sequenceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequenceid { get; set; } 

        [JsonProperty("servicedetail_longname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicedetail_longname { get; set; } 

        [JsonProperty("allow_all_items", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_all_items { get; set; } 

        [JsonProperty("allowed_items", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ItemRestriction>? Allowed_items { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("show_submission_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_submission_summary { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServiceRestriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("service_category_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_category_id { get; set; } 

        [JsonProperty("service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("data_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Data_id { get; set; } 

        [JsonProperty("svrdata_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Svrdata_guid { get; set; } 

        [JsonProperty("data_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Data_name { get; set; } 

        [JsonProperty("service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_name { get; set; } 

        [JsonProperty("allow_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_access { get; set; } 

        [JsonProperty("data_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Data_string { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ServiceUser
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("service_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_id { get; set; } 

        [JsonProperty("service_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("data_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Data_id { get; set; } 

        [JsonProperty("data_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Data_name { get; set; } 

        [JsonProperty("emailupdates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailupdates { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SetupTab
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("subtitle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subtitle { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("duration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Duration { get; set; } 

        [JsonProperty("system_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? System_use { get; set; } 

        [JsonProperty("completed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Completed { get; set; } 

        [JsonProperty("article1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Article1 { get; set; } 

        [JsonProperty("article2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Article2 { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SharePointError
    {
        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SharePointErrorMessage? Message { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SharePointErrorMessage
    {
        [JsonProperty("lang", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lang { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SharePointList
    {
        [JsonProperty("odata.error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SharePointError? OdataError { get; set; } 

        [JsonProperty("error_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Error_description { get; set; } 

        [JsonProperty("odata.metadata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? OdataMetadata { get; set; } 

        [JsonProperty("odata.type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? OdataType { get; set; } 

        [JsonProperty("odata.id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? OdataId { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SharePointSite
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("siteId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SiteId { get; set; } 

        [JsonProperty("sitePath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? SitePath { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ShopifyDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("shopname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Shopname { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Site
    {
        [JsonProperty("accountsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsid { get; set; } 

        [JsonProperty("accountsfirstname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsfirstname { get; set; } 

        [JsonProperty("accountslastname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountslastname { get; set; } 

        [JsonProperty("accountsemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsemailaddress { get; set; } 

        [JsonProperty("accountsccemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsccemailaddress { get; set; } 

        [JsonProperty("accountsbccemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountsbccemailaddress { get; set; } 

        [JsonProperty("sitephonenumberint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Sitephonenumberint { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("clientsite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clientsite_name { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_id { get; set; } 

        [JsonProperty("phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phonenumber { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timezone { get; set; } 

        [JsonProperty("invoice_address_isdelivery", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Invoice_address_isdelivery { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("isstocklocation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isstocklocation { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("item_quantity_in_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_quantity_in_stock { get; set; } 

        [JsonProperty("item_serialised_assets_in_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_serialised_assets_in_stock { get; set; } 

        [JsonProperty("item_quantity_reserved", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_quantity_reserved { get; set; } 

        [JsonProperty("item_quantity_reserved_on_order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_quantity_reserved_on_order { get; set; } 

        [JsonProperty("item_quantity_available", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_quantity_available { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Text { get; set; } 

        [JsonProperty("globx", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Globx { get; set; } 

        [JsonProperty("globy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Globy { get; set; } 

        [JsonProperty("style", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Style { get; set; } 

        [JsonProperty("inuseby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inuseby { get; set; } 

        [JsonProperty("upwho", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Upwho { get; set; } 

        [JsonProperty("uptimestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Uptimestamp { get; set; } 

        [JsonProperty("xrefsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Xrefsite { get; set; } 

        [JsonProperty("zoffsetx", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zoffsetx { get; set; } 

        [JsonProperty("zoffsety", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zoffsety { get; set; } 

        [JsonProperty("zoomx", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Zoomx { get; set; } 

        [JsonProperty("zoomy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Zoomy { get; set; } 

        [JsonProperty("smallx", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Smallx { get; set; } 

        [JsonProperty("smally", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Smally { get; set; } 

        [JsonProperty("bigx", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bigx { get; set; } 

        [JsonProperty("bigy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bigy { get; set; } 

        [JsonProperty("ldapstring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ldapstring { get; set; } 

        [JsonProperty("emaildomain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emaildomain { get; set; } 

        [JsonProperty("deliverby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Deliverby { get; set; } 

        [JsonProperty("isinvoicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isinvoicesite { get; set; } 

        [JsonProperty("refnumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Refnumber { get; set; } 

        [JsonProperty("defaultdelivery", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Defaultdelivery { get; set; } 

        [JsonProperty("seriousnesslevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seriousnesslevel { get; set; } 

        [JsonProperty("geocoord1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Geocoord1 { get; set; } 

        [JsonProperty("geocoord2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Geocoord2 { get; set; } 

        [JsonProperty("todomain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Todomain { get; set; } 

        [JsonProperty("defaultstocklocation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultstocklocation { get; set; } 

        [JsonProperty("stopped", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stopped { get; set; } 

        [JsonProperty("sitetimeoffset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sitetimeoffset { get; set; } 

        [JsonProperty("sitedateformat", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sitedateformat { get; set; } 

        [JsonProperty("disclaimermatchstring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Disclaimermatchstring { get; set; } 

        [JsonProperty("emailsubjectprefix", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailsubjectprefix { get; set; } 

        [JsonProperty("regionaldirector", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Regionaldirector { get; set; } 

        [JsonProperty("facilitiesmanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Facilitiesmanager { get; set; } 

        [JsonProperty("actguid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Actguid { get; set; } 

        [JsonProperty("teamviewerpassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teamviewerpassword { get; set; } 

        [JsonProperty("contractlastchecked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Contractlastchecked { get; set; } 

        [JsonProperty("maincontact_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Maincontact_name { get; set; } 

        [JsonProperty("wildcardref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Wildcardref { get; set; } 

        [JsonProperty("monthlyreportlastrun", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Monthlyreportlastrun { get; set; } 

        [JsonProperty("monthlyreportinclude", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Monthlyreportinclude { get; set; } 

        [JsonProperty("monthlyreportemailmanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Monthlyreportemailmanager { get; set; } 

        [JsonProperty("accountmanagertech", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Accountmanagertech { get; set; } 

        [JsonProperty("monthlyreportemaildirect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Monthlyreportemaildirect { get; set; } 

        [JsonProperty("language_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Language_id { get; set; } 

        [JsonProperty("language_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Language_name { get; set; } 

        [JsonProperty("snowname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Snowname { get; set; } 

        [JsonProperty("linked_organisation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_organisation_id { get; set; } 

        [JsonProperty("slocked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Slocked { get; set; } 

        [JsonProperty("newsite_contactname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newsite_contactname { get; set; } 

        [JsonProperty("newsite_contactemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newsite_contactemail { get; set; } 

        [JsonProperty("newsite_contacttitle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newsite_contacttitle { get; set; } 

        [JsonProperty("newsite_web_access_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newsite_web_access_level { get; set; } 

        [JsonProperty("newsite_sendwelcomeemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newsite_sendwelcomeemail { get; set; } 

        [JsonProperty("delivery_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Delivery_address { get; set; } 

        [JsonProperty("invoice_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Invoice_address { get; set; } 

        [JsonProperty("popup_notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaPopup>? Popup_notes { get; set; } 

        [JsonProperty("_reassign_all_to_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _reassign_all_to_user { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldHelper>? Fields { get; set; } 

        [JsonProperty("open_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_ticket_count { get; set; } 

        [JsonProperty("onhold_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onhold_ticket_count { get; set; } 

        [JsonProperty("total_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_ticket_count { get; set; } 

        [JsonProperty("opened_thismonth_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opened_thismonth_count { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Guid { get; set; } 

        [JsonProperty("sitecontacts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SiteContact>? Sitecontacts { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("cautomateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cautomateid { get; set; } 

        [JsonProperty("ninjarmmid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ninjarmmid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("_isxero", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isxero { get; set; } 

        [JsonProperty("_match_first_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _match_first_site { get; set; } 

        [JsonProperty("servicenowid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenowid { get; set; } 

        [JsonProperty("isnhserveremaildefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isnhserveremaildefault { get; set; } 

        [JsonProperty("device42id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device42id { get; set; } 

        [JsonProperty("datto_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_id { get; set; } 

        [JsonProperty("datto_alternate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Datto_alternate_id { get; set; } 

        [JsonProperty("datto_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Datto_url { get; set; } 

        [JsonProperty("connectwiseid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connectwiseid { get; set; } 

        [JsonProperty("azuretenantid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azuretenantid { get; set; } 

        [JsonProperty("autotaskid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autotaskid { get; set; } 

        [JsonProperty("pagerdutywildcard", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pagerdutywildcard { get; set; } 

        [JsonProperty("ateraid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ateraid { get; set; } 

        [JsonProperty("slastupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Slastupdate { get; set; } 

        [JsonProperty("site_service_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_service_tax_code { get; set; } 

        [JsonProperty("site_prepay_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_prepay_tax_code { get; set; } 

        [JsonProperty("site_contract_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_contract_tax_code { get; set; } 

        [JsonProperty("site_item_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_item_tax_code_name { get; set; } 

        [JsonProperty("site_service_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_service_tax_code_name { get; set; } 

        [JsonProperty("site_contract_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_contract_tax_code_name { get; set; } 

        [JsonProperty("site_prepay_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_prepay_tax_code_name { get; set; } 

        [JsonProperty("site_sales_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_sales_tax_code { get; set; } 

        [JsonProperty("site_purchase_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_purchase_tax_code { get; set; } 

        [JsonProperty("site_purchase_tax_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_purchase_tax_code_name { get; set; } 

        [JsonProperty("syncroid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Syncroid { get; set; } 

        [JsonProperty("third_party_client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_client_name { get; set; } 

        [JsonProperty("auvik_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auvik_id { get; set; } 

        [JsonProperty("faqlists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FAQListHead>? Faqlists { get; set; } 

        [JsonProperty("all_faqlists_allowed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? All_faqlists_allowed { get; set; } 

        [JsonProperty("hubspot_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hubspot_id { get; set; } 

        [JsonProperty("passportal_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Passportal_id { get; set; } 

        [JsonProperty("import_site_mapping", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_site_mapping { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("issitedetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Issitedetails { get; set; } 

        [JsonProperty("hudu_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hudu_url { get; set; } 

        [JsonProperty("liongardid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Liongardid { get; set; } 

        [JsonProperty("kaseyaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kaseyaid { get; set; } 

        [JsonProperty("surchargeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Surchargeid { get; set; } 

        [JsonProperty("country_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Country_code { get; set; } 

        [JsonProperty("region_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Region_code { get; set; } 

        [JsonProperty("stockbins", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StockBin>? Stockbins { get; set; } 

        [JsonProperty("ncentral_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ncentral_details_id { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("import_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_details_id { get; set; } 

        [JsonProperty("hasitemsinstock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hasitemsinstock { get; set; } 

        [JsonProperty("_dont_fire_automations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dont_fire_automations { get; set; } 

        [JsonProperty("sqlimport_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sqlimport_id { get; set; } 

        [JsonProperty("matching_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matching_value { get; set; } 

        [JsonProperty("lapsafe_default_installation_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lapsafe_default_installation_name { get; set; } 

        [JsonProperty("lapsafe_default_installation_obj", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Lapsafe_default_installation_obj { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("extratabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tabname>? Extratabs { get; set; } 

        [JsonProperty("businesscentral_area_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Businesscentral_area_company_id { get; set; } 

        [JsonProperty("businesscentral_billing_client", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public BusinessCentralCustomer? Businesscentral_billing_client { get; set; } 

        [JsonProperty("_convert_phonenumbers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _convert_phonenumbers { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("authrocket_locale", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Authrocket_locale { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("site_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldHelper>? Site_fields { get; set; } 

        [JsonProperty("gfisiteid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Gfisiteid { get; set; } 

        [JsonProperty("delivery_address_line1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line1 { get; set; } 

        [JsonProperty("delivery_address_line2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line2 { get; set; } 

        [JsonProperty("delivery_address_line3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line3 { get; set; } 

        [JsonProperty("delivery_address_line4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line4 { get; set; } 

        [JsonProperty("delivery_address_line5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line5 { get; set; } 

        [JsonProperty("itglue_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itglue_id { get; set; } 

        [JsonProperty("client_itglue_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_itglue_id { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("stockbin_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stockbin_id { get; set; } 

        [JsonProperty("stockbin_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stockbin_name { get; set; } 

        [JsonProperty("country_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Country_code_name { get; set; } 

        [JsonProperty("region_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Region_code_name { get; set; } 

        [JsonProperty("ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ref { get; set; } 

        [JsonProperty("lapsafe_default_installation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lapsafe_default_installation { get; set; } 

        [JsonProperty("maincontact_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Maincontact_id { get; set; } 

        [JsonProperty("site_item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_item_tax_code { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SiteContact
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site { get; set; } 

        [JsonProperty("uid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uid { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("user_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_email { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Site_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("clientsite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clientsite_name { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_id { get; set; } 

        [JsonProperty("phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phonenumber { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timezone { get; set; } 

        [JsonProperty("invoice_address_isdelivery", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Invoice_address_isdelivery { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("isstocklocation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isstocklocation { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("item_quantity_in_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_quantity_in_stock { get; set; } 

        [JsonProperty("item_serialised_assets_in_stock", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_serialised_assets_in_stock { get; set; } 

        [JsonProperty("item_quantity_reserved", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_quantity_reserved { get; set; } 

        [JsonProperty("item_quantity_reserved_on_order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_quantity_reserved_on_order { get; set; } 

        [JsonProperty("item_quantity_available", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_quantity_available { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("site_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldHelper>? Site_fields { get; set; } 

        [JsonProperty("gfisiteid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Gfisiteid { get; set; } 

        [JsonProperty("delivery_address_line1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line1 { get; set; } 

        [JsonProperty("delivery_address_line2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line2 { get; set; } 

        [JsonProperty("delivery_address_line3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line3 { get; set; } 

        [JsonProperty("delivery_address_line4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line4 { get; set; } 

        [JsonProperty("delivery_address_line5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delivery_address_line5 { get; set; } 

        [JsonProperty("itglue_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Itglue_id { get; set; } 

        [JsonProperty("client_itglue_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_itglue_id { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("stockbin_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stockbin_id { get; set; } 

        [JsonProperty("stockbin_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Stockbin_name { get; set; } 

        [JsonProperty("country_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Country_code_name { get; set; } 

        [JsonProperty("region_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Region_code_name { get; set; } 

        [JsonProperty("ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ref { get; set; } 

        [JsonProperty("lapsafe_default_installation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lapsafe_default_installation { get; set; } 

        [JsonProperty("maincontact_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Maincontact_id { get; set; } 

        [JsonProperty("site_item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_item_tax_code { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlaHead
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("hoursaretechslocaltime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hoursaretechslocaltime { get; set; } 

        [JsonProperty("workday_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workday_id { get; set; } 

        [JsonProperty("workday_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Workday_guid { get; set; } 

        [JsonProperty("responsereset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Responsereset { get; set; } 

        [JsonProperty("autoreleaseoption", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autoreleaseoption { get; set; } 

        [JsonProperty("workdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Workdays? Workdays { get; set; } 

        [JsonProperty("priorities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Policy>? Priorities { get; set; } 

        [JsonProperty("response_reset_approval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Response_reset_approval { get; set; } 

        [JsonProperty("autoreleaselimit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autoreleaselimit { get; set; } 

        [JsonProperty("trackslaresponsetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Trackslaresponsetime { get; set; } 

        [JsonProperty("trackslafixbytime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Trackslafixbytime { get; set; } 

        [JsonProperty("statusafterautorelease", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statusafterautorelease { get; set; } 

        [JsonProperty("slstatusafterfirstwarning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Slstatusafterfirstwarning { get; set; } 

        [JsonProperty("slstatusaftersecondwarning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Slstatusaftersecondwarning { get; set; } 

        [JsonProperty("workday_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workday_name { get; set; } 

        [JsonProperty("dontsendholdreminders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsendholdreminders { get; set; } 

        [JsonProperty("statusafterautorelease_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Statusafterautorelease_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackActionResult
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("block_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Block_id { get; set; } 

        [JsonProperty("action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_id { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("action_ts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_ts { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackBlock
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("block_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Block_id { get; set; } 

        [JsonProperty("optional", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Optional { get; set; } 

        [JsonProperty("label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackBlockText? Label { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackBlockText? Text { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SlackBlockText>? Fields { get; set; } 

        [JsonProperty("elements", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SlackBlockElement>? Elements { get; set; } 

        [JsonProperty("element", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackBlockElement? Element { get; set; } 

        [JsonProperty("accessory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackBlockAccessory? Accessory { get; set; } 

        [JsonProperty("dispatch_action", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dispatch_action { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackBlockAccessory
    {
        [JsonProperty("action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("min_query_length", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Min_query_length { get; set; } 

        [JsonProperty("placeholder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackBlockText? Placeholder { get; set; } 

        [JsonProperty("initial_option", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackOption? Initial_option { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackBlockElement
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackBlockText? Text { get; set; } 

        [JsonProperty("style", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Style { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_id { get; set; } 

        [JsonProperty("multiline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Multiline { get; set; } 

        [JsonProperty("initial_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Initial_value { get; set; } 

        [JsonProperty("is_decimal_allowed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_decimal_allowed { get; set; } 

        [JsonProperty("dispatch_action_config", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackBlockElementDispatchActionConfig? Dispatch_action_config { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackBlockElementDispatchActionConfig
    {
        [JsonProperty("trigger_actions_on", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Trigger_actions_on { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackBlockText
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("emoji", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emoji { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackChannel
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("is_private", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_private { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackCommandDetail
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackCommandType? Type { get; set; } 

        [JsonProperty("application", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WorkspaceApplication? Application { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackServiceUser? User { get; set; } 

        [JsonProperty("attributes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, object?>? Attributes { get; set; } 

        [JsonProperty("webhook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackWebhook? Webhook { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum SlackCommandType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

        _5 = 5,

        _6 = 6,

        _7 = 7,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("teamname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teamname { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("webhookurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhookurl { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("channel_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Channel_id { get; set; } 

        [JsonProperty("allow_ticket_create", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_ticket_create { get; set; } 

        [JsonProperty("ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_type { get; set; } 

        [JsonProperty("ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_type_name { get; set; } 

        [JsonProperty("_getoauthtoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _getoauthtoken { get; set; } 

        [JsonProperty("oauth_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oauth_code { get; set; } 

        [JsonProperty("oauth_redirect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oauth_redirect { get; set; } 

        [JsonProperty("scopes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Scopes { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_id { get; set; } 

        [JsonProperty("ticket_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_user { get; set; } 

        [JsonProperty("ticket_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_user_name { get; set; } 

        [JsonProperty("command_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Command_ticket_type { get; set; } 

        [JsonProperty("command_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Command_ticket_type_name { get; set; } 

        [JsonProperty("command_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Command_user { get; set; } 

        [JsonProperty("command_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Command_user_name { get; set; } 

        [JsonProperty("uninstalled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Uninstalled { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackEvent
    {
        [JsonProperty("client_msg_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_msg_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User { get; set; } 

        [JsonProperty("ts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ts { get; set; } 

        [JsonProperty("team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team { get; set; } 

        [JsonProperty("channel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Channel { get; set; } 

        [JsonProperty("event_ts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event_ts { get; set; } 

        [JsonProperty("channel_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Channel_type { get; set; } 

        [JsonProperty("blocks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SlackBlock>? Blocks { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum SlackEventType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackEventWebhook
    {
        [JsonProperty("token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token { get; set; } 

        [JsonProperty("challenge", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Challenge { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("event_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event_id { get; set; } 

        [JsonProperty("event_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Event_time { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_id { get; set; } 

        [JsonProperty("context_team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Context_team_id { get; set; } 

        [JsonProperty("context_enterprise_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Context_enterprise_id { get; set; } 

        [JsonProperty("api_app_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Api_app_id { get; set; } 

        [JsonProperty("is_ext_shared_channel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_ext_shared_channel { get; set; } 

        [JsonProperty("event", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackEvent? Event { get; set; } 

        [JsonProperty("eventtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackEventType? Eventtype { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackFile
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("url_private", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url_private { get; set; } 

        [JsonProperty("url_private_download", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url_private_download { get; set; } 

        [JsonProperty("permalink", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Permalink { get; set; } 

        [JsonProperty("permalink_public", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Permalink_public { get; set; } 

        [JsonProperty("is_public", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_public { get; set; } 

        [JsonProperty("is_external", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_external { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackInteractivity
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token { get; set; } 

        [JsonProperty("action_ts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_ts { get; set; } 

        [JsonProperty("api_app_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Api_app_id { get; set; } 

        [JsonProperty("team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackTeam? Team { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackUser? User { get; set; } 

        [JsonProperty("channel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackChannel? Channel { get; set; } 

        [JsonProperty("is_enterprise_install", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_enterprise_install { get; set; } 

        [JsonProperty("callback_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Callback_id { get; set; } 

        [JsonProperty("trigger_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Trigger_id { get; set; } 

        [JsonProperty("response_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Response_url { get; set; } 

        [JsonProperty("message_ts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message_ts { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackMessage? Message { get; set; } 

        [JsonProperty("view", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackView? View { get; set; } 

        [JsonProperty("actions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SlackActionResult>? Actions { get; set; } 

        [JsonProperty("detail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackCommandDetail? Detail { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackMessage
    {
        [JsonProperty("client_msg_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_msg_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User { get; set; } 

        [JsonProperty("ts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ts { get; set; } 

        [JsonProperty("team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team { get; set; } 

        [JsonProperty("channel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Channel { get; set; } 

        [JsonProperty("bot_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bot_id { get; set; } 

        [JsonProperty("app_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? App_id { get; set; } 

        [JsonProperty("bot_profile", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackUser? Bot_profile { get; set; } 

        [JsonProperty("files", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SlackFile>? Files { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackOption
    {
        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackBlockText? Text { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackServiceUser
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; } 

        [JsonProperty("database_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Database_id { get; set; } 

        [JsonProperty("workspace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workspace_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_id { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackTeam
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domain { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackUser
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("real_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Real_name { get; set; } 

        [JsonProperty("deleted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deleted { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackView
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("callback_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Callback_id { get; set; } 

        [JsonProperty("private_metadata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Private_metadata { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewText? Title { get; set; } 

        [JsonProperty("submit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewText? Submit { get; set; } 

        [JsonProperty("blocks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SlackViewBlock>? Blocks { get; set; } 

        [JsonProperty("state", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewState? State { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackViewBlock
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("block_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Block_id { get; set; } 

        [JsonProperty("optional", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Optional { get; set; } 

        [JsonProperty("element", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewBlockElement? Element { get; set; } 

        [JsonProperty("label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewText? Label { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewText? Text { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackViewBlockElement
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Action_id { get; set; } 

        [JsonProperty("multiline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Multiline { get; set; } 

        [JsonProperty("initial_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Initial_value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackViewState
    {
        [JsonProperty("values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewStateValues? Values { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackViewStateStatusField
    {
        [JsonProperty("search_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewStateValuesDropdownInput? Search_status { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackViewStateValues
    {
        [JsonProperty("summary_input", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewStateValuesInput? Summary_input { get; set; } 

        [JsonProperty("details_input", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewStateValuesInput? Details_input { get; set; } 

        [JsonProperty("note_input", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewStateValuesInput? Note_input { get; set; } 

        [JsonProperty("ticket_id_input", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewStateValuesInput? Ticket_id_input { get; set; } 

        [JsonProperty("status_input", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewStateStatusField? Status_input { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackViewStateValuesDropdownInput
    {
        [JsonProperty("external_select", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? External_select { get; set; } 

        [JsonProperty("selected_option", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackOption? Selected_option { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackViewStateValuesInput
    {
        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SlackViewValue? Value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackViewText
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackViewValue
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SlackWebhook
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("channel_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Channel_id { get; set; } 

        [JsonProperty("view_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? View_id { get; set; } 

        [JsonProperty("response_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Response_url { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SnelStartWebhook
    {
        [JsonProperty("koppelSleutel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? KoppelSleutel { get; set; } 

        [JsonProperty("actionType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ActionType { get; set; } 

        [JsonProperty("referenceKey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ReferenceKey { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SnipeITDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("new_integration_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_integration_key { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("toplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel { get; set; } 

        [JsonProperty("toplevel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Toplevel_name { get; set; } 

        [JsonProperty("default_devicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicesite { get; set; } 

        [JsonProperty("default_devicesite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicesite_name { get; set; } 

        [JsonProperty("default_devicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicetype { get; set; } 

        [JsonProperty("default_devicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicetypename { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_fieldname { get; set; } 

        [JsonProperty("snipeit_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Snipeit_fieldmappings { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("halo_integrator_import_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_integrator_import_list { get; set; } 

        [JsonProperty("halo_integrator_import_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Halo_integrator_import_types { get; set; } 

        [JsonProperty("delete_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete_devices { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

        [JsonProperty("dont_update_device_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_device_type { get; set; } 

        [JsonProperty("dont_move_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_site { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("client_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_links { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("default_assetgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup { get; set; } 

        [JsonProperty("default_assetgroupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroupname { get; set; } 

        [JsonProperty("assettype_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_choice { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_field { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SnowComputerUserAbstract
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("customerId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? CustomerId { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("lastLogon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastLogon { get; set; } 

        [JsonProperty("fullName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? FullName { get; set; } 

        [JsonProperty("updatedDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdatedDate { get; set; } 

        [JsonProperty("updatedBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UpdatedBy { get; set; } 

        [JsonProperty("logonCount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? LogonCount { get; set; } 

        [JsonProperty("userIsAccessible", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? UserIsAccessible { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SnowDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("sdpassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sdpassword { get; set; } 

        [JsonProperty("new_integration_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_integration_key { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("toplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel { get; set; } 

        [JsonProperty("toplevel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Toplevel_name { get; set; } 

        [JsonProperty("default_devicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicesite { get; set; } 

        [JsonProperty("default_devicesite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicesite_name { get; set; } 

        [JsonProperty("default_devicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicetype { get; set; } 

        [JsonProperty("default_devicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicetypename { get; set; } 

        [JsonProperty("user_matching_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_matching_type { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_fieldname { get; set; } 

        [JsonProperty("snow_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Snow_fieldmappings { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("halo_integrator_import_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_integrator_import_list { get; set; } 

        [JsonProperty("halo_integrator_import_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Halo_integrator_import_types { get; set; } 

        [JsonProperty("delete_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete_devices { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

        [JsonProperty("dont_update_device_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_device_type { get; set; } 

        [JsonProperty("dont_move_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_site { get; set; } 

        [JsonProperty("dont_update_site_addresses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_site_addresses { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("client_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_links { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SnowDevice
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("organization", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Organization { get; set; } 

        [JsonProperty("orgChecksum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? OrgChecksum { get; set; } 

        [JsonProperty("manufacturer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manufacturer { get; set; } 

        [JsonProperty("model", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Model { get; set; } 

        [JsonProperty("operatingSystem", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? OperatingSystem { get; set; } 

        [JsonProperty("operatingSystemServicePack", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? OperatingSystemServicePack { get; set; } 

        [JsonProperty("isVirtual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsVirtual { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("ipAddresses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? IpAddresses { get; set; } 

        [JsonProperty("lastScanDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? LastScanDate { get; set; } 

        [JsonProperty("updatedBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UpdatedBy { get; set; } 

        [JsonProperty("updatedDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdatedDate { get; set; } 

        [JsonProperty("domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domain { get; set; } 

        [JsonProperty("totalDiskSpace", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TotalDiskSpace { get; set; } 

        [JsonProperty("physicalMemory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? PhysicalMemory { get; set; } 

        [JsonProperty("processorType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProcessorType { get; set; } 

        [JsonProperty("processorCount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? ProcessorCount { get; set; } 

        [JsonProperty("coreCount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? CoreCount { get; set; } 

        [JsonProperty("biosSerialNumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? BiosSerialNumber { get; set; } 

        [JsonProperty("hypervisorName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? HypervisorName { get; set; } 

        [JsonProperty("mostFrequentUserId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? MostFrequentUserId { get; set; } 

        [JsonProperty("mostRecentUserId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? MostRecentUserId { get; set; } 

        [JsonProperty("hardware", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SnowHardware? Hardware { get; set; } 

        [JsonProperty("biosVersion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? BiosVersion { get; set; } 

        [JsonProperty("biosDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? BiosDate { get; set; } 

        [JsonProperty("numberOfProcessors", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? NumberOfProcessors { get; set; } 

        [JsonProperty("coresPerProcessor", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? CoresPerProcessor { get; set; } 

        [JsonProperty("physicalMemoryMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? PhysicalMemoryMb { get; set; } 

        [JsonProperty("memorySlots", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? MemorySlots { get; set; } 

        [JsonProperty("memorySlotsAvailable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? MemorySlotsAvailable { get; set; } 

        [JsonProperty("systemDiskSpaceMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? SystemDiskSpaceMb { get; set; } 

        [JsonProperty("systemDiskSpaceAvailableMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? SystemDiskSpaceAvailableMb { get; set; } 

        [JsonProperty("totalDiskSpaceMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TotalDiskSpaceMb { get; set; } 

        [JsonProperty("totalDiskSpaceAvailableMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TotalDiskSpaceAvailableMb { get; set; } 

        [JsonProperty("phoneNumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? PhoneNumber { get; set; } 

        [JsonProperty("mobileDeviceType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? MobileDeviceType { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SnowHardware
    {
        [JsonProperty("biosSerialNumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? BiosSerialNumber { get; set; } 

        [JsonProperty("biosVersion", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? BiosVersion { get; set; } 

        [JsonProperty("biosDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? BiosDate { get; set; } 

        [JsonProperty("processorType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ProcessorType { get; set; } 

        [JsonProperty("numberOfProcessors", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? NumberOfProcessors { get; set; } 

        [JsonProperty("coresPerProcessor", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? CoresPerProcessor { get; set; } 

        [JsonProperty("physicalMemoryMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? PhysicalMemoryMb { get; set; } 

        [JsonProperty("memorySlots", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? MemorySlots { get; set; } 

        [JsonProperty("memorySlotsAvailable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? MemorySlotsAvailable { get; set; } 

        [JsonProperty("systemDiskSpaceMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? SystemDiskSpaceMb { get; set; } 

        [JsonProperty("systemDiskSpaceAvailableMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? SystemDiskSpaceAvailableMb { get; set; } 

        [JsonProperty("totalDiskSpaceMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TotalDiskSpaceMb { get; set; } 

        [JsonProperty("totalDiskSpaceAvailableMb", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? TotalDiskSpaceAvailableMb { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SnowLicenseAbstract
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("applicationName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ApplicationName { get; set; } 

        [JsonProperty("manufacturerName", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ManufacturerName { get; set; } 

        [JsonProperty("metric", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Metric { get; set; } 

        [JsonProperty("assignmentType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? AssignmentType { get; set; } 

        [JsonProperty("purchaseDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? PurchaseDate { get; set; } 

        [JsonProperty("quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quantity { get; set; } 

        [JsonProperty("isIncomplete", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? IsIncomplete { get; set; } 

        [JsonProperty("updatedDate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? UpdatedDate { get; set; } 

        [JsonProperty("updatedBy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? UpdatedBy { get; set; } 

        [JsonProperty("snowDevices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SnowDevice>? SnowDevices { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SqlLookupRequest
    {
        [JsonProperty("connection_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connection_name { get; set; } 

        [JsonProperty("sql_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sql_string { get; set; } 

        [JsonProperty("db_params", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StringObjectDbTypeTuple>? Db_params { get; set; } 

        [JsonProperty("filookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filookup { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StdRequest
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domain { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restriction_type { get; set; } 

        [JsonProperty("restrictto_department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictto_department_id { get; set; } 

        [JsonProperty("restrictto_department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restrictto_department_name { get; set; } 

        [JsonProperty("restrictto_team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictto_team_id { get; set; } 

        [JsonProperty("restrictto_team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restrictto_team_name { get; set; } 

        [JsonProperty("restrictto_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictto_agent_id { get; set; } 

        [JsonProperty("restrictto_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restrictto_agent_name { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("rule_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_count { get; set; } 

        [JsonProperty("creation_rules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StdRequestRule>? Creation_rules { get; set; } 

        [JsonProperty("todo_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<STDToDo>? Todo_list { get; set; } 

        [JsonProperty("emailto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailto { get; set; } 

        [JsonProperty("emailcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailcc { get; set; } 

        [JsonProperty("emailbcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailbcc { get; set; } 

        [JsonProperty("emailsubject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailsubject { get; set; } 

        [JsonProperty("time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Time { get; set; } 

        [JsonProperty("disabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disabled { get; set; } 

        [JsonProperty("lastcreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastcreated { get; set; } 

        [JsonProperty("nextcreationdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextcreationdate { get; set; } 

        [JsonProperty("nextcreationdate_after_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextcreationdate_after_end { get; set; } 

        [JsonProperty("execution_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Execution_type { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Period { get; set; } 

        [JsonProperty("create_locked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_locked { get; set; } 

        [JsonProperty("one_ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? One_ticket_id { get; set; } 

        [JsonProperty("created_ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Created_ticket_id { get; set; } 

        [JsonProperty("approval_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_id { get; set; } 

        [JsonProperty("reportarea", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reportarea { get; set; } 

        [JsonProperty("reportarea_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reportarea_name { get; set; } 

        [JsonProperty("users_can_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Users_can_use { get; set; } 

        [JsonProperty("priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority_id { get; set; } 

        [JsonProperty("estimate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Estimate { get; set; } 

        [JsonProperty("category_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_1 { get; set; } 

        [JsonProperty("category_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_2 { get; set; } 

        [JsonProperty("category_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_3 { get; set; } 

        [JsonProperty("category_4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_4 { get; set; } 

        [JsonProperty("status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_id { get; set; } 

        [JsonProperty("status_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Status_guid { get; set; } 

        [JsonProperty("details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Details { get; set; } 

        [JsonProperty("details_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Details_html { get; set; } 

        [JsonProperty("clearance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clearance { get; set; } 

        [JsonProperty("workflow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workflow_id { get; set; } 

        [JsonProperty("workflow_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Workflow_guid { get; set; } 

        [JsonProperty("workflow_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workflow_name { get; set; } 

        [JsonProperty("approval_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approval_name { get; set; } 

        [JsonProperty("team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("showforusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showforusers { get; set; } 

        [JsonProperty("excludefromsla", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Excludefromsla { get; set; } 

        [JsonProperty("defaultresourcetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultresourcetype { get; set; } 

        [JsonProperty("defaultresourcetype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultresourcetype_name { get; set; } 

        [JsonProperty("informlevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Informlevel { get; set; } 

        [JsonProperty("scheduletype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Scheduletype { get; set; } 

        [JsonProperty("dom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dom { get; set; } 

        [JsonProperty("mon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mon { get; set; } 

        [JsonProperty("tue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tue { get; set; } 

        [JsonProperty("wed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Wed { get; set; } 

        [JsonProperty("thu", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Thu { get; set; } 

        [JsonProperty("fri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fri { get; set; } 

        [JsonProperty("sat", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sat { get; set; } 

        [JsonProperty("sun", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sun { get; set; } 

        [JsonProperty("year", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Year { get; set; } 

        [JsonProperty("_clearlastrun", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _clearlastrun { get; set; } 

        [JsonProperty("daysplus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Daysplus { get; set; } 

        [JsonProperty("every", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Every { get; set; } 

        [JsonProperty("reportid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reportid { get; set; } 

        [JsonProperty("impact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Impact { get; set; } 

        [JsonProperty("urgency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Urgency { get; set; } 

        [JsonProperty("reportperiod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reportperiod { get; set; } 

        [JsonProperty("reportsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reportsite { get; set; } 

        [JsonProperty("repeat", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Repeat { get; set; } 

        [JsonProperty("toplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel { get; set; } 

        [JsonProperty("report_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Report_id { get; set; } 

        [JsonProperty("emailbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailbody { get; set; } 

        [JsonProperty("kbid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kbid { get; set; } 

        [JsonProperty("did", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Did { get; set; } 

        [JsonProperty("yeargapvalue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Yeargapvalue { get; set; } 

        [JsonProperty("graph", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Graph { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Table { get; set; } 

        [JsonProperty("csv", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Csv { get; set; } 

        [JsonProperty("json", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Json { get; set; } 

        [JsonProperty("prompt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Prompt { get; set; } 

        [JsonProperty("promptproceed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Promptproceed { get; set; } 

        [JsonProperty("pdf", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Pdf { get; set; } 

        [JsonProperty("sendifempty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendifempty { get; set; } 

        [JsonProperty("copied_from_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Copied_from_id { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Assets { get; set; } 

        [JsonProperty("users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users_List>? Users { get; set; } 

        [JsonProperty("itil_request_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itil_request_type { get; set; } 

        [JsonProperty("create_on_nonworkdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_on_nonworkdays { get; set; } 

        [JsonProperty("invoice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_id { get; set; } 

        [JsonProperty("webhook_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webhook_id { get; set; } 

        [JsonProperty("creationtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Creationtype { get; set; } 

        [JsonProperty("parentticketid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parentticketid { get; set; } 

        [JsonProperty("kb_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kb_id { get; set; } 

        [JsonProperty("kb_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kb_name { get; set; } 

        [JsonProperty("kb_accessible_for_enduser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Kb_accessible_for_enduser { get; set; } 

        [JsonProperty("forwardinboundupdates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Forwardinboundupdates { get; set; } 

        [JsonProperty("enable_budget_table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_budget_table { get; set; } 

        [JsonProperty("budgets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<STDrequestbudget>? Budgets { get; set; } 

        [JsonProperty("budgettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Budgettype_id { get; set; } 

        [JsonProperty("budgettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Budgettype_name { get; set; } 

        [JsonProperty("emailcclist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailcclist { get; set; } 

        [JsonProperty("services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServSite_List>? Services { get; set; } 

        [JsonProperty("_canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("updateparent_status_close", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Updateparent_status_close { get; set; } 

        [JsonProperty("updateparent_target_create", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Updateparent_target_create { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("clone_parent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clone_parent_id { get; set; } 

        [JsonProperty("increasecontractnextcalldate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Increasecontractnextcalldate { get; set; } 

        [JsonProperty("makeinactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Makeinactive { get; set; } 

        [JsonProperty("_queue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _queue { get; set; } 

        [JsonProperty("_sendnow", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _sendnow { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("automationcriteria", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AutoassignCriteria>? Automationcriteria { get; set; } 

        [JsonProperty("isclone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isclone { get; set; } 

        [JsonProperty("showforusers_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Showforusers_int { get; set; } 

        [JsonProperty("forwardinboundupdates_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Forwardinboundupdates_int { get; set; } 

        [JsonProperty("excludefromsla_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Excludefromsla_int { get; set; } 

        [JsonProperty("start_num_days_added", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Start_num_days_added { get; set; } 

        [JsonProperty("target_num_days_added", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Target_num_days_added { get; set; } 

        [JsonProperty("milestones", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MileStone>? Milestones { get; set; } 

        [JsonProperty("sqltoselectusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sqltoselectusers { get; set; } 

        [JsonProperty("usersqllookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Usersqllookup { get; set; } 

        [JsonProperty("notification_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Notification_id { get; set; } 

        [JsonProperty("additional_agents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FaultAdditionalAgents>? Additional_agents { get; set; } 

        [JsonProperty("new_audits", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Audit>? New_audits { get; set; } 

        [JsonProperty("new_changes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceChange>? New_changes { get; set; } 

        [JsonProperty("child_count_of_ticket_to_save", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_count_of_ticket_to_save { get; set; } 

        [JsonProperty("ticket_id_to_save", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id_to_save { get; set; } 

        [JsonProperty("create_child_templates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_child_templates { get; set; } 

        [JsonProperty("ticket_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_template { get; set; } 

        [JsonProperty("ticket_template_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Ticket_template_guid { get; set; } 

        [JsonProperty("ticket_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_template_name { get; set; } 

        [JsonProperty("enable_task_dependencies", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_task_dependencies { get; set; } 

        [JsonProperty("date_dependencies", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StdrequestDateDependencies>? Date_dependencies { get; set; } 

        [JsonProperty("upload_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Upload_type { get; set; } 

        [JsonProperty("integration_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_details_id { get; set; } 

        [JsonProperty("integration_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_details_name { get; set; } 

        [JsonProperty("integration_mapping", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_mapping { get; set; } 

        [JsonProperty("integration_mapping_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_mapping_name { get; set; } 

        [JsonProperty("integration_folder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_folder { get; set; } 

        [JsonProperty("overwrite_files", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Overwrite_files { get; set; } 

        [JsonProperty("create_for_user_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Create_for_user_type { get; set; } 

        [JsonProperty("sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_id { get; set; } 

        [JsonProperty("restrictto_department_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Restrictto_department_guid { get; set; } 

        [JsonProperty("restrictto_team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Restrictto_team_guid { get; set; } 

        [JsonProperty("clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clients { get; set; } 

        [JsonProperty("tickettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Tickettype_guid { get; set; } 

        [JsonProperty("automationtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automationtype { get; set; } 

        [JsonProperty("optionalservice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optionalservice { get; set; } 

        [JsonProperty("optional_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_agent_id { get; set; } 

        [JsonProperty("optional_team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_team { get; set; } 

        [JsonProperty("optional_status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_status_id { get; set; } 

        [JsonProperty("optional_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_tickettype_id { get; set; } 

        [JsonProperty("optional_create_locked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Optional_create_locked { get; set; } 

        [JsonProperty("optional_defaultresourcetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_defaultresourcetype { get; set; } 

        [JsonProperty("optional_excludefromsla", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_excludefromsla { get; set; } 

        [JsonProperty("optional_customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Optional_customfields { get; set; } 

        [JsonProperty("optional_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Optional_assets { get; set; } 

        [JsonProperty("optional_forwardinboundupdates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_forwardinboundupdates { get; set; } 

        [JsonProperty("optional_showforusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_showforusers { get; set; } 

        [JsonProperty("optional_urgency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_urgency { get; set; } 

        [JsonProperty("optional_impact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_impact { get; set; } 

        [JsonProperty("optional_workflow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_workflow_id { get; set; } 

        [JsonProperty("optional_estimate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Optional_estimate { get; set; } 

        [JsonProperty("optional_category_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_category_1 { get; set; } 

        [JsonProperty("optional_category_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_category_2 { get; set; } 

        [JsonProperty("optional_category_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_category_3 { get; set; } 

        [JsonProperty("optional_category_4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_category_4 { get; set; } 

        [JsonProperty("optional_priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_priority_id { get; set; } 

        [JsonProperty("optional_budgettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_budgettype_id { get; set; } 

        [JsonProperty("optional_kb_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_kb_id { get; set; } 

        [JsonProperty("optional_service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_service { get; set; } 

        [JsonProperty("optional_service_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_service_details_id { get; set; } 

        [JsonProperty("service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service { get; set; } 

        [JsonProperty("optional_sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_sla_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StdRequestRule
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("parent_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent_template_id { get; set; } 

        [JsonProperty("child_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_template_id { get; set; } 

        [JsonProperty("usage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Usage { get; set; } 

        [JsonProperty("rule_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_type { get; set; } 

        [JsonProperty("createonchildclose_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Createonchildclose_id { get; set; } 

        [JsonProperty("createonchildclose_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Createonchildclose_name { get; set; } 

        [JsonProperty("working_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Working_days { get; set; } 

        [JsonProperty("outcome_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome_id { get; set; } 

        [JsonProperty("outcome_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Outcome_name { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_value { get; set; } 

        [JsonProperty("field_value_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_value_string { get; set; } 

        [JsonProperty("field_contains", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_contains { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("approvalstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approvalstatus { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("optionalservice_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optionalservice_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StdRequest_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Domain { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restriction_type { get; set; } 

        [JsonProperty("restrictto_department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictto_department_id { get; set; } 

        [JsonProperty("restrictto_department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restrictto_department_name { get; set; } 

        [JsonProperty("restrictto_team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictto_team_id { get; set; } 

        [JsonProperty("restrictto_team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restrictto_team_name { get; set; } 

        [JsonProperty("restrictto_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restrictto_agent_id { get; set; } 

        [JsonProperty("restrictto_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restrictto_agent_name { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("rule_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_count { get; set; } 

        [JsonProperty("creation_rules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StdRequestRule>? Creation_rules { get; set; } 

        [JsonProperty("todo_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<STDToDo>? Todo_list { get; set; } 

        [JsonProperty("emailto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailto { get; set; } 

        [JsonProperty("emailcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailcc { get; set; } 

        [JsonProperty("emailbcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailbcc { get; set; } 

        [JsonProperty("emailsubject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailsubject { get; set; } 

        [JsonProperty("time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Time { get; set; } 

        [JsonProperty("disabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disabled { get; set; } 

        [JsonProperty("lastcreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastcreated { get; set; } 

        [JsonProperty("nextcreationdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextcreationdate { get; set; } 

        [JsonProperty("nextcreationdate_after_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextcreationdate_after_end { get; set; } 

        [JsonProperty("execution_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Execution_type { get; set; } 

        [JsonProperty("startdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startdate { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("period", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Period { get; set; } 

        [JsonProperty("create_locked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_locked { get; set; } 

        [JsonProperty("one_ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? One_ticket_id { get; set; } 

        [JsonProperty("created_ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Created_ticket_id { get; set; } 

        [JsonProperty("approval_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_id { get; set; } 

        [JsonProperty("reportarea", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reportarea { get; set; } 

        [JsonProperty("reportarea_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reportarea_name { get; set; } 

        [JsonProperty("restrictto_department_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Restrictto_department_guid { get; set; } 

        [JsonProperty("restrictto_team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Restrictto_team_guid { get; set; } 

        [JsonProperty("clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clients { get; set; } 

        [JsonProperty("tickettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Tickettype_guid { get; set; } 

        [JsonProperty("automationtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automationtype { get; set; } 

        [JsonProperty("optionalservice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optionalservice { get; set; } 

        [JsonProperty("optional_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_agent_id { get; set; } 

        [JsonProperty("optional_team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_team { get; set; } 

        [JsonProperty("optional_status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_status_id { get; set; } 

        [JsonProperty("optional_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_tickettype_id { get; set; } 

        [JsonProperty("optional_create_locked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Optional_create_locked { get; set; } 

        [JsonProperty("optional_defaultresourcetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_defaultresourcetype { get; set; } 

        [JsonProperty("optional_excludefromsla", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_excludefromsla { get; set; } 

        [JsonProperty("optional_customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Optional_customfields { get; set; } 

        [JsonProperty("optional_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Optional_assets { get; set; } 

        [JsonProperty("optional_forwardinboundupdates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_forwardinboundupdates { get; set; } 

        [JsonProperty("optional_showforusers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_showforusers { get; set; } 

        [JsonProperty("optional_urgency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_urgency { get; set; } 

        [JsonProperty("optional_impact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_impact { get; set; } 

        [JsonProperty("optional_workflow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_workflow_id { get; set; } 

        [JsonProperty("optional_estimate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Optional_estimate { get; set; } 

        [JsonProperty("optional_category_1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_category_1 { get; set; } 

        [JsonProperty("optional_category_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_category_2 { get; set; } 

        [JsonProperty("optional_category_3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_category_3 { get; set; } 

        [JsonProperty("optional_category_4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Optional_category_4 { get; set; } 

        [JsonProperty("optional_priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_priority_id { get; set; } 

        [JsonProperty("optional_budgettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_budgettype_id { get; set; } 

        [JsonProperty("optional_kb_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_kb_id { get; set; } 

        [JsonProperty("optional_service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_service { get; set; } 

        [JsonProperty("optional_service_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_service_details_id { get; set; } 

        [JsonProperty("service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service { get; set; } 

        [JsonProperty("optional_sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Optional_sla_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StdrequestDateDependencies
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("parenttemplateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parenttemplateid { get; set; } 

        [JsonProperty("childtemplateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Childtemplateid { get; set; } 

        [JsonProperty("child_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Child_template_name { get; set; } 

        [JsonProperty("dependentchildtemplateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dependentchildtemplateid { get; set; } 

        [JsonProperty("dependent_child_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Dependent_child_template_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StockBin
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("dont_add_to_order", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_add_to_order { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StreamOneIonDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("account_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Account_id { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("import_entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_entities { get; set; } 

        [JsonProperty("top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Top_level { get; set; } 

        [JsonProperty("update_addresses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_addresses { get; set; } 

        [JsonProperty("halointegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegrator { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("client_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_mappings { get; set; } 

        [JsonProperty("top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Top_level_name { get; set; } 

        [JsonProperty("import_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Import_entities_list { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StringObjectDbTypeTuple
    {
        [JsonProperty("item1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item1 { get; set; } 

        [JsonProperty("item2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? Item2 { get; set; } 

        [JsonProperty("item3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public DbType? Item3 { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StringStringValuesKeyValuePair
    {
        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Value { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StripeCreatePortalSession
    {
        [JsonProperty("customerid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customerid { get; set; } 

        [JsonProperty("returnurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Returnurl { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StripeItem
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StripePaymentIntentCreateRequest
    {
        [JsonProperty("items", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StripeItem>? Items { get; set; } 

        [JsonProperty("cardid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cardid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StripePaymentMethod
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("hint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hint { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StripeUpdateInvoicePaymentRequest
    {
        [JsonProperty("payment_intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Payment_intent { get; set; } 

        [JsonProperty("payment_intent_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Payment_intent_client_secret { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class StripeWebhookEndpoint
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("_object", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _object { get; set; } 

        [JsonProperty("created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Created { get; set; } 

        [JsonProperty("enabled_events", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<string>? Enabled_events { get; set; } 

        [JsonProperty("livemode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Livemode { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SubscriptionQuantityChange
    {
        [JsonProperty("licence_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_id { get; set; } 

        [JsonProperty("current_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Current_quantity { get; set; } 

        [JsonProperty("new_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_quantity { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Supplier
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SupplierOrderDetail
    {
        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("sort_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sort_seq { get; set; } 

        [JsonProperty("productcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Productcode { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("quantity_received", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quantity_received { get; set; } 

        [JsonProperty("purchaseorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Purchaseorder_id { get; set; } 

        [JsonProperty("item_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_id { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_id { get; set; } 

        [JsonProperty("isgroupdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isgroupdesc { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("salesorder_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_line_id { get; set; } 

        [JsonProperty("sales_order_stock_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sales_order_stock_location { get; set; } 

        [JsonProperty("item_internal_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_internal_reference { get; set; } 

        [JsonProperty("item_external_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_external_reference { get; set; } 

        [JsonProperty("item_min_purchase_qty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Item_min_purchase_qty { get; set; } 

        [JsonProperty("xero_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_line_id { get; set; } 

        [JsonProperty("item_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_code { get; set; } 

        [JsonProperty("accounts_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accounts_code { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("line_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Line_site_id { get; set; } 

        [JsonProperty("qbo_line_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_line_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("hideitems", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hideitems { get; set; } 

        [JsonProperty("invoiceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoiceid { get; set; } 

        [JsonProperty("asset_type_matching_field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Asset_type_matching_field_name { get; set; } 

        [JsonProperty("serialise_only_one", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Serialise_only_one { get; set; } 

        [JsonProperty("synced_to_intacct", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Synced_to_intacct { get; set; } 

        [JsonProperty("intacct_warehouse_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_warehouse_id { get; set; } 

        [JsonProperty("intacct_location_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_location_id { get; set; } 

        [JsonProperty("intacct_department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_department_id { get; set; } 

        [JsonProperty("_create_invoice_percentage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? _create_invoice_percentage { get; set; } 

        [JsonProperty("percentage_invoiced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percentage_invoiced { get; set; } 

        [JsonProperty("invoiced_quantity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Invoiced_quantity { get; set; } 

        [JsonProperty("myob_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Myob_location { get; set; } 

        [JsonProperty("myob_row_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Myob_row_id { get; set; } 

        [JsonProperty("entity_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_type { get; set; } 

        [JsonProperty("item_dont_receive_on_po", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Item_dont_receive_on_po { get; set; } 

        [JsonProperty("net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_total { get; set; } 

        [JsonProperty("total_tax_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax_converted { get; set; } 

        [JsonProperty("tax_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_converted { get; set; } 

        [JsonProperty("quote_line_distributor_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? Quote_line_distributor_external_link { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("date_received", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_received { get; set; } 

        [JsonProperty("override_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_tax_code { get; set; } 

        [JsonProperty("baseprice_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Baseprice_converted { get; set; } 

        [JsonProperty("baseprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Baseprice { get; set; } 

        [JsonProperty("total_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_tax { get; set; } 

        [JsonProperty("total_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price { get; set; } 

        [JsonProperty("total_discount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_discount { get; set; } 

        [JsonProperty("conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Conversion_rate { get; set; } 

        [JsonProperty("discount_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Discount_converted { get; set; } 

        [JsonProperty("net_amount_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Net_amount_converted { get; set; } 

        [JsonProperty("total_price_converted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_price_converted { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_name { get; set; } 

        [JsonProperty("taxRuleResult", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TaxRuleResult>? TaxRuleResult { get; set; } 

        [JsonProperty("decimalplacesforinvoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Decimalplacesforinvoices { get; set; } 

        [JsonProperty("total_net_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total_net_total { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SupplierOrderHeader
    {
        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("po_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Po_ref { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("datesent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datesent { get; set; } 

        [JsonProperty("carriage_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Carriage_desc { get; set; } 

        [JsonProperty("carriage_price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Carriage_price { get; set; } 

        [JsonProperty("auth_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Auth_by { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("price", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Price { get; set; } 

        [JsonProperty("total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Total { get; set; } 

        [JsonProperty("supplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_id { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("goodsin_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Goodsin_status { get; set; } 

        [JsonProperty("3rd_party_ponumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _3rd_party_ponumber { get; set; } 

        [JsonProperty("date_published", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_published { get; set; } 

        [JsonProperty("approval_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_status { get; set; } 

        [JsonProperty("approval_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Approval_start { get; set; } 

        [JsonProperty("assigned_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assigned_agent { get; set; } 

        [JsonProperty("assigned_agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assigned_agent_name { get; set; } 

        [JsonProperty("approvalagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approvalagent { get; set; } 

        [JsonProperty("approvalemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalemailaddress { get; set; } 

        [JsonProperty("approvalnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approvalnote { get; set; } 

        [JsonProperty("approvalagentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approvalagentid { get; set; } 

        [JsonProperty("approvaldatetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Approvaldatetime { get; set; } 

        [JsonProperty("thirdparty_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Thirdparty_status { get; set; } 

        [JsonProperty("accounts_ref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accounts_ref { get; set; } 

        [JsonProperty("deliver_to_us", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deliver_to_us { get; set; } 

        [JsonProperty("deliver_to_so_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deliver_to_so_address { get; set; } 

        [JsonProperty("deliver_to_ticket_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Deliver_to_ticket_address { get; set; } 

        [JsonProperty("delivery_backup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Delivery_backup { get; set; } 

        [JsonProperty("est_delivery_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Est_delivery_date { get; set; } 

        [JsonProperty("salesorder_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Salesorder_id { get; set; } 

        [JsonProperty("currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currency { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? User { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("cost_centre_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cost_centre_id { get; set; } 

        [JsonProperty("cost_centre_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cost_centre_name { get; set; } 

        [JsonProperty("ticket_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_summary { get; set; } 

        [JsonProperty("ticket_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_note { get; set; } 

        [JsonProperty("attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Attachment_id { get; set; } 

        [JsonProperty("lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SupplierOrderDetail>? Lines { get; set; } 

        [JsonProperty("add_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SupplierOrderDetail>? Add_lines { get; set; } 

        [JsonProperty("_validateonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _validateonly { get; set; } 

        [JsonProperty("_print_preview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_preview { get; set; } 

        [JsonProperty("_print_generate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _print_generate { get; set; } 

        [JsonProperty("printhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Printhtml { get; set; } 

        [JsonProperty("pdf_attachment_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdf_attachment_id { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("pdftemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdftemplate_name { get; set; } 

        [JsonProperty("createdbyagentname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Createdbyagentname { get; set; } 

        [JsonProperty("xero_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_id { get; set; } 

        [JsonProperty("xero_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_id { get; set; } 

        [JsonProperty("xero_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_status { get; set; } 

        [JsonProperty("last_synced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_synced { get; set; } 

        [JsonProperty("last_update_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_update_time { get; set; } 

        [JsonProperty("requires_approval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Requires_approval { get; set; } 

        [JsonProperty("below_approval_minimum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Below_approval_minimum { get; set; } 

        [JsonProperty("approval_for_below_minimum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Approval_for_below_minimum { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("so_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? So_assets { get; set; } 

        [JsonProperty("warrantyurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Warrantyurl { get; set; } 

        [JsonProperty("qbo_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_id { get; set; } 

        [JsonProperty("qbo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qbo_id { get; set; } 

        [JsonProperty("_iscopy", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _iscopy { get; set; } 

        [JsonProperty("_create_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _create_invoice { get; set; } 

        [JsonProperty("_create_invoice_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _create_invoice_method { get; set; } 

        [JsonProperty("_create_invoice_percentage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? _create_invoice_percentage { get; set; } 

        [JsonProperty("_create_invoice_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SupplierOrderDetail>? _create_invoice_lines { get; set; } 

        [JsonProperty("_return_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _return_invoice { get; set; } 

        [JsonProperty("percentage_invoiced", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percentage_invoiced { get; set; } 

        [JsonProperty("invoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<InvoiceHeader>? Invoices { get; set; } 

        [JsonProperty("invoice_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_count { get; set; } 

        [JsonProperty("intacct_save_location", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_save_location { get; set; } 

        [JsonProperty("currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Currency_code { get; set; } 

        [JsonProperty("currency_code_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Currency_code_name { get; set; } 

        [JsonProperty("currency_conversion_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Currency_conversion_rate { get; set; } 

        [JsonProperty("duedate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Duedate { get; set; } 

        [JsonProperty("intacct_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class { get; set; } 

        [JsonProperty("intacct_class_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intacct_class_name { get; set; } 

        [JsonProperty("suppliers_order_reference", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Suppliers_order_reference { get; set; } 

        [JsonProperty("_create_invoice_invoice_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? _create_invoice_invoice_date { get; set; } 

        [JsonProperty("deladdress1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress1 { get; set; } 

        [JsonProperty("deladdress2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress2 { get; set; } 

        [JsonProperty("deladdress3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress3 { get; set; } 

        [JsonProperty("deladdress4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress4 { get; set; } 

        [JsonProperty("deladdress5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deladdress5 { get; set; } 

        [JsonProperty("delivery_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Delivery_address { get; set; } 

        [JsonProperty("_forcethirdpartysync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _forcethirdpartysync { get; set; } 

        [JsonProperty("_create_invoice_amount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? _create_invoice_amount { get; set; } 

        [JsonProperty("_create_invoice_qty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? _create_invoice_qty { get; set; } 

        [JsonProperty("_create_invoice_line_description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _create_invoice_line_description { get; set; } 

        [JsonProperty("_ticket_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _ticket_access { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("is_po_screen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_po_screen { get; set; } 

        [JsonProperty("avalara_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Avalara_details_id { get; set; } 

        [JsonProperty("avalara_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_details_name { get; set; } 

        [JsonProperty("_purchasing_run", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _purchasing_run { get; set; } 

        [JsonProperty("_novalidate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _novalidate { get; set; } 

        [JsonProperty("_dodistributorsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dodistributorsync { get; set; } 

        [JsonProperty("originaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Originaddress { get; set; } 

        [JsonProperty("originaddress1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress1 { get; set; } 

        [JsonProperty("originaddress2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress2 { get; set; } 

        [JsonProperty("originaddress3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress3 { get; set; } 

        [JsonProperty("originaddress4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress4 { get; set; } 

        [JsonProperty("originaddress5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Originaddress5 { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("extratabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tabname>? Extratabs { get; set; } 

        [JsonProperty("_dont_fire_automations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dont_fire_automations { get; set; } 

        [JsonProperty("approval_process_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_process_id { get; set; } 

        [JsonProperty("use_ticket_approval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_ticket_approval { get; set; } 

        [JsonProperty("new_approvalprocess_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_approvalprocess_agent_id { get; set; } 

        [JsonProperty("new_approvalprocess_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_approvalprocess_user_id { get; set; } 

        [JsonProperty("new_approvalprocess_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Users_List>? New_approvalprocess_users { get; set; } 

        [JsonProperty("new_approvalprocess_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_approvalprocess_email { get; set; } 

        [JsonProperty("new_approvalprocess_cab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_approvalprocess_cab_id { get; set; } 

        [JsonProperty("new_approvalprocess_cab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CabMember>? New_approvalprocess_cab { get; set; } 

        [JsonProperty("new_approvalprocess_role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? New_approvalprocess_role_id { get; set; } 

        [JsonProperty("_isbatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isbatch { get; set; } 

        [JsonProperty("token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Token { get; set; } 

        [JsonProperty("receipt_confirmed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receipt_confirmed { get; set; } 

        [JsonProperty("receipt_confirmation_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Receipt_confirmation_date { get; set; } 

        [JsonProperty("_dotaxsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dotaxsync { get; set; } 

        [JsonProperty("tax_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Tax_total { get; set; } 

        [JsonProperty("revenue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Revenue { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SyncroAlert
    {
        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Html { get; set; } 

        [JsonProperty("link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Link { get; set; } 

        [JsonProperty("attributes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SyncroAlertAttributes? Attributes { get; set; } 

        [JsonProperty("device_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Device_name { get; set; } 

        [JsonProperty("customer_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customer_name { get; set; } 

        [JsonProperty("created_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Created_at { get; set; } 

        [JsonProperty("updated_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Updated_at { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("customer_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customer_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SyncroAlertAsset
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SyncroAlertAttributes
    {
        [JsonProperty("properties", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SyncroAlertProperties? Properties { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("customer_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customer_id { get; set; } 

        [JsonProperty("created_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Created_at { get; set; } 

        [JsonProperty("updated_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Updated_at { get; set; } 

        [JsonProperty("customer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SyncroCustomer? Customer { get; set; } 

        [JsonProperty("asset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public SyncroAlertAsset? Asset { get; set; } 

        [JsonProperty("resolved", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Resolved { get; set; } 

        [JsonProperty("computer_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Computer_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SyncroAlertProperties
    {
        [JsonProperty("device_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_id { get; set; } 

        [JsonProperty("trigger", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Trigger { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SyncroCustomer
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("firstname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Firstname { get; set; } 

        [JsonProperty("lastname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastname { get; set; } 

        [JsonProperty("business_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_name { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("phone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone { get; set; } 

        [JsonProperty("mobile", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mobile { get; set; } 

        [JsonProperty("created_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Created_at { get; set; } 

        [JsonProperty("updated_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Updated_at { get; set; } 

        [JsonProperty("pdf_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdf_url { get; set; } 

        [JsonProperty("address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address { get; set; } 

        [JsonProperty("address_2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Address_2 { get; set; } 

        [JsonProperty("city", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? City { get; set; } 

        [JsonProperty("state", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? State { get; set; } 

        [JsonProperty("zip", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Zip { get; set; } 

        [JsonProperty("longitude", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public float? Longitude { get; set; } 

        [JsonProperty("latitude", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public float? Latitude { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("get_sms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Get_sms { get; set; } 

        [JsonProperty("opt_out", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Opt_out { get; set; } 

        [JsonProperty("disabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disabled { get; set; } 

        [JsonProperty("no_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? No_email { get; set; } 

        [JsonProperty("location_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Location_name { get; set; } 

        [JsonProperty("location_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Location_id { get; set; } 

        [JsonProperty("online_profile_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Online_profile_url { get; set; } 

        [JsonProperty("tax_rate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tax_rate_id { get; set; } 

        [JsonProperty("notification_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notification_email { get; set; } 

        [JsonProperty("invoice_cc_emails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_cc_emails { get; set; } 

        [JsonProperty("invoice_term_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_term_id { get; set; } 

        [JsonProperty("referred_by", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Referred_by { get; set; } 

        [JsonProperty("ref_customer_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ref_customer_id { get; set; } 

        [JsonProperty("business_and_full_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_and_full_name { get; set; } 

        [JsonProperty("business_then_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Business_then_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class SynnexDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("client_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Client_mappings { get; set; } 

        [JsonProperty("import_entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_entities { get; set; } 

        [JsonProperty("toplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel { get; set; } 

        [JsonProperty("top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Top_level_name { get; set; } 

        [JsonProperty("update_addresses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_addresses { get; set; } 

        [JsonProperty("application_region", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Application_region { get; set; } 

        [JsonProperty("application_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Application_type { get; set; } 

        [JsonProperty("halointegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Halointegrator { get; set; } 

        [JsonProperty("halointegrator_lastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Halointegrator_lastsync { get; set; } 

        [JsonProperty("halointegrator_lasterror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halointegrator_lasterror { get; set; } 

        [JsonProperty("import_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Import_entities_list { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TOutcome
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("outcome", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Outcome { get; set; } 

        [JsonProperty("buttonname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Buttonname { get; set; } 

        [JsonProperty("labellong", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Labellong { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("hidden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hidden { get; set; } 

        [JsonProperty("systemid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Systemid { get; set; } 

        [JsonProperty("dontshowscreen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontshowscreen { get; set; } 

        [JsonProperty("respondtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Respondtype { get; set; } 

        [JsonProperty("update_parent_attachment_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Update_parent_attachment_type { get; set; } 

        [JsonProperty("sendemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sendemail { get; set; } 

        [JsonProperty("sendsms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sendsms { get; set; } 

        [JsonProperty("actionvisibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Actionvisibility { get; set; } 

        [JsonProperty("child_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_template_id { get; set; } 

        [JsonProperty("createchildticketortemplate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Createchildticketortemplate { get; set; } 

        [JsonProperty("child_ticket_type_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_ticket_type_id { get; set; } 

        [JsonProperty("tfstype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tfstype { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("translate_before_sending", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Translate_before_sending { get; set; } 

        [JsonProperty("colour_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Colour_type { get; set; } 

        [JsonProperty("child_template_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Child_template_guid { get; set; } 

        [JsonProperty("child_ticket_type_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Child_ticket_type_guid { get; set; } 

        [JsonProperty("newstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newstatus { get; set; } 

        [JsonProperty("newstatus_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Newstatus_guid { get; set; } 

        [JsonProperty("slaholdischecked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Slaholdischecked { get; set; } 

        [JsonProperty("userdesc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Userdesc { get; set; } 

        [JsonProperty("emailtemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailtemplate_id { get; set; } 

        [JsonProperty("emailtemplate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Emailtemplate_guid { get; set; } 

        [JsonProperty("emailtemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailtemplate_name { get; set; } 

        [JsonProperty("slareleaseischecked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Slareleaseischecked { get; set; } 

        [JsonProperty("chargerate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate { get; set; } 

        [JsonProperty("defaultuserdef", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultuserdef { get; set; } 

        [JsonProperty("defaultmanhrs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Defaultmanhrs { get; set; } 

        [JsonProperty("defaultnonbill", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Defaultnonbill { get; set; } 

        [JsonProperty("securitylevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Securitylevel { get; set; } 

        [JsonProperty("approval_process_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approval_process_id { get; set; } 

        [JsonProperty("approval_process_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Approval_process_guid { get; set; } 

        [JsonProperty("approval_process_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Approval_process_name { get; set; } 

        [JsonProperty("hidefromuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hidefromuser { get; set; } 

        [JsonProperty("fieldvisible", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldvisible { get; set; } 

        [JsonProperty("hotkey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hotkey { get; set; } 

        [JsonProperty("buttonimage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Buttonimage { get; set; } 

        [JsonProperty("hidesendemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hidesendemail { get; set; } 

        [JsonProperty("hidesendsms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hidesendsms { get; set; } 

        [JsonProperty("hidecloserequest", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hidecloserequest { get; set; } 

        [JsonProperty("defaultagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultagent { get; set; } 

        [JsonProperty("defaultagent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultagent_name { get; set; } 

        [JsonProperty("defaultpriority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultpriority { get; set; } 

        [JsonProperty("defaultteam", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultteam { get; set; } 

        [JsonProperty("includecc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includecc { get; set; } 

        [JsonProperty("includeto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includeto { get; set; } 

        [JsonProperty("default_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_note { get; set; } 

        [JsonProperty("mustassign", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mustassign { get; set; } 

        [JsonProperty("requesttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Requesttype { get; set; } 

        [JsonProperty("requesttype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Requesttype_guid { get; set; } 

        [JsonProperty("mustaddnote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mustaddnote { get; set; } 

        [JsonProperty("worddocid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Worddocid { get; set; } 

        [JsonProperty("worddocpath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Worddocpath { get; set; } 

        [JsonProperty("synctosap", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Synctosap { get; set; } 

        [JsonProperty("child_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Child_template_name { get; set; } 

        [JsonProperty("child_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Child_ticket_type_name { get; set; } 

        [JsonProperty("tooverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tooverride { get; set; } 

        [JsonProperty("ccoverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ccoverride { get; set; } 

        [JsonProperty("bccoverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Bccoverride { get; set; } 

        [JsonProperty("workflow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workflow_id { get; set; } 

        [JsonProperty("workflow_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Workflow_guid { get; set; } 

        [JsonProperty("workflow_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workflow_name { get; set; } 

        [JsonProperty("workflow_step_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workflow_step_id { get; set; } 

        [JsonProperty("workflow_step_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workflow_step_name { get; set; } 

        [JsonProperty("synctodynamics", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Synctodynamics { get; set; } 

        [JsonProperty("showhidecheckbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showhidecheckbox { get; set; } 

        [JsonProperty("showslacheckbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showslacheckbox { get; set; } 

        [JsonProperty("showimportantcheckbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showimportantcheckbox { get; set; } 

        [JsonProperty("isimportant", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isimportant { get; set; } 

        [JsonProperty("showfollowcheckbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showfollowcheckbox { get; set; } 

        [JsonProperty("follow", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Follow { get; set; } 

        [JsonProperty("primaryserviceusersfollow", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Primaryserviceusersfollow { get; set; } 

        [JsonProperty("defaultappointmentstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultappointmentstatus { get; set; } 

        [JsonProperty("reportid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Reportid { get; set; } 

        [JsonProperty("report_attach_pdf", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Report_attach_pdf { get; set; } 

        [JsonProperty("report_attach_xls", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Report_attach_xls { get; set; } 

        [JsonProperty("report_attach_csv", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Report_attach_csv { get; set; } 

        [JsonProperty("report_attach_json", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Report_attach_json { get; set; } 

        [JsonProperty("reportname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Reportname { get; set; } 

        [JsonProperty("todo_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Todo_template_id { get; set; } 

        [JsonProperty("todo_template_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Todo_template_guid { get; set; } 

        [JsonProperty("todo_template_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Todo_template_name { get; set; } 

        [JsonProperty("child_emailtemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Child_emailtemplate_id { get; set; } 

        [JsonProperty("child_emailtemplate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Child_emailtemplate_guid { get; set; } 

        [JsonProperty("child_emailtemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Child_emailtemplate_name { get; set; } 

        [JsonProperty("default_linkedticket_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_linkedticket_status { get; set; } 

        [JsonProperty("default_linkedticket_status_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Default_linkedticket_status_guid { get; set; } 

        [JsonProperty("newaction_subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newaction_subject { get; set; } 

        [JsonProperty("newaction_subject_close", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newaction_subject_close { get; set; } 

        [JsonProperty("newaction_emailto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newaction_emailto { get; set; } 

        [JsonProperty("newaction_emailcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newaction_emailcc { get; set; } 

        [JsonProperty("newaction_emailbcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newaction_emailbcc { get; set; } 

        [JsonProperty("newaction_emailfrom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newaction_emailfrom { get; set; } 

        [JsonProperty("newaction_emailfrom_address_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newaction_emailfrom_address_override { get; set; } 

        [JsonProperty("newaction_projecttimebudget", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Newaction_projecttimebudget { get; set; } 

        [JsonProperty("newaction_supplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Company? Newaction_supplier { get; set; } 

        [JsonProperty("newaction_supplier_contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newaction_supplier_contract_id { get; set; } 

        [JsonProperty("newaction_supplier_sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newaction_supplier_sla_id { get; set; } 

        [JsonProperty("newaction_supplier_priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newaction_supplier_priority_id { get; set; } 

        [JsonProperty("newaction_thirdpartynhdapiurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newaction_thirdpartynhdapiurl { get; set; } 

        [JsonProperty("newaction_thirdpartynhdapiareaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newaction_thirdpartynhdapiareaid { get; set; } 

        [JsonProperty("newaction_thirdpartynhdapisupplierid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newaction_thirdpartynhdapisupplierid { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestTypeField>? Fields { get; set; } 

        [JsonProperty("newticket_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Users? Newticket_user { get; set; } 

        [JsonProperty("from_action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? From_action_id { get; set; } 

        [JsonProperty("to_ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? To_ticket_id { get; set; } 

        [JsonProperty("newticket_summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newticket_summary { get; set; } 

        [JsonProperty("newticket_details", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newticket_details { get; set; } 

        [JsonProperty("newticket_tickettype_hidden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newticket_tickettype_hidden { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment_List>? Attachments { get; set; } 

        [JsonProperty("_ticketinfoloaded", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _ticketinfoloaded { get; set; } 

        [JsonProperty("script_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Script_id { get; set; } 

        [JsonProperty("script_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Script_name { get; set; } 

        [JsonProperty("usetimer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Usetimer { get; set; } 

        [JsonProperty("update_dynamic_email_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_dynamic_email_list { get; set; } 

        [JsonProperty("skip_pending_closure", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Skip_pending_closure { get; set; } 

        [JsonProperty("newsummaryfromsource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newsummaryfromsource { get; set; } 

        [JsonProperty("newdetailsfromsource", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Newdetailsfromsource { get; set; } 

        [JsonProperty("show_email_fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_email_fields { get; set; } 

        [JsonProperty("logtimeunits", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Logtimeunits { get; set; } 

        [JsonProperty("callscreencallscript", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Callscreencallscript { get; set; } 

        [JsonProperty("callscreencallscript_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Callscreencallscript_name { get; set; } 

        [JsonProperty("newaction_smsto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Newaction_smsto { get; set; } 

        [JsonProperty("pdftemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pdftemplate_id { get; set; } 

        [JsonProperty("pdftemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pdftemplate_name { get; set; } 

        [JsonProperty("excludeFromDynamicLists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? ExcludeFromDynamicLists { get; set; } 

        [JsonProperty("automation_runbookid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Automation_runbookid { get; set; } 

        [JsonProperty("automation_runbookname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Automation_runbookname { get; set; } 

        [JsonProperty("integration_method_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_method_id { get; set; } 

        [JsonProperty("integration_method_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integration_method_name { get; set; } 

        [JsonProperty("setdetailsfromnewticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Setdetailsfromnewticket { get; set; } 

        [JsonProperty("hideactionfromcandi", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hideactionfromcandi { get; set; } 

        [JsonProperty("setemailbodytonote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Setemailbodytonote { get; set; } 

        [JsonProperty("bccfollowers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Bccfollowers { get; set; } 

        [JsonProperty("followersccbcc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Followersccbcc { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("showevenifnochild", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showevenifnochild { get; set; } 

        [JsonProperty("replytype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Replytype { get; set; } 

        [JsonProperty("parentdefaultuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parentdefaultuser { get; set; } 

        [JsonProperty("parentdefaultuser_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Parentdefaultuser_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("assetsearchtext", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetsearchtext { get; set; } 

        [JsonProperty("action_resets_response", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Action_resets_response { get; set; } 

        [JsonProperty("showattachmentstouser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showattachmentstouser { get; set; } 

        [JsonProperty("customurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customurl { get; set; } 

        [JsonProperty("defaultcat1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultcat1 { get; set; } 

        [JsonProperty("defaultcat2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultcat2 { get; set; } 

        [JsonProperty("defaultcat3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultcat3 { get; set; } 

        [JsonProperty("defaultcat4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultcat4 { get; set; } 

        [JsonProperty("includeallattachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includeallattachments { get; set; } 

        [JsonProperty("useremailintellisense", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useremailintellisense { get; set; } 

        [JsonProperty("supplieremailintellisense", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplieremailintellisense { get; set; } 

        [JsonProperty("azure_action", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_action { get; set; } 

        [JsonProperty("azure_connection_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_connection_id { get; set; } 

        [JsonProperty("azure_connection_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_connection_name { get; set; } 

        [JsonProperty("azure_connection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AzureADConnection? Azure_connection { get; set; } 

        [JsonProperty("azure_input_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Azure_input_mappings { get; set; } 

        [JsonProperty("azure_output_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Azure_output_mappings { get; set; } 

        [JsonProperty("default_sync_to_salesforce", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_sync_to_salesforce { get; set; } 

        [JsonProperty("show_to_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_to_user { get; set; } 

        [JsonProperty("defaultsupplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultsupplier_id { get; set; } 

        [JsonProperty("defaultsupplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Defaultsupplier_name { get; set; } 

        [JsonProperty("isbillingaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isbillingaction { get; set; } 

        [JsonProperty("ishiddenfrominternalit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ishiddenfrominternalit { get; set; } 

        [JsonProperty("default_sync_to_servicenow", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_sync_to_servicenow { get; set; } 

        [JsonProperty("default_asset_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_asset_type { get; set; } 

        [JsonProperty("default_asset_type_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Default_asset_type_guid { get; set; } 

        [JsonProperty("default_asset_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_asset_type_name { get; set; } 

        [JsonProperty("showautorelease", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showautorelease { get; set; } 

        [JsonProperty("workflows", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Workflows { get; set; } 

        [JsonProperty("quoter_template", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Quoter_template { get; set; } 

        [JsonProperty("apptcompletetimetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Apptcompletetimetype { get; set; } 

        [JsonProperty("default_asset_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_asset_status { get; set; } 

        [JsonProperty("tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Tickettypes { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("travelrate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Travelrate { get; set; } 

        [JsonProperty("default_sync_to_jira", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_sync_to_jira { get; set; } 

        [JsonProperty("newaction_thirdpartynhdjirasupplierid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newaction_thirdpartynhdjirasupplierid { get; set; } 

        [JsonProperty("allow_user_attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_user_attachments { get; set; } 

        [JsonProperty("default_send_to_halo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_send_to_halo { get; set; } 

        [JsonProperty("tagreleasetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tagreleasetype { get; set; } 

        [JsonProperty("releaseid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Releaseid { get; set; } 

        [JsonProperty("releasename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Releasename { get; set; } 

        [JsonProperty("releaseid2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Releaseid2 { get; set; } 

        [JsonProperty("releasename2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Releasename2 { get; set; } 

        [JsonProperty("releaseid3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Releaseid3 { get; set; } 

        [JsonProperty("releasename3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Releasename3 { get; set; } 

        [JsonProperty("showsendtwitter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showsendtwitter { get; set; } 

        [JsonProperty("showsendfacebook", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showsendfacebook { get; set; } 

        [JsonProperty("lastusercontactmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastusercontactmethod { get; set; } 

        [JsonProperty("default_private_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_private_note { get; set; } 

        [JsonProperty("ai_operation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ai_operation { get; set; } 

        [JsonProperty("ai_model", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(100)]
        public string? Ai_model { get; set; } 

        [JsonProperty("ai_prompt", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Ai_prompt { get; set; } 

        [JsonProperty("showsendwhatsapp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showsendwhatsapp { get; set; } 

        [JsonProperty("default_opp_closure_cat", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_opp_closure_cat { get; set; } 

        [JsonProperty("default_send_to_pagerduty", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_send_to_pagerduty { get; set; } 

        [JsonProperty("minattachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Minattachments { get; set; } 

        [JsonProperty("defaultappointmenttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultappointmenttype { get; set; } 

        [JsonProperty("showsendsurvey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showsendsurvey { get; set; } 

        [JsonProperty("sendsurvey", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sendsurvey { get; set; } 

        [JsonProperty("showsendinstagram", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showsendinstagram { get; set; } 

        [JsonProperty("showslacheckbox_mandatory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showslacheckbox_mandatory { get; set; } 

        [JsonProperty("ai_preview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ai_preview { get; set; } 

        [JsonProperty("ai_improve_agent_note_default_on", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ai_improve_agent_note_default_on { get; set; } 

        [JsonProperty("defaultcommunicationmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultcommunicationmethod { get; set; } 

        [JsonProperty("newaction_thirdpartynhdservicenowsupplierid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newaction_thirdpartynhdservicenowsupplierid { get; set; } 

        [JsonProperty("related_note_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Related_note_visibility { get; set; } 

        [JsonProperty("override_from_mailbox_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_from_mailbox_id { get; set; } 

        [JsonProperty("override_from_mailbox_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Override_from_mailbox_name { get; set; } 

        [JsonProperty("create_issue_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Create_issue_type { get; set; } 

        [JsonProperty("show_when_locked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_when_locked { get; set; } 

        [JsonProperty("showsendgooglebusiness", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showsendgooglebusiness { get; set; } 

        [JsonProperty("submitlabeloverride", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Submitlabeloverride { get; set; } 

        [JsonProperty("default_send_jira_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_send_jira_note { get; set; } 

        [JsonProperty("config_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Config_type { get; set; } 

        [JsonProperty("show_on_parent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Show_on_parent { get; set; } 

        [JsonProperty("show_on_child", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Show_on_child { get; set; } 

        [JsonProperty("newactiondisplay", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newactiondisplay { get; set; } 

        [JsonProperty("newactiondisplaysize", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newactiondisplaysize { get; set; } 

        [JsonProperty("lapsafe_default_installation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lapsafe_default_installation { get; set; } 

        [JsonProperty("lapsafe_default_installation_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lapsafe_default_installation_name { get; set; } 

        [JsonProperty("lapsafe_default_installation_obj", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Lapsafe_default_installation_obj { get; set; } 

        [JsonProperty("hide_header_button", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_header_button { get; set; } 

        [JsonProperty("charge_rate_overrides_ticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Charge_rate_overrides_ticket { get; set; } 

        [JsonProperty("linked_from_variable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Linked_from_variable { get; set; } 

        [JsonProperty("default_team_to_agents_default", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Default_team_to_agents_default { get; set; } 

        [JsonProperty("do_not_allow_with_open_appointments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Do_not_allow_with_open_appointments { get; set; } 

        [JsonProperty("new_ticket_attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_ticket_attachments { get; set; } 

        [JsonProperty("run_ai_insights", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Run_ai_insights { get; set; } 

        [JsonProperty("sales_mailbox_override_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sales_mailbox_override_id { get; set; } 

        [JsonProperty("hide_user_visibility_toggle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hide_user_visibility_toggle { get; set; } 

        [JsonProperty("email_editing", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Email_editing { get; set; } 

        [JsonProperty("default_distribution_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_distribution_list { get; set; } 

        [JsonProperty("default_distribution_list_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_distribution_list_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TStatus
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("shortname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Shortname { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("slaaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Slaaction { get; set; } 

        [JsonProperty("ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_count { get; set; } 

        [JsonProperty("showonquickchange", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonquickchange { get; set; } 

        [JsonProperty("timeuntilloffhold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Timeuntilloffhold { get; set; } 

        [JsonProperty("statuschangeto", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statuschangeto { get; set; } 

        [JsonProperty("statuschangetofreq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Statuschangetofreq { get; set; } 

        [JsonProperty("statusnochangehours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Statusnochangehours { get; set; } 

        [JsonProperty("nochangehoursrecurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Nochangehoursrecurring { get; set; } 

        [JsonProperty("statusnochangehoursmanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statusnochangehoursmanager { get; set; } 

        [JsonProperty("statusnochangehoursmanagerrecurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Statusnochangehoursmanagerrecurring { get; set; } 

        [JsonProperty("statusnochangehourssection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Statusnochangehourssection { get; set; } 

        [JsonProperty("statusnochangehourssectionrecurring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Statusnochangehourssectionrecurring { get; set; } 

        [JsonProperty("nochangetemplate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Nochangetemplate { get; set; } 

        [JsonProperty("nochangetemplate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Nochangetemplate_guid { get; set; } 

        [JsonProperty("includeinloadbalance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includeinloadbalance { get; set; } 

        [JsonProperty("statusemailfreqdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statusemailfreqdays { get; set; } 

        [JsonProperty("statusemailid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Statusemailid { get; set; } 

        [JsonProperty("statusemail_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Statusemail_guid { get; set; } 

        [JsonProperty("statusemailname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Statusemailname { get; set; } 

        [JsonProperty("notifystatuschange", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Notifystatuschange { get; set; } 

        [JsonProperty("dontsendslareminders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontsendslareminders { get; set; } 

        [JsonProperty("nochangetemplatename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nochangetemplatename { get; set; } 

        [JsonProperty("slaignorerelease", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Slaignorerelease { get; set; } 

        [JsonProperty("statuschangetoname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Statuschangetoname { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("useworkinghours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useworkinghours { get; set; } 

        [JsonProperty("useworkinghours_statusnochangehours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useworkinghours_statusnochangehours { get; set; } 

        [JsonProperty("useworkinghours_statusnochangehourssection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useworkinghours_statusnochangehourssection { get; set; } 

        [JsonProperty("useworkinghours_statusnochangehoursmanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useworkinghours_statusnochangehoursmanager { get; set; } 

        [JsonProperty("tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Tickettypes { get; set; } 

        [JsonProperty("outcomes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Outcomes { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TabConfig
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("usage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Usage { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id { get; set; } 

        [JsonProperty("screenlayout_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Screenlayout_id { get; set; } 

        [JsonProperty("tab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_id { get; set; } 

        [JsonProperty("tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tab_name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Display { get; set; } 

        [JsonProperty("icon_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Icon_override { get; set; } 

        [JsonProperty("new_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_icon { get; set; } 

        [JsonProperty("nosidemenu", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Nosidemenu { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TableEnum
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

        _5 = 5,

        _6 = 6,

        _7 = 7,

        _8 = 8,

        _9 = 9,

        _987 = 987,

        _988 = 988,

        _989 = 989,

        _990 = 990,

        _991 = 991,

        _992 = 992,

        _993 = 993,

        _995 = 995,

        _996 = 996,

        _997 = 997,

        _998 = 998,

        _999 = 999,

        _1001 = 1001,

        _1002 = 1002,

        _1003 = 1003,

        _1005 = 1005,

        _1006 = 1006,

        _1007 = 1007,

        _1008 = 1008,

        _1009 = 1009,

        _1010 = 1010,

        _1011 = 1011,

        _1012 = 1012,

        _1013 = 1013,

        _1014 = 1014,

        _1015 = 1015,

        _1016 = 1016,

        _1017 = 1017,

        _1018 = 1018,

        _1020 = 1020,

        __1 = -1,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Tabname
    {
        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("tableid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tableid { get; set; } 

        [JsonProperty("columns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Columns { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldInfo>? Fields { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("linked_dashboard_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_dashboard_id { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("send_secure_url_parameter", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Send_secure_url_parameter { get; set; } 

        [JsonProperty("new_iframe_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_iframe_secret { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Tag
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("add_to_kbid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_to_kbid { get; set; } 

        [JsonProperty("add_to_ctid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_to_ctid { get; set; } 

        [JsonProperty("add_to_stid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Add_to_stid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TaniumDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("apiurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Apiurl { get; set; } 

        [JsonProperty("new_integration_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_integration_key { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("tokenexpiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Tokenexpiry { get; set; } 

        [JsonProperty("default_devicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicesite { get; set; } 

        [JsonProperty("default_devicesite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicesite_name { get; set; } 

        [JsonProperty("default_devicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicetype { get; set; } 

        [JsonProperty("default_devicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicetypename { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_fieldname { get; set; } 

        [JsonProperty("asset_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Asset_fieldmappings { get; set; } 

        [JsonProperty("sitemappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationSiteMapping>? Sitemappings { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("halo_integrator_import_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_integrator_import_list { get; set; } 

        [JsonProperty("halo_integrator_import_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Halo_integrator_import_types { get; set; } 

        [JsonProperty("delete_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete_devices { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

        [JsonProperty("dont_update_device_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_device_type { get; set; } 

        [JsonProperty("dont_move_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_site { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("default_assetgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup { get; set; } 

        [JsonProperty("default_assetgroupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroupname { get; set; } 

        [JsonProperty("assettype_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_choice { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_field { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Tax
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Value { get; set; } 

        [JsonProperty("thirdparty_tax_rates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Thirdparty_tax_rates { get; set; } 

        [JsonProperty("xero_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_id { get; set; } 

        [JsonProperty("xero_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xero_tenant_name { get; set; } 

        [JsonProperty("third_party_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_desc { get; set; } 

        [JsonProperty("is_composite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_composite { get; set; } 

        [JsonProperty("linked_rates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tax>? Linked_rates { get; set; } 

        [JsonProperty("xerotaxrate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Xerotaxrate { get; set; } 

        [JsonProperty("kashflow_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Kashflow_tenant_id { get; set; } 

        [JsonProperty("kashflow_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kashflow_tenant_name { get; set; } 

        [JsonProperty("kashflowtaxrate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Kashflowtaxrate { get; set; } 

        [JsonProperty("qbotaxrate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Qbotaxrate { get; set; } 

        [JsonProperty("qbocode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbocode { get; set; } 

        [JsonProperty("qbocode_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbocode_name { get; set; } 

        [JsonProperty("qbotaxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Qbotaxcode { get; set; } 

        [JsonProperty("qbo_company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_id { get; set; } 

        [JsonProperty("qbo_company_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qbo_company_name { get; set; } 

        [JsonProperty("sageintacttaxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Sageintacttaxcode { get; set; } 

        [JsonProperty("sage_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sage_tenant_id { get; set; } 

        [JsonProperty("sage_tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sage_tenant_name { get; set; } 

        [JsonProperty("sagebusinesscloudtaxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Sagebusinesscloudtaxcode { get; set; } 

        [JsonProperty("exact_division", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Exact_division { get; set; } 

        [JsonProperty("exact_division_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exact_division_name { get; set; } 

        [JsonProperty("exacttaxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Exacttaxcode { get; set; } 

        [JsonProperty("onseparateline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Onseparateline { get; set; } 

        [JsonProperty("myobtaxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Myobtaxcode { get; set; } 

        [JsonProperty("myob_details_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Myob_details_id { get; set; } 

        [JsonProperty("myob_details_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Myob_details_name { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("avalara_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Avalara_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("category_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_code { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TaxRule
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("taxid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Taxid { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("tax_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tax_name { get; set; } 

        [JsonProperty("tax_conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TaxRuleConditions>? Tax_conditions { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TaxRuleConditions
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tax_rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tax_rule_id { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("value_lookup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Value_lookup { get; set; } 

        [JsonProperty("value_bool", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Value_bool { get; set; } 

        [JsonProperty("value_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_display { get; set; } 

        [JsonProperty("value_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TaxRuleResult
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tableenum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tableenum { get; set; } 

        [JsonProperty("tableid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Tableid { get; set; } 

        [JsonProperty("lineid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lineid { get; set; } 

        [JsonProperty("entityid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entityid { get; set; } 

        [JsonProperty("taxamount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Taxamount { get; set; } 

        [JsonProperty("taxcode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Taxcode { get; set; } 

        [JsonProperty("module_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Module_id { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("thirdpartyname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyname { get; set; } 

        [JsonProperty("taxid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Taxid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TeamsChatMessage_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("chat_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Chat_id { get; set; } 

        [JsonProperty("message_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message_id { get; set; } 

        [JsonProperty("external_link_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? External_link_id { get; set; } 

        [JsonProperty("note_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note_html { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("who_azure_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Who_azure_id { get; set; } 

        [JsonProperty("who", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Who { get; set; } 

        [JsonProperty("datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datetime { get; set; } 

        [JsonProperty("whoagent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Whoagent_id { get; set; } 

        [JsonProperty("whoagent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Whoagent_name { get; set; } 

        [JsonProperty("_sendmessage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _sendmessage { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("remote_session_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Remote_session_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TeamsManifestCreate
    {
        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("shortDescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ShortDescription { get; set; } 

        [JsonProperty("longDescription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? LongDescription { get; set; } 

        [JsonProperty("iconColor", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? IconColor { get; set; } 

        [JsonProperty("iconOutline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? IconOutline { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TechDataResellerDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("region", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Region { get; set; } 

        [JsonProperty("api_to_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Api_to_use { get; set; } 

        [JsonProperty("customer_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customer_number { get; set; } 

        [JsonProperty("application_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Application_type { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TechPartsLookup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("lookup_profile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lookup_profile_id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("lookup_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lookup_value { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TenableCreateExport
    {
        [JsonProperty("chunk_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chunk_size { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TenableDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key { get; set; } 

        [JsonProperty("new_integration_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_integration_key { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("default_devicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicesite { get; set; } 

        [JsonProperty("default_devicesite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicesite_name { get; set; } 

        [JsonProperty("default_devicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicetype { get; set; } 

        [JsonProperty("default_devicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicetypename { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_fieldname { get; set; } 

        [JsonProperty("fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Fieldmappings { get; set; } 

        [JsonProperty("sitemappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationSiteMapping>? Sitemappings { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("delete_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete_devices { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

        [JsonProperty("dont_update_device_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_device_type { get; set; } 

        [JsonProperty("dont_move_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_site { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("default_assetgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup { get; set; } 

        [JsonProperty("default_assetgroupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroupname { get; set; } 

        [JsonProperty("assettype_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_choice { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_field { get; set; } 

        [JsonProperty("exports", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationExport>? Exports { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TicketArea
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("entity_singular", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_singular { get; set; } 

        [JsonProperty("entity_plural", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_plural { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("default_filter_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_filter_id { get; set; } 

        [JsonProperty("default_filter_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_filter_name { get; set; } 

        [JsonProperty("default_view", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view { get; set; } 

        [JsonProperty("default_view_selectedid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_view_selectedid { get; set; } 

        [JsonProperty("default_view_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_selectedname { get; set; } 

        [JsonProperty("default_columns_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id { get; set; } 

        [JsonProperty("default_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_ticket_type { get; set; } 

        [JsonProperty("default_itil_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_itil_ticket_type { get; set; } 

        [JsonProperty("default_template_group_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_template_group_id { get; set; } 

        [JsonProperty("default_columns_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_columns_name { get; set; } 

        [JsonProperty("selectservice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Selectservice { get; set; } 

        [JsonProperty("enableprojecttreeview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableprojecttreeview { get; set; } 

        [JsonProperty("showtabondetailsscreens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showtabondetailsscreens { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ViewFilterDetails>? Filters { get; set; } 

        [JsonProperty("team_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaSectionDetail>? Team_restrictions { get; set; } 

        [JsonProperty("area_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Area_use { get; set; } 

        [JsonProperty("area_use_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Area_use_name { get; set; } 

        [JsonProperty("shownewticketbutton", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Shownewticketbutton { get; set; } 

        [JsonProperty("allow_ticket_type_selection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Allow_ticket_type_selection { get; set; } 

        [JsonProperty("kanbanstatuschoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Kanbanstatuschoice { get; set; } 

        [JsonProperty("kanbanstatuschoice_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kanbanstatuschoice_list { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TimeSheetApprovalStatus
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Timesheet
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("start_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_time { get; set; } 

        [JsonProperty("end_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_time { get; set; } 

        [JsonProperty("estimated_start_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Estimated_start_time { get; set; } 

        [JsonProperty("estimated_end_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Estimated_end_time { get; set; } 

        [JsonProperty("target_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Target_hours { get; set; } 

        [JsonProperty("actual_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Actual_hours { get; set; } 

        [JsonProperty("break_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Break_hours { get; set; } 

        [JsonProperty("unlogged_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Unlogged_hours { get; set; } 

        [JsonProperty("allowed_break_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Allowed_break_hours { get; set; } 

        [JsonProperty("work_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Work_hours { get; set; } 

        [JsonProperty("percentage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Percentage { get; set; } 

        [JsonProperty("workdayid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workdayid { get; set; } 

        [JsonProperty("events", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TimesheetEvent>? Events { get; set; } 

        [JsonProperty("timesheet_manager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Timesheet_manager { get; set; } 

        [JsonProperty("forecasting_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Forecasting_id { get; set; } 

        [JsonProperty("_submitapproval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _submitapproval { get; set; } 

        [JsonProperty("_approve", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _approve { get; set; } 

        [JsonProperty("_reject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _reject { get; set; } 

        [JsonProperty("approval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TimesheetApproval? Approval { get; set; } 

        [JsonProperty("_approval_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _approval_message { get; set; } 

        [JsonProperty("chargeable_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Chargeable_hours { get; set; } 

        [JsonProperty("forecasting_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Forecasting_hours { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TimesheetApproval
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("tsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tsid { get; set; } 

        [JsonProperty("unum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Unum { get; set; } 

        [JsonProperty("approvalstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TimeSheetApprovalStatus? Approvalstatus { get; set; } 

        [JsonProperty("approvedby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approvedby { get; set; } 

        [JsonProperty("submissiondate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Submissiondate { get; set; } 

        [JsonProperty("approver", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Approver { get; set; } 

        [JsonProperty("message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Message { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TimesheetEvent
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("event_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Event_type { get; set; } 

        [JsonProperty("subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subject { get; set; } 

        [JsonProperty("start_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start_date { get; set; } 

        [JsonProperty("end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End_date { get; set; } 

        [JsonProperty("timetaken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Timetaken { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("break_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Break_type { get; set; } 

        [JsonProperty("break_note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Break_note { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("action_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action_number { get; set; } 

        [JsonProperty("action_invoice_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action_invoice_number { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Note { get; set; } 

        [JsonProperty("customer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customer { get; set; } 

        [JsonProperty("holiday_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Holiday_id { get; set; } 

        [JsonProperty("charge_type_colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Charge_type_colour { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("charge_rate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Charge_rate { get; set; } 

        [JsonProperty("mileage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mileage { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("lognewticket", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Lognewticket { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("category1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category1 { get; set; } 

        [JsonProperty("category2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category2 { get; set; } 

        [JsonProperty("category3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category3 { get; set; } 

        [JsonProperty("category4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category4 { get; set; } 

        [JsonProperty("contract_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contract_id { get; set; } 

        [JsonProperty("agents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Agents { get; set; } 

        [JsonProperty("clear_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Clear_end { get; set; } 

        [JsonProperty("traveltime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Traveltime { get; set; } 

        [JsonProperty("originalstartdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Originalstartdate { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("charge_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Charge_type_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Timeslot
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("workday_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workday_id { get; set; } 

        [JsonProperty("workday_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Workday_guid { get; set; } 

        [JsonProperty("bookingtype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Bookingtype_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("start_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Start_time { get; set; } 

        [JsonProperty("end_time", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? End_time { get; set; } 

        [JsonProperty("start_label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Start_label { get; set; } 

        [JsonProperty("end_label", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? End_label { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ToDoGroup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("todo_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FaultToDo>? Todo_list { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TopLinkClick
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Count { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Trace
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("tracetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TraceType? Tracetype { get; set; } 

        [JsonProperty("relatedid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relatedid { get; set; } 

        [JsonProperty("systemeventid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Systemeventid { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("log", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Log { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum TraceType
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

        _5 = 5,

        _6 = 6,

        _7 = 7,

        _8 = 8,

        _9 = 9,

        _10 = 10,

        _11 = 11,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Tree
    {
        [JsonProperty("toplevel_mailbox_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Toplevel_mailbox_override { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("accounts_override_mailbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Accounts_override_mailbox { get; set; } 

        [JsonProperty("concurrent_lic_limit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Concurrent_lic_limit { get; set; } 

        [JsonProperty("parentid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parentid { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("kashflowurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kashflowurl { get; set; } 

        [JsonProperty("kashflowusername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kashflowusername { get; set; } 

        [JsonProperty("kashflowpassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kashflowpassword { get; set; } 

        [JsonProperty("mailbox_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mailbox_override { get; set; } 

        [JsonProperty("agent_department", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Agent_department { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("agents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameDepartment>? Agents { get; set; } 

        [JsonProperty("users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserDepartment>? Users { get; set; } 

        [JsonProperty("cannedtext", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CannedText>? Cannedtext { get; set; } 

        [JsonProperty("templates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<StdRequest_List>? Templates { get; set; } 

        [JsonProperty("announcement", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Announcement { get; set; } 

        [JsonProperty("invoice_class", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Invoice_class { get; set; } 

        [JsonProperty("quote_profit_currency", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quote_profit_currency { get; set; } 

        [JsonProperty("quote_profit_currency_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Quote_profit_currency_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("_canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("organisation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Organisation_id { get; set; } 

        [JsonProperty("organisation_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Organisation_guid { get; set; } 

        [JsonProperty("organisation_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Organisation_name { get; set; } 

        [JsonProperty("org_department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Org_department_name { get; set; } 

        [JsonProperty("long_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Long_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("teams", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SectionDetail_List>? Teams { get; set; } 

        [JsonProperty("agent_members", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Uname_List>? Agent_members { get; set; } 

        [JsonProperty("managers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Manager>? Managers { get; set; } 

        [JsonProperty("user_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_count { get; set; } 

        [JsonProperty("open_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_ticket_count { get; set; } 

        [JsonProperty("onhold_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onhold_ticket_count { get; set; } 

        [JsonProperty("total_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_ticket_count { get; set; } 

        [JsonProperty("opened_thismonth_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opened_thismonth_count { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Tree_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("accounts_override_mailbox", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Accounts_override_mailbox { get; set; } 

        [JsonProperty("concurrent_lic_limit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Concurrent_lic_limit { get; set; } 

        [JsonProperty("organisation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Organisation_id { get; set; } 

        [JsonProperty("organisation_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Organisation_guid { get; set; } 

        [JsonProperty("organisation_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Organisation_name { get; set; } 

        [JsonProperty("org_department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Org_department_name { get; set; } 

        [JsonProperty("long_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Long_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("teams", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<SectionDetail_List>? Teams { get; set; } 

        [JsonProperty("agent_members", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Uname_List>? Agent_members { get; set; } 

        [JsonProperty("managers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Manager>? Managers { get; set; } 

        [JsonProperty("user_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_count { get; set; } 

        [JsonProperty("open_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_ticket_count { get; set; } 

        [JsonProperty("onhold_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onhold_ticket_count { get; set; } 

        [JsonProperty("total_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_ticket_count { get; set; } 

        [JsonProperty("opened_thismonth_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opened_thismonth_count { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Tweet
    {
        [JsonProperty("created_at", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Created_at { get; set; } 

        [JsonProperty("timestamp_ms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Timestamp_ms { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("id_str", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id_str { get; set; } 

        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

        [JsonProperty("truncated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Truncated { get; set; } 

        [JsonProperty("entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TweetEntities? Entities { get; set; } 

        [JsonProperty("in_reply_to_status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? In_reply_to_status_id { get; set; } 

        [JsonProperty("in_reply_to_status_id_str", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? In_reply_to_status_id_str { get; set; } 

        [JsonProperty("in_reply_to_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? In_reply_to_user_id { get; set; } 

        [JsonProperty("in_reply_to_user_id_str", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? In_reply_to_user_id_str { get; set; } 

        [JsonProperty("in_reply_to_screen_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? In_reply_to_screen_name { get; set; } 

        [JsonProperty("user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TweetUser? User { get; set; } 

        [JsonProperty("retweet_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Retweet_count { get; set; } 

        [JsonProperty("favorite_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Favorite_count { get; set; } 

        [JsonProperty("favorited", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Favorited { get; set; } 

        [JsonProperty("retweeted", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Retweeted { get; set; } 

        [JsonProperty("lang", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lang { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TweetEntities
    {
        [JsonProperty("hashtags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Hashtags { get; set; } 

        [JsonProperty("symbols", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Symbols { get; set; } 

        [JsonProperty("user_mentions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TweetUserMentions>? User_mentions { get; set; } 

        [JsonProperty("urls", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<object>? Urls { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TweetUser
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("id_str", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id_str { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("screen_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Screen_name { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("profile_image_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Profile_image_url { get; set; } 

        [JsonProperty("profile_image_url_https", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Profile_image_url_https { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TweetUserMentions
    {
        [JsonProperty("screen_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Screen_name { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("id_str", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id_str { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TwilioWhatsAppDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("twilio_sid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Twilio_sid { get; set; } 

        [JsonProperty("phone_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phone_number { get; set; } 

        [JsonProperty("sender_configured", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sender_configured { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_type { get; set; } 

        [JsonProperty("reopen_existing_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Reopen_existing_tickets { get; set; } 

        [JsonProperty("allow_inbound", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_inbound { get; set; } 

        [JsonProperty("new_auth_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_auth_token { get; set; } 

        [JsonProperty("ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ticket_type_name { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TwitterDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("screen_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Screen_name { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_id { get; set; } 

        [JsonProperty("new_oauth_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_oauth_token { get; set; } 

        [JsonProperty("new_oauth_token_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_oauth_token_secret { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("_gettoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _gettoken { get; set; } 

        [JsonProperty("_oauthtoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _oauthtoken { get; set; } 

        [JsonProperty("_oauthverifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _oauthverifier { get; set; } 

        [JsonProperty("create_direct_message_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_direct_message_tickets { get; set; } 

        [JsonProperty("direct_message_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Direct_message_ticket_type { get; set; } 

        [JsonProperty("direct_message_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Direct_message_ticket_type_name { get; set; } 

        [JsonProperty("direct_message_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Direct_message_user { get; set; } 

        [JsonProperty("direct_message_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Direct_message_user_name { get; set; } 

        [JsonProperty("reopen_direct_message_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Reopen_direct_message_tickets { get; set; } 

        [JsonProperty("create_mention_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Create_mention_tickets { get; set; } 

        [JsonProperty("mention_ticket_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mention_ticket_type { get; set; } 

        [JsonProperty("mention_ticket_type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mention_ticket_type_name { get; set; } 

        [JsonProperty("mention_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mention_user { get; set; } 

        [JsonProperty("mention_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mention_user_name { get; set; } 

        [JsonProperty("days_after_mention", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Days_after_mention { get; set; } 

        [JsonProperty("include_word_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Include_word_list { get; set; } 

        [JsonProperty("exclude_word_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Exclude_word_list { get; set; } 

        [JsonProperty("direct_message_create_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Direct_message_create_users { get; set; } 

        [JsonProperty("direct_message_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Direct_message_site { get; set; } 

        [JsonProperty("direct_message_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Direct_message_site_name { get; set; } 

        [JsonProperty("mention_create_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Mention_create_users { get; set; } 

        [JsonProperty("mention_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mention_site { get; set; } 

        [JsonProperty("mention_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mention_site_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TwitterEvent
    {
        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; } 

        [JsonProperty("created_timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Created_timestamp { get; set; } 

        [JsonProperty("message_create", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TwitterMessage? Message_create { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TwitterMessage
    {
        [JsonProperty("target", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TwitterMessageTarget? Target { get; set; } 

        [JsonProperty("sender_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sender_id { get; set; } 

        [JsonProperty("source_app_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Source_app_id { get; set; } 

        [JsonProperty("message_data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TwitterMessageData? Message_data { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TwitterMessageData
    {
        [JsonProperty("text", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Text { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TwitterMessageTarget
    {
        [JsonProperty("recipient_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Recipient_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TwitterWebhookContent
    {
        [JsonProperty("for_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? For_user_id { get; set; } 

        [JsonProperty("user_has_blocked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? User_has_blocked { get; set; } 

        [JsonProperty("direct_message_events", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TwitterEvent>? Direct_message_events { get; set; } 

        [JsonProperty("tweet_create_events", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tweet>? Tweet_create_events { get; set; } 

        [JsonProperty("users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, object?>? Users { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class TypeInfo
    {
        [JsonProperty("typeinfo_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Typeinfo_id { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Id { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("keyfield_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Keyfield_id { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("tab_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_id { get; set; } 

        [JsonProperty("tab_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tab_name { get; set; } 

        [JsonProperty("tab_sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_sequence { get; set; } 

        [JsonProperty("tab_columns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tab_columns { get; set; } 

        [JsonProperty("groupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Groupname { get; set; } 

        [JsonProperty("techdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Techdetail { get; set; } 

        [JsonProperty("userdetail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userdetail { get; set; } 

        [JsonProperty("visibility_conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomFieldVisibility>? Visibility_conditions { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Uname
    {
        [JsonProperty("sites", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameSite>? Sites { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("onlinestatus_actual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onlinestatus_actual { get; set; } 

        [JsonProperty("onlinestatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onlinestatus { get; set; } 

        [JsonProperty("is_online", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_online { get; set; } 

        [JsonProperty("lastonline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastonline { get; set; } 

        [JsonProperty("team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team { get; set; } 

        [JsonProperty("isdisabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isdisabled { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("ad", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ad { get; set; } 

        [JsonProperty("lastlogindate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastlogindate { get; set; } 

        [JsonProperty("agentphotopath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agentphotopath { get; set; } 

        [JsonProperty("initials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Initials { get; set; } 

        [JsonProperty("firstname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Firstname { get; set; } 

        [JsonProperty("surname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Surname { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("jobtitle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jobtitle { get; set; } 

        [JsonProperty("sms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sms { get; set; } 

        [JsonProperty("extensionnumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Extensionnumber { get; set; } 

        [JsonProperty("ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_count { get; set; } 

        [JsonProperty("is_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_agent { get; set; } 

        [JsonProperty("one_client", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? One_client { get; set; } 

        [JsonProperty("teams", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameSection>? Teams { get; set; } 

        [JsonProperty("departments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameDepartment>? Departments { get; set; } 

        [JsonProperty("clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameAreaRestriction>? Clients { get; set; } 

        [JsonProperty("tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameRequestType>? Tickettypes { get; set; } 

        [JsonProperty("qualifications", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameQualification>? Qualifications { get; set; } 

        [JsonProperty("qualification_weighting", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qualification_weighting { get; set; } 

        [JsonProperty("qualified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Qualified { get; set; } 

        [JsonProperty("role_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_list { get; set; } 

        [JsonProperty("current_action_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Current_action_type { get; set; } 

        [JsonProperty("current_action_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Current_action_name { get; set; } 

        [JsonProperty("assettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameXtype>? Assettypes { get; set; } 

        [JsonProperty("googleemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Googleemail { get; set; } 

        [JsonProperty("linemanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linemanager { get; set; } 

        [JsonProperty("linemanager_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linemanager_name { get; set; } 

        [JsonProperty("inboxes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inboxes { get; set; } 

        [JsonProperty("exchange_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exchange_authorized { get; set; } 

        [JsonProperty("exchange_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exchange_account { get; set; } 

        [JsonProperty("sentinel_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sentinel_authorized { get; set; } 

        [JsonProperty("licence_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_type { get; set; } 

        [JsonProperty("named_licences_in_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Named_licences_in_use { get; set; } 

        [JsonProperty("concurrent_licences_in_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Concurrent_licences_in_use { get; set; } 

        [JsonProperty("concurrent_agent_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Concurrent_agent_total { get; set; } 

        [JsonProperty("google_mail_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Google_mail_authorized { get; set; } 

        [JsonProperty("inbox_clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Inbox_clientid { get; set; } 

        [JsonProperty("isapiagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isapiagent { get; set; } 

        [JsonProperty("splashtop_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Splashtop_authorized { get; set; } 

        [JsonProperty("gotoresolve_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Gotoresolve_authorized { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Password { get; set; } 

        [JsonProperty("lunchbreak", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Lunchbreak { get; set; } 

        [JsonProperty("agentphotodata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agentphotodata { get; set; } 

        [JsonProperty("pagesize", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pagesize { get; set; } 

        [JsonProperty("signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Signature { get; set; } 

        [JsonProperty("default_filter_id_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_filter_id_tickets { get; set; } 

        [JsonProperty("default_filter_name_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_filter_name_tickets { get; set; } 

        [JsonProperty("default_columns_id_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_tickets { get; set; } 

        [JsonProperty("default_columns_name_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_columns_name_tickets { get; set; } 

        [JsonProperty("default_view_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_tickets { get; set; } 

        [JsonProperty("default_view_tickets_selectedid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_view_tickets_selectedid { get; set; } 

        [JsonProperty("default_view_tickets_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_tickets_selectedname { get; set; } 

        [JsonProperty("default_filter_id_opps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_filter_id_opps { get; set; } 

        [JsonProperty("default_filter_name_opps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_filter_name_opps { get; set; } 

        [JsonProperty("default_columns_id_opps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_opps { get; set; } 

        [JsonProperty("default_columns_name_opps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_columns_name_opps { get; set; } 

        [JsonProperty("default_view_opps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_opps { get; set; } 

        [JsonProperty("default_view_opps_selectedid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_view_opps_selectedid { get; set; } 

        [JsonProperty("default_view_opps_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_opps_selectedname { get; set; } 

        [JsonProperty("default_action_view", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_action_view { get; set; } 

        [JsonProperty("default_action_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_action_display { get; set; } 

        [JsonProperty("default_feed_view", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_feed_view { get; set; } 

        [JsonProperty("ticket_preview_mode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_preview_mode { get; set; } 

        [JsonProperty("default_ticket_preview_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_ticket_preview_size { get; set; } 

        [JsonProperty("list_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? List_type { get; set; } 

        [JsonProperty("navmenu_mode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Navmenu_mode { get; set; } 

        [JsonProperty("default_calendar_view", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_calendar_view { get; set; } 

        [JsonProperty("calendar_options", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Calendar_options { get; set; } 

        [JsonProperty("search_options", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Search_options { get; set; } 

        [JsonProperty("newtabpref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newtabpref { get; set; } 

        [JsonProperty("theme", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Theme { get; set; } 

        [JsonProperty("theme_revert", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Theme_revert { get; set; } 

        [JsonProperty("language_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Language_id { get; set; } 

        [JsonProperty("language_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Language_name { get; set; } 

        [JsonProperty("app_colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? App_colour { get; set; } 

        [JsonProperty("app_colour_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? App_colour_type { get; set; } 

        [JsonProperty("nav_display_mode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Nav_display_mode { get; set; } 

        [JsonProperty("enablehighcontrast", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enablehighcontrast { get; set; } 

        [JsonProperty("actionscreen_display_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Actionscreen_display_type { get; set; } 

        [JsonProperty("homescreenchartid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Homescreenchartid { get; set; } 

        [JsonProperty("homescreenchartname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Homescreenchartname { get; set; } 

        [JsonProperty("homescreenchartpublishedid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Homescreenchartpublishedid { get; set; } 

        [JsonProperty("homescreendashboardid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Homescreendashboardid { get; set; } 

        [JsonProperty("homescreendashboardname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Homescreendashboardname { get; set; } 

        [JsonProperty("sidemenudashboardid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sidemenudashboardid { get; set; } 

        [JsonProperty("sidemenudashboardname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sidemenudashboardname { get; set; } 

        [JsonProperty("clientdetails_layout_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Clientdetails_layout_id { get; set; } 

        [JsonProperty("clientdetails_layout_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Clientdetails_layout_name { get; set; } 

        [JsonProperty("nav_layout_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Nav_layout_id { get; set; } 

        [JsonProperty("nav_layout_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Nav_layout_name { get; set; } 

        [JsonProperty("sendowneremails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendowneremails { get; set; } 

        [JsonProperty("warnifnoscan", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Warnifnoscan { get; set; } 

        [JsonProperty("dontemailmeifiloggedit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontemailmeifiloggedit { get; set; } 

        [JsonProperty("workhour_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Workhour_start { get; set; } 

        [JsonProperty("workhour_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Workhour_end { get; set; } 

        [JsonProperty("activedirectory_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Activedirectory_dn { get; set; } 

        [JsonProperty("third_party_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_guid { get; set; } 

        [JsonProperty("roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<NHD_Roles>? Roles { get; set; } 

        [JsonProperty("add_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<NHD_Roles>? Add_roles { get; set; } 

        [JsonProperty("claims", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<NHD_Claim>? Claims { get; set; } 

        [JsonProperty("department", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Department { get; set; } 

        [JsonProperty("_is_a_departmentmanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_a_departmentmanager { get; set; } 

        [JsonProperty("_is_a_teammanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _is_a_teammanager { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("twofactor_enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Twofactor_enabled { get; set; } 

        [JsonProperty("_isnew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isnew { get; set; } 

        [JsonProperty("adconnection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Adconnection { get; set; } 

        [JsonProperty("useadlogin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useadlogin { get; set; } 

        [JsonProperty("container_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Container_dn { get; set; } 

        [JsonProperty("notifications", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameNotification>? Notifications { get; set; } 

        [JsonProperty("notifications_personal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameNotification>? Notifications_personal { get; set; } 

        [JsonProperty("emailconfirmed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailconfirmed { get; set; } 

        [JsonProperty("accountconfirmed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Accountconfirmed { get; set; } 

        [JsonProperty("isinvite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isinvite { get; set; } 

        [JsonProperty("is_sales", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_sales { get; set; } 

        [JsonProperty("_getlogmeinid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _getlogmeinid { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("_importtoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtoken { get; set; } 

        [JsonProperty("beyondtrust_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Beyondtrust_name { get; set; } 

        [JsonProperty("azure_roleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_roleid { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("chargerates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Restriction>? Chargerates { get; set; } 

        [JsonProperty("warnifnoscan_integrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Warnifnoscan_integrator { get; set; } 

        [JsonProperty("warnifnoscan_integrator_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Warnifnoscan_integrator_hours { get; set; } 

        [JsonProperty("orion_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Orion_username { get; set; } 

        [JsonProperty("orion_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Orion_password { get; set; } 

        [JsonProperty("ncentral_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ncentral_username { get; set; } 

        [JsonProperty("soc_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Soc_username { get; set; } 

        [JsonProperty("autotaskid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autotaskid { get; set; } 

        [JsonProperty("oktaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oktaid { get; set; } 

        [JsonProperty("okta_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Okta_status { get; set; } 

        [JsonProperty("new_ncentral_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_ncentral_key { get; set; } 

        [JsonProperty("pomincostforapprovaltype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pomincostforapprovaltype { get; set; } 

        [JsonProperty("pomincostforapproval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Pomincostforapproval { get; set; } 

        [JsonProperty("quotemarginforapprovaltype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Quotemarginforapprovaltype { get; set; } 

        [JsonProperty("quotemarginforapproval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quotemarginforapproval { get; set; } 

        [JsonProperty("new_orion_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_orion_password { get; set; } 

        [JsonProperty("orion_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Orion_access { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("exchange_token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Exchange_token_expiry { get; set; } 

        [JsonProperty("exchange_redirect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exchange_redirect { get; set; } 

        [JsonProperty("_getoauthtoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _getoauthtoken { get; set; } 

        [JsonProperty("oauth_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oauth_code { get; set; } 

        [JsonProperty("oauth_redirect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oauth_redirect { get; set; } 

        [JsonProperty("oauth_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oauth_type { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_token_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_token_type { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("_disconnectintegration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _disconnectintegration { get; set; } 

        [JsonProperty("sentinel_token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Sentinel_token_expiry { get; set; } 

        [JsonProperty("sentinel_redirect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sentinel_redirect { get; set; } 

        [JsonProperty("default_columns_id_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_assets { get; set; } 

        [JsonProperty("Oo_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oo_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("isagentdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isagentdetails { get; set; } 

        [JsonProperty("excludefromresourcebooking", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Excludefromresourcebooking { get; set; } 

        [JsonProperty("delegation_activated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delegation_activated { get; set; } 

        [JsonProperty("delegation_timebased", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delegation_timebased { get; set; } 

        [JsonProperty("delegation_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Delegation_start { get; set; } 

        [JsonProperty("delegation_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Delegation_end { get; set; } 

        [JsonProperty("delegation_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Delegation_user_id { get; set; } 

        [JsonProperty("delegation_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delegation_user_name { get; set; } 

        [JsonProperty("_reassign_all_accounts_to_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _reassign_all_accounts_to_agent { get; set; } 

        [JsonProperty("_kick", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _kick { get; set; } 

        [JsonProperty("_revoke_tokens", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _revoke_tokens { get; set; } 

        [JsonProperty("authenticatorapp_configured", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authenticatorapp_configured { get; set; } 

        [JsonProperty("_revoke_authenticatorapp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _revoke_authenticatorapp { get; set; } 

        [JsonProperty("ispasswordreset", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ispasswordreset { get; set; } 

        [JsonProperty("graph_host", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Graph_host { get; set; } 

        [JsonProperty("linked_halo_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_halo_url { get; set; } 

        [JsonProperty("holiday_allowance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Holiday_allowance { get; set; } 

        [JsonProperty("remaining_holiday_allowance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Remaining_holiday_allowance { get; set; } 

        [JsonProperty("_isbatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isbatch { get; set; } 

        [JsonProperty("import_photo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Import_photo { get; set; } 

        [JsonProperty("travelrate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Travelrate { get; set; } 

        [JsonProperty("github_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Github_username { get; set; } 

        [JsonProperty("_signature_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _signature_id { get; set; } 

        [JsonProperty("_signature", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _signature { get; set; } 

        [JsonProperty("is_admin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_admin { get; set; } 

        [JsonProperty("ac_tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_tickettypes { get; set; } 

        [JsonProperty("ac_approvals", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_approvals { get; set; } 

        [JsonProperty("ac_rules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_rules { get; set; } 

        [JsonProperty("ac_cannedtext", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_cannedtext { get; set; } 

        [JsonProperty("ac_customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_customfields { get; set; } 

        [JsonProperty("ac_customtables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_customtables { get; set; } 

        [JsonProperty("ac_dashboards", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_dashboards { get; set; } 

        [JsonProperty("ac_workflows", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_workflows { get; set; } 

        [JsonProperty("ac_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_roles { get; set; } 

        [JsonProperty("ac_slas", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_slas { get; set; } 

        [JsonProperty("ac_templates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_templates { get; set; } 

        [JsonProperty("ac_outcomes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_outcomes { get; set; } 

        [JsonProperty("ac_workdays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_workdays { get; set; } 

        [JsonProperty("ac_emailtemplates", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_emailtemplates { get; set; } 

        [JsonProperty("ac_messagegroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_messagegroups { get; set; } 

        [JsonProperty("ac_reportgroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_reportgroups { get; set; } 

        [JsonProperty("ac_fieldgroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_fieldgroups { get; set; } 

        [JsonProperty("ac_languagepacks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_languagepacks { get; set; } 

        [JsonProperty("ac_itemgroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_itemgroups { get; set; } 

        [JsonProperty("default_columns_id_clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_clients { get; set; } 

        [JsonProperty("default_view_clients_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_clients_selectedname { get; set; } 

        [JsonProperty("default_view_assets_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_assets_selectedname { get; set; } 

        [JsonProperty("_do_reassign01", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _do_reassign01 { get; set; } 

        [JsonProperty("check_reassign01", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Check_reassign01 { get; set; } 

        [JsonProperty("_force", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _force { get; set; } 

        [JsonProperty("default_view_customers_selectedid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_view_customers_selectedid { get; set; } 

        [JsonProperty("default_view_customers_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_customers_selectedname { get; set; } 

        [JsonProperty("default_view_users_selectedid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_view_users_selectedid { get; set; } 

        [JsonProperty("default_view_users_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_users_selectedname { get; set; } 

        [JsonProperty("default_columns_id_contracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_contracts { get; set; } 

        [JsonProperty("default_view_contracts_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_contracts_selectedname { get; set; } 

        [JsonProperty("default_columns_id_sites", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_sites { get; set; } 

        [JsonProperty("default_columns_sites_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_columns_sites_selectedname { get; set; } 

        [JsonProperty("default_columns_id_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_users { get; set; } 

        [JsonProperty("default_columns_users_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_columns_users_selectedname { get; set; } 

        [JsonProperty("pagerduty_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Pagerduty_email { get; set; } 

        [JsonProperty("ac_assettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_assettypes { get; set; } 

        [JsonProperty("ac_assetgroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_assetgroups { get; set; } 

        [JsonProperty("ac_servicecategories", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_servicecategories { get; set; } 

        [JsonProperty("ac_services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_services { get; set; } 

        [JsonProperty("ac_suppliers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_suppliers { get; set; } 

        [JsonProperty("ac_suppliercontracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_suppliercontracts { get; set; } 

        [JsonProperty("last_modified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Last_modified { get; set; } 

        [JsonProperty("jira_instance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Jira_instance { get; set; } 

        [JsonProperty("jira_instance_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_instance_name { get; set; } 

        [JsonProperty("pref_notification_sound", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pref_notification_sound { get; set; } 

        [JsonProperty("pref_chat_sound", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Pref_chat_sound { get; set; } 

        [JsonProperty("default_columns_id_supplier_contracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_supplier_contracts { get; set; } 

        [JsonProperty("default_view_supplier_contracts_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_supplier_contracts_selectedname { get; set; } 

        [JsonProperty("default_view_assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_assets { get; set; } 

        [JsonProperty("default_view_assets_selectedid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_view_assets_selectedid { get; set; } 

        [JsonProperty("default_view_assets_selectedid_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_assets_selectedid_name { get; set; } 

        [JsonProperty("matching_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matching_value { get; set; } 

        [JsonProperty("sqlimport_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sqlimport_id { get; set; } 

        [JsonProperty("splashtop_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Splashtop_url { get; set; } 

        [JsonProperty("splashtop_token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Splashtop_token_expiry { get; set; } 

        [JsonProperty("default_splashtop_channelname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_splashtop_channelname { get; set; } 

        [JsonProperty("splashtop_channel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Splashtop_channel { get; set; } 

        [JsonProperty("ac_chatprofiles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_chatprofiles { get; set; } 

        [JsonProperty("ac_faqlists", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_faqlists { get; set; } 

        [JsonProperty("allow_automatic_call_scripts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_automatic_call_scripts { get; set; } 

        [JsonProperty("gotoresolve_token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Gotoresolve_token_expiry { get; set; } 

        [JsonProperty("ac_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_devices { get; set; } 

        [JsonProperty("azure_connectionid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_connectionid { get; set; } 

        [JsonProperty("allow_presence_notifications", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_presence_notifications { get; set; } 

        [JsonProperty("azure_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_tenant_id { get; set; } 

        [JsonProperty("azure_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_client_id { get; set; } 

        [JsonProperty("presence_subscription", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public UnamePresenceSubscription? Presence_subscription { get; set; } 

        [JsonProperty("default_columns_id_supplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_supplier { get; set; } 

        [JsonProperty("default_columns_supplier_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_columns_supplier_selectedname { get; set; } 

        [JsonProperty("default_view_suppliers_selectedid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_view_suppliers_selectedid { get; set; } 

        [JsonProperty("default_view_suppliers_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_suppliers_selectedname { get; set; } 

        [JsonProperty("linked_user_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_user_client_id { get; set; } 

        [JsonProperty("contractdetails_layout_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Contractdetails_layout_id { get; set; } 

        [JsonProperty("contractdetails_layout_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Contractdetails_layout_name { get; set; } 

        [JsonProperty("default_action_date_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_action_date_display { get; set; } 

        [JsonProperty("signature_image", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Signature_image { get; set; } 

        [JsonProperty("exclude_from_automatic_assigning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exclude_from_automatic_assigning { get; set; } 

        [JsonProperty("userdetails_layout_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userdetails_layout_id { get; set; } 

        [JsonProperty("userdetails_layout_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Userdetails_layout_name { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("calendar_options_multi", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Calendar_options_multi { get; set; } 

        [JsonProperty("ac_databaselookups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Ac_databaselookups { get; set; } 

        [JsonProperty("default_columns_id_pos", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_columns_id_pos { get; set; } 

        [JsonProperty("default_view_pos_selectedname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_view_pos_selectedname { get; set; } 

        [JsonProperty("sitedetails_layout_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sitedetails_layout_id { get; set; } 

        [JsonProperty("sitedetails_layout_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sitedetails_layout_name { get; set; } 

        [JsonProperty("enable_teams_shifts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enable_teams_shifts { get; set; } 

        [JsonProperty("warnif_incomplete_ts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Warnif_incomplete_ts { get; set; } 

        [JsonProperty("warnif_incomplete_ts_manager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Warnif_incomplete_ts_manager { get; set; } 

        [JsonProperty("incomplete_ts_threshold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Incomplete_ts_threshold { get; set; } 

        [JsonProperty("incomplete_ts_sendtime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Incomplete_ts_sendtime { get; set; } 

        [JsonProperty("incomplete_ts_lastcreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Incomplete_ts_lastcreated { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("assetfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameField>? Assetfields { get; set; } 

        [JsonProperty("unamecustomfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameCustom>? Unamecustomfields { get; set; } 

        [JsonProperty("unameappointmenttypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameAppointment>? Unameappointmenttypes { get; set; } 

        [JsonProperty("_canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate { get; set; } 

        [JsonProperty("_canupdate_moreinfo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate_moreinfo { get; set; } 

        [JsonProperty("logmeinid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logmeinid { get; set; } 

        [JsonProperty("allowbeyondtrustinvites", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowbeyondtrustinvites { get; set; } 

        [JsonProperty("jira_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_id { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameButton>? Custombuttons { get; set; } 

        [JsonProperty("namewithinactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Namewithinactive { get; set; } 

        [JsonProperty("apptsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Apptsync { get; set; } 

        [JsonProperty("okta_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Okta_id { get; set; } 

        [JsonProperty("enableshifts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableshifts { get; set; } 

        [JsonProperty("sendemailerrors", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendemailerrors { get; set; } 

        [JsonProperty("uname_usercustomfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameCustom>? Uname_usercustomfields { get; set; } 

        [JsonProperty("can_approve_purchaseorder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_approve_purchaseorder { get; set; } 

        [JsonProperty("can_approve_quote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_approve_quote { get; set; } 

        [JsonProperty("can_approve_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_approve_invoice { get; set; } 

        [JsonProperty("default_splashtop_channel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_splashtop_channel { get; set; } 

        [JsonProperty("workday_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workday_id { get; set; } 

        [JsonProperty("workday_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workday_name { get; set; } 

        [JsonProperty("workday_timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workday_timezone { get; set; } 

        [JsonProperty("costprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costprice { get; set; } 

        [JsonProperty("chargerate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate { get; set; } 

        [JsonProperty("first_role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? First_role_id { get; set; } 

        [JsonProperty("in_queried_team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? In_queried_team { get; set; } 

        [JsonProperty("guid_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Guid_string { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameAnalyzer
    {
        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("report_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Report_id { get; set; } 

        [JsonProperty("readonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Readonly { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameAppointment
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("field_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_type { get; set; } 

        [JsonProperty("level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Level { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameAreaRestriction
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameButton
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("roleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Roleid { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("button_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Button_id { get; set; } 

        [JsonProperty("button_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Button_name { get; set; } 

        [JsonProperty("can_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_access { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameCustom
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("field_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_type { get; set; } 

        [JsonProperty("level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Level { get; set; } 

        [JsonProperty("canadd", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canadd { get; set; } 

        [JsonProperty("candelete", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Candelete { get; set; } 

        [JsonProperty("canedit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canedit { get; set; } 

        [JsonProperty("customfield_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Customfield_type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameDepartment
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Department_id { get; set; } 

        [JsonProperty("department_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Department_guid { get; set; } 

        [JsonProperty("department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Department_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("membershiplevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Membershiplevel { get; set; } 

        [JsonProperty("includeteamsintree", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includeteamsintree { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameEventSubscription
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("azure_identifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_identifier { get; set; } 

        [JsonProperty("_subscriptionaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WebhookSubscriptionAction? _subscriptionaction { get; set; } 

        [JsonProperty("subscription_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subscription_id { get; set; } 

        [JsonProperty("subscription_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Subscription_expiry { get; set; } 

        [JsonProperty("subscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Subscribed { get; set; } 

        [JsonProperty("new_subscription_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_subscription_key { get; set; } 

        [JsonProperty("_dosave", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dosave { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameField
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("field_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("field_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Field_type { get; set; } 

        [JsonProperty("level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Level { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameNotification
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("delivery_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Delivery_method { get; set; } 

        [JsonProperty("sendpushnotification", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendpushnotification { get; set; } 

        [JsonProperty("sendpushnotificationbrowser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendpushnotificationbrowser { get; set; } 

        [JsonProperty("popupinnotificationpane", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Popupinnotificationpane { get; set; } 

        [JsonProperty("eventno", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Eventno { get; set; } 

        [JsonProperty("emailtemplate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Emailtemplate_id { get; set; } 

        [JsonProperty("emailtemplate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Emailtemplate_guid { get; set; } 

        [JsonProperty("emailtemplate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailtemplate_name { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("email_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email_list { get; set; } 

        [JsonProperty("slack_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Slack_id { get; set; } 

        [JsonProperty("interval", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Interval { get; set; } 

        [JsonProperty("useworkinghours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useworkinghours { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restriction_type { get; set; } 

        [JsonProperty("restriction_department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restriction_department_id { get; set; } 

        [JsonProperty("restriction_department_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Restriction_department_guid { get; set; } 

        [JsonProperty("restriction_department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restriction_department_name { get; set; } 

        [JsonProperty("restriction_team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restriction_team_id { get; set; } 

        [JsonProperty("restriction_team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Restriction_team_guid { get; set; } 

        [JsonProperty("restriction_team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Restriction_team_name { get; set; } 

        [JsonProperty("webhook_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Webhook_id { get; set; } 

        [JsonProperty("agents", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameNotificationLink>? Agents { get; set; } 

        [JsonProperty("condition_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Condition_count { get; set; } 

        [JsonProperty("subscriber_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Subscriber_count { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("conditions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<NotificationConditions>? Conditions { get; set; } 

        [JsonProperty("_canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate { get; set; } 

        [JsonProperty("slack_channel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Slack_channel_name { get; set; } 

        [JsonProperty("teams_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Teams_id { get; set; } 

        [JsonProperty("teams_channel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Teams_channel_name { get; set; } 

        [JsonProperty("value1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value1 { get; set; } 

        [JsonProperty("value1_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value1_name { get; set; } 

        [JsonProperty("_iszapier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _iszapier { get; set; } 

        [JsonProperty("filter_sitecontact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Filter_sitecontact { get; set; } 

        [JsonProperty("sitecontact_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sitecontact_type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameNotificationLink>? Roles { get; set; } 

        [JsonProperty("mattermost_channelid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Mattermost_channelid { get; set; } 

        [JsonProperty("mattermost_channel_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mattermost_channel_name { get; set; } 

        [JsonProperty("rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_id { get; set; } 

        [JsonProperty("rule_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Rule_name { get; set; } 

        [JsonProperty("user_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameNotificationLink>? User_roles { get; set; } 

        [JsonProperty("filter_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_type { get; set; } 

        [JsonProperty("customisecolour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Customisecolour { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameNotificationLink
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("notification_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Notification_id { get; set; } 

        [JsonProperty("notification_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Notification_guid { get; set; } 

        [JsonProperty("notification_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notification_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("user_role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_role_id { get; set; } 

        [JsonProperty("user_role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_role_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnamePresenceRule
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("activity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Activity { get; set; } 

        [JsonProperty("availability", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Availability { get; set; } 

        [JsonProperty("outcome", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome { get; set; } 

        [JsonProperty("must_be_online", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Must_be_online { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnamePresenceSubscription
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("azure_connection_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_connection_id { get; set; } 

        [JsonProperty("azure_oid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_oid { get; set; } 

        [JsonProperty("azure_upn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_upn { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

        [JsonProperty("redirect_uri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirect_uri { get; set; } 

        [JsonProperty("_subscriptionaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WebhookSubscriptionAction? _subscriptionaction { get; set; } 

        [JsonProperty("subscription_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Subscription_id { get; set; } 

        [JsonProperty("subscription_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Subscription_expiry { get; set; } 

        [JsonProperty("subscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Subscribed { get; set; } 

        [JsonProperty("new_subscription_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_subscription_key { get; set; } 

        [JsonProperty("oauth_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oauth_code { get; set; } 

        [JsonProperty("graph_host", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Graph_host { get; set; } 

        [JsonProperty("azure_connection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AzureADConnection? Azure_connection { get; set; } 

        [JsonProperty("_dosave", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dosave { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameQualification
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("qualification_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qualification_id { get; set; } 

        [JsonProperty("qualification_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Qualification_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("enddate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Enddate { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameRequestType
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tickettype_id { get; set; } 

        [JsonProperty("tickettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("cancreate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cancreate { get; set; } 

        [JsonProperty("canview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canview { get; set; } 

        [JsonProperty("canedit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canedit { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameSection
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Team_id { get; set; } 

        [JsonProperty("team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Team_guid { get; set; } 

        [JsonProperty("team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_name { get; set; } 

        [JsonProperty("department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Department_id { get; set; } 

        [JsonProperty("org_department_team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Org_department_team_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("is_manager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_manager { get; set; } 

        [JsonProperty("no_config_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? No_config_access { get; set; } 

        [JsonProperty("unassigned_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Unassigned_access { get; set; } 

        [JsonProperty("otheragent_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Otheragent_access { get; set; } 

        [JsonProperty("fortickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Fortickets { get; set; } 

        [JsonProperty("foropps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Foropps { get; set; } 

        [JsonProperty("forprojects", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Forprojects { get; set; } 

        [JsonProperty("in_section", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? In_section { get; set; } 

        [JsonProperty("namewithinactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Namewithinactive { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameSite
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Level { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnameXtype
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("assettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_id { get; set; } 

        [JsonProperty("assettype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("cancreate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cancreate { get; set; } 

        [JsonProperty("canview", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canview { get; set; } 

        [JsonProperty("canedit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canedit { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Uname_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("onlinestatus_actual", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onlinestatus_actual { get; set; } 

        [JsonProperty("onlinestatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onlinestatus { get; set; } 

        [JsonProperty("is_online", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_online { get; set; } 

        [JsonProperty("lastonline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastonline { get; set; } 

        [JsonProperty("team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team { get; set; } 

        [JsonProperty("isdisabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isdisabled { get; set; } 

        [JsonProperty("email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email { get; set; } 

        [JsonProperty("ad", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Ad { get; set; } 

        [JsonProperty("lastlogindate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastlogindate { get; set; } 

        [JsonProperty("agentphotopath", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agentphotopath { get; set; } 

        [JsonProperty("initials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Initials { get; set; } 

        [JsonProperty("firstname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Firstname { get; set; } 

        [JsonProperty("surname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Surname { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("jobtitle", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jobtitle { get; set; } 

        [JsonProperty("sms", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sms { get; set; } 

        [JsonProperty("extensionnumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Extensionnumber { get; set; } 

        [JsonProperty("ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_count { get; set; } 

        [JsonProperty("is_agent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_agent { get; set; } 

        [JsonProperty("one_client", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? One_client { get; set; } 

        [JsonProperty("teams", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameSection>? Teams { get; set; } 

        [JsonProperty("departments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameDepartment>? Departments { get; set; } 

        [JsonProperty("clients", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameAreaRestriction>? Clients { get; set; } 

        [JsonProperty("tickettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameRequestType>? Tickettypes { get; set; } 

        [JsonProperty("qualifications", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameQualification>? Qualifications { get; set; } 

        [JsonProperty("qualification_weighting", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Qualification_weighting { get; set; } 

        [JsonProperty("qualified", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Qualified { get; set; } 

        [JsonProperty("role_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_list { get; set; } 

        [JsonProperty("current_action_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Current_action_type { get; set; } 

        [JsonProperty("current_action_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Current_action_name { get; set; } 

        [JsonProperty("assettypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameXtype>? Assettypes { get; set; } 

        [JsonProperty("googleemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Googleemail { get; set; } 

        [JsonProperty("linemanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linemanager { get; set; } 

        [JsonProperty("linemanager_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linemanager_name { get; set; } 

        [JsonProperty("inboxes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inboxes { get; set; } 

        [JsonProperty("exchange_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Exchange_authorized { get; set; } 

        [JsonProperty("exchange_account", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Exchange_account { get; set; } 

        [JsonProperty("sentinel_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sentinel_authorized { get; set; } 

        [JsonProperty("licence_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_type { get; set; } 

        [JsonProperty("named_licences_in_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Named_licences_in_use { get; set; } 

        [JsonProperty("concurrent_licences_in_use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Concurrent_licences_in_use { get; set; } 

        [JsonProperty("concurrent_agent_total", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Concurrent_agent_total { get; set; } 

        [JsonProperty("google_mail_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Google_mail_authorized { get; set; } 

        [JsonProperty("inbox_clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Inbox_clientid { get; set; } 

        [JsonProperty("isapiagent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isapiagent { get; set; } 

        [JsonProperty("splashtop_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Splashtop_authorized { get; set; } 

        [JsonProperty("gotoresolve_authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Gotoresolve_authorized { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("assetfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameField>? Assetfields { get; set; } 

        [JsonProperty("unamecustomfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameCustom>? Unamecustomfields { get; set; } 

        [JsonProperty("unameappointmenttypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameAppointment>? Unameappointmenttypes { get; set; } 

        [JsonProperty("_canupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate { get; set; } 

        [JsonProperty("_canupdate_moreinfo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _canupdate_moreinfo { get; set; } 

        [JsonProperty("logmeinid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Logmeinid { get; set; } 

        [JsonProperty("allowbeyondtrustinvites", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowbeyondtrustinvites { get; set; } 

        [JsonProperty("jira_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_id { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameButton>? Custombuttons { get; set; } 

        [JsonProperty("namewithinactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Namewithinactive { get; set; } 

        [JsonProperty("apptsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Apptsync { get; set; } 

        [JsonProperty("okta_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Okta_id { get; set; } 

        [JsonProperty("enableshifts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableshifts { get; set; } 

        [JsonProperty("sendemailerrors", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendemailerrors { get; set; } 

        [JsonProperty("uname_usercustomfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameCustom>? Uname_usercustomfields { get; set; } 

        [JsonProperty("can_approve_purchaseorder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_approve_purchaseorder { get; set; } 

        [JsonProperty("can_approve_quote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_approve_quote { get; set; } 

        [JsonProperty("can_approve_invoice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Can_approve_invoice { get; set; } 

        [JsonProperty("default_splashtop_channel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_splashtop_channel { get; set; } 

        [JsonProperty("workday_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workday_id { get; set; } 

        [JsonProperty("workday_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workday_name { get; set; } 

        [JsonProperty("workday_timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workday_timezone { get; set; } 

        [JsonProperty("costprice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Costprice { get; set; } 

        [JsonProperty("chargerate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chargerate { get; set; } 

        [JsonProperty("first_role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? First_role_id { get; set; } 

        [JsonProperty("in_queried_team", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? In_queried_team { get; set; } 

        [JsonProperty("guid_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Guid_string { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnsubEmailServiceUsers
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("stid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Stid { get; set; } 

        [JsonProperty("uid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uid { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UnsubscribeService
    {
        [JsonProperty("serviceid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Serviceid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UserAnalyzer
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("report_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Report_id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type { get; set; } 

        [JsonProperty("allow_everyone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_everyone { get; set; } 

        [JsonProperty("department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Department_id { get; set; } 

        [JsonProperty("department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Department_name { get; set; } 

        [JsonProperty("organisation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Organisation_id { get; set; } 

        [JsonProperty("organisation_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Organisation_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UserCompany
    {
        [JsonProperty("company_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Company_id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UserDashboardButtons
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("hint_header", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hint_header { get; set; } 

        [JsonProperty("hint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hint { get; set; } 

        [JsonProperty("systemuse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Systemuse { get; set; } 

        [JsonProperty("use_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Use_id { get; set; } 

        [JsonProperty("use_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Use_guid { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("hover", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hover { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("usedefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Usedefault { get; set; } 

        [JsonProperty("showonhomescreen", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonhomescreen { get; set; } 

        [JsonProperty("showonnavbar", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showonnavbar { get; set; } 

        [JsonProperty("iconcolour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Iconcolour { get; set; } 

        [JsonProperty("iconcolour_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Iconcolour_type { get; set; } 

        [JsonProperty("anyonymousanduseraccessprivelages", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Anyonymousanduseraccessprivelages { get; set; } 

        [JsonProperty("udbtickettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Udbtickettype { get; set; } 

        [JsonProperty("tickettype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Tickettype_guid { get; set; } 

        [JsonProperty("displaytype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Displaytype { get; set; } 

        [JsonProperty("displaytype_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Displaytype_guid { get; set; } 

        [JsonProperty("useroadmapcolumnsratherthanstatuses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Useroadmapcolumnsratherthanstatuses { get; set; } 

        [JsonProperty("restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserDashboardRestrictions>? Restrictions { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

        [JsonProperty("customhtml", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Customhtml { get; set; } 

        [JsonProperty("page_title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Page_title { get; set; } 

        [JsonProperty("page_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Page_desc { get; set; } 

        [JsonProperty("topkb_title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Topkb_title { get; set; } 

        [JsonProperty("new_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_icon { get; set; } 

        [JsonProperty("usecustomicon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Usecustomicon { get; set; } 

        [JsonProperty("custom_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Custom_icon { get; set; } 

        [JsonProperty("default_view", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_view { get; set; } 

        [JsonProperty("portal_ticket_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<RequestType_List>? Portal_ticket_list { get; set; } 

        [JsonProperty("ticket_column_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_column_override { get; set; } 

        [JsonProperty("tickettype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tickettype { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UserDashboardRestrictions
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("button_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Button_id { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restriction_type { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id { get; set; } 

        [JsonProperty("entity_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Entity_guid { get; set; } 

        [JsonProperty("entity_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Entity_name { get; set; } 

        [JsonProperty("allow_access", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_access { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UserDepartment
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_id { get; set; } 

        [JsonProperty("user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_name { get; set; } 

        [JsonProperty("department_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Department_id { get; set; } 

        [JsonProperty("department_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Department_name { get; set; } 

        [JsonProperty("is_manager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_manager { get; set; } 

        [JsonProperty("is_azure_department", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_azure_department { get; set; } 

        [JsonProperty("role_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Role_id { get; set; } 

        [JsonProperty("role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UserPrefs
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("lang", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lang { get; set; } 

        [JsonProperty("theme", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Theme { get; set; } 

        [JsonProperty("userdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Users? Userdetails { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UserRoles
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("isimportantcontact2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isimportantcontact2 { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("showmeonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Showmeonly { get; set; } 

        [JsonProperty("ischangeapprover2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ischangeapprover2 { get; set; } 

        [JsonProperty("ispoapprover", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ispoapprover { get; set; } 

        [JsonProperty("web_access_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Web_access_level { get; set; } 

        [JsonProperty("canadd", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canadd { get; set; } 

        [JsonProperty("canviewopps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canviewopps { get; set; } 

        [JsonProperty("allowviewsitedocs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowviewsitedocs { get; set; } 

        [JsonProperty("allowviewclientdocs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowviewclientdocs { get; set; } 

        [JsonProperty("canviewcontracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canviewcontracts { get; set; } 

        [JsonProperty("canaccesscatalog", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canaccesscatalog { get; set; } 

        [JsonProperty("cataloglevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cataloglevel { get; set; } 

        [JsonProperty("canaccessinvoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canaccessinvoices { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("device_access_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_access_level { get; set; } 

        [JsonProperty("is_integration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_integration { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("dontackemails2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontackemails2 { get; set; } 

        [JsonProperty("departments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserDepartment>? Departments { get; set; } 

        [JsonProperty("notifications", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameNotification>? Notifications { get; set; } 

        [JsonProperty("canuploaddocuments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canuploaddocuments { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class UserThirdPartyGroup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("userid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userid { get; set; } 

        [JsonProperty("thirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyid { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Users
    {
        [JsonProperty("is_comms_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_comms_user { get; set; } 

        [JsonProperty("ischangeapprover2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ischangeapprover2 { get; set; } 

        [JsonProperty("sitephonenumberint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Sitephonenumberint { get; set; } 

        [JsonProperty("phonenumberint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Phonenumberint { get; set; } 

        [JsonProperty("homenumberint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Homenumberint { get; set; } 

        [JsonProperty("mobileint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Mobileint { get; set; } 

        [JsonProperty("mobilenumber2int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Mobilenumber2int { get; set; } 

        [JsonProperty("faxint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Faxint { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Site_id { get; set; } 

        [JsonProperty("site_id_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id_int { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("firstname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Firstname { get; set; } 

        [JsonProperty("surname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Surname { get; set; } 

        [JsonProperty("initials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Initials { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("emailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress { get; set; } 

        [JsonProperty("phonenumber_preferred", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phonenumber_preferred { get; set; } 

        [JsonProperty("sitephonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sitephonenumber { get; set; } 

        [JsonProperty("phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phonenumber { get; set; } 

        [JsonProperty("homenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Homenumber { get; set; } 

        [JsonProperty("mobilenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mobilenumber { get; set; } 

        [JsonProperty("mobilenumber2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mobilenumber2 { get; set; } 

        [JsonProperty("fax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fax { get; set; } 

        [JsonProperty("telpref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Telpref { get; set; } 

        [JsonProperty("activedirectory_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Activedirectory_dn { get; set; } 

        [JsonProperty("onpremise_activedirectory_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Onpremise_activedirectory_dn { get; set; } 

        [JsonProperty("container_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Container_dn { get; set; } 

        [JsonProperty("login", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Login { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("isimportantcontact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isimportantcontact { get; set; } 

        [JsonProperty("other1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other1 { get; set; } 

        [JsonProperty("other2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other2 { get; set; } 

        [JsonProperty("other3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other3 { get; set; } 

        [JsonProperty("other4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other4 { get; set; } 

        [JsonProperty("other5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other5 { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("neversendemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Neversendemails { get; set; } 

        [JsonProperty("default_currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_currency_code { get; set; } 

        [JsonProperty("site_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_guid { get; set; } 

        [JsonProperty("area_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Area_guid { get; set; } 

        [JsonProperty("site_cautomate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_cautomate_guid { get; set; } 

        [JsonProperty("priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority_id { get; set; } 

        [JsonProperty("linked_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_agent_id { get; set; } 

        [JsonProperty("covered_by_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Covered_by_contract { get; set; } 

        [JsonProperty("contract_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contract_value { get; set; } 

        [JsonProperty("software_role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Software_role_name { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment>? Attachments { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("relationship_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relationship_id { get; set; } 

        [JsonProperty("user_relationships", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeRole>? User_relationships { get; set; } 

        [JsonProperty("uddevsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uddevsite { get; set; } 

        [JsonProperty("uddevnum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uddevnum { get; set; } 

        [JsonProperty("uduserid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uduserid { get; set; } 

        [JsonProperty("userdevicerolecount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userdevicerolecount { get; set; } 

        [JsonProperty("site_hubspot_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_hubspot_guid { get; set; } 

        [JsonProperty("isserviceaccount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isserviceaccount { get; set; } 

        [JsonProperty("ignoreautomatedbilling", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignoreautomatedbilling { get; set; } 

        [JsonProperty("isimportantcontact2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isimportantcontact2 { get; set; } 

        [JsonProperty("connectwiseid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connectwiseid { get; set; } 

        [JsonProperty("autotaskid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autotaskid { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("role_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_list { get; set; } 

        [JsonProperty("sitetimezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sitetimezone { get; set; } 

        [JsonProperty("client_account_manager_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_account_manager_id { get; set; } 

        [JsonProperty("datecreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Datecreated { get; set; } 

        [JsonProperty("inv1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv1 { get; set; } 

        [JsonProperty("inv2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv2 { get; set; } 

        [JsonProperty("inv3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv3 { get; set; } 

        [JsonProperty("inv4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv4 { get; set; } 

        [JsonProperty("slaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Slaid { get; set; } 

        [JsonProperty("new_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_password { get; set; } 

        [JsonProperty("dontackemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontackemails { get; set; } 

        [JsonProperty("web_access_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Web_access_level { get; set; } 

        [JsonProperty("showmeonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Showmeonly { get; set; } 

        [JsonProperty("showrecentonly", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Showrecentonly { get; set; } 

        [JsonProperty("inform", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inform { get; set; } 

        [JsonProperty("inv1site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv1site { get; set; } 

        [JsonProperty("inv2site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv2site { get; set; } 

        [JsonProperty("inv3site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv3site { get; set; } 

        [JsonProperty("inv4site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv4site { get; set; } 

        [JsonProperty("inv5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv5 { get; set; } 

        [JsonProperty("inv6", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv6 { get; set; } 

        [JsonProperty("inv7", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv7 { get; set; } 

        [JsonProperty("inv8", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv8 { get; set; } 

        [JsonProperty("inv9", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv9 { get; set; } 

        [JsonProperty("inv10", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv10 { get; set; } 

        [JsonProperty("inv5site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv5site { get; set; } 

        [JsonProperty("inv6site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv6site { get; set; } 

        [JsonProperty("inv7site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv7site { get; set; } 

        [JsonProperty("inv8site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv8site { get; set; } 

        [JsonProperty("inv9site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv9site { get; set; } 

        [JsonProperty("inv10site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv10site { get; set; } 

        [JsonProperty("informaction", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Informaction { get; set; } 

        [JsonProperty("informclearance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Informclearance { get; set; } 

        [JsonProperty("inv11", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv11 { get; set; } 

        [JsonProperty("inv12", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv12 { get; set; } 

        [JsonProperty("inv13", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv13 { get; set; } 

        [JsonProperty("inv14", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv14 { get; set; } 

        [JsonProperty("inv15", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv15 { get; set; } 

        [JsonProperty("inv16", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv16 { get; set; } 

        [JsonProperty("inv17", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv17 { get; set; } 

        [JsonProperty("inv18", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv18 { get; set; } 

        [JsonProperty("inv19", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv19 { get; set; } 

        [JsonProperty("inv20", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv20 { get; set; } 

        [JsonProperty("inv21", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv21 { get; set; } 

        [JsonProperty("inv22", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv22 { get; set; } 

        [JsonProperty("inv23", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv23 { get; set; } 

        [JsonProperty("inv24", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv24 { get; set; } 

        [JsonProperty("inv25", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv25 { get; set; } 

        [JsonProperty("inv11site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv11site { get; set; } 

        [JsonProperty("inv12site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv12site { get; set; } 

        [JsonProperty("inv13site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv13site { get; set; } 

        [JsonProperty("inv14site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv14site { get; set; } 

        [JsonProperty("inv15site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv15site { get; set; } 

        [JsonProperty("inv16site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv16site { get; set; } 

        [JsonProperty("inv17site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv17site { get; set; } 

        [JsonProperty("inv18site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv18site { get; set; } 

        [JsonProperty("inv19site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv19site { get; set; } 

        [JsonProperty("inv20site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv20site { get; set; } 

        [JsonProperty("inv21site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv21site { get; set; } 

        [JsonProperty("inv22site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv22site { get; set; } 

        [JsonProperty("inv23site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv23site { get; set; } 

        [JsonProperty("inv24site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv24site { get; set; } 

        [JsonProperty("inv25site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inv25site { get; set; } 

        [JsonProperty("showslatimes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showslatimes { get; set; } 

        [JsonProperty("canadd", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canadd { get; set; } 

        [JsonProperty("allowviewsitedocs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowviewsitedocs { get; set; } 

        [JsonProperty("third_party_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_guid { get; set; } 

        [JsonProperty("third_party_sql", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_sql { get; set; } 

        [JsonProperty("ischangeapprover", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ischangeapprover { get; set; } 

        [JsonProperty("cancreateuser", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Cancreateuser { get; set; } 

        [JsonProperty("department", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Department { get; set; } 

        [JsonProperty("isheadofdept", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isheadofdept { get; set; } 

        [JsonProperty("deputysite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Deputysite { get; set; } 

        [JsonProperty("deputyusername", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Deputyusername { get; set; } 

        [JsonProperty("cat2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Cat2 { get; set; } 

        [JsonProperty("lastlogindate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastlogindate { get; set; } 

        [JsonProperty("email2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email2 { get; set; } 

        [JsonProperty("email3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Email3 { get; set; } 

        [JsonProperty("iscontractcontact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Iscontractcontact { get; set; } 

        [JsonProperty("informnewarea", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Informnewarea { get; set; } 

        [JsonProperty("informactionarea", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Informactionarea { get; set; } 

        [JsonProperty("informclearancearea", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Informclearancearea { get; set; } 

        [JsonProperty("disclaimermatchstring", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Disclaimermatchstring { get; set; } 

        [JsonProperty("viewallcleared", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Viewallcleared { get; set; } 

        [JsonProperty("isexternal", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isexternal { get; set; } 

        [JsonProperty("question1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Question1 { get; set; } 

        [JsonProperty("question2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Question2 { get; set; } 

        [JsonProperty("question3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Question3 { get; set; } 

        [JsonProperty("question4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Question4 { get; set; } 

        [JsonProperty("question5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Question5 { get; set; } 

        [JsonProperty("dontaddtomailinglist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontaddtomailinglist { get; set; } 

        [JsonProperty("caneditwebdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Caneditwebdetails { get; set; } 

        [JsonProperty("cataloglevel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cataloglevel { get; set; } 

        [JsonProperty("canaccesscatalog", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canaccesscatalog { get; set; } 

        [JsonProperty("hasbeentrained", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hasbeentrained { get; set; } 

        [JsonProperty("admanager", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Admanager { get; set; } 

        [JsonProperty("canviewcontracts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canviewcontracts { get; set; } 

        [JsonProperty("ispoapprover", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ispoapprover { get; set; } 

        [JsonProperty("encmethod", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Encmethod { get; set; } 

        [JsonProperty("adconnection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Adconnection { get; set; } 

        [JsonProperty("useadlogin", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Useadlogin { get; set; } 

        [JsonProperty("sendwelcomeemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendwelcomeemail { get; set; } 

        [JsonProperty("welcomeemail_template_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Welcomeemail_template_id { get; set; } 

        [JsonProperty("resetpassword", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Resetpassword { get; set; } 

        [JsonProperty("_anonymise", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _anonymise { get; set; } 

        [JsonProperty("_reassign_all_to_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _reassign_all_to_user { get; set; } 

        [JsonProperty("ismaincontact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ismaincontact { get; set; } 

        [JsonProperty("primary_address", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public AddressStore? Primary_address { get; set; } 

        [JsonProperty("addresses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AddressStore>? Addresses { get; set; } 

        [JsonProperty("departments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserDepartment>? Departments { get; set; } 

        [JsonProperty("organisation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Organisation_id { get; set; } 

        [JsonProperty("popup_notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AreaPopup>? Popup_notes { get; set; } 

        [JsonProperty("open_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_ticket_count { get; set; } 

        [JsonProperty("onhold_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Onhold_ticket_count { get; set; } 

        [JsonProperty("total_ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Total_ticket_count { get; set; } 

        [JsonProperty("opened_thismonth_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opened_thismonth_count { get; set; } 

        [JsonProperty("_isnew", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isnew { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("memberof", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Memberof { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("usercompany", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserCompany>? Usercompany { get; set; } 

        [JsonProperty("supplier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public Supplier? Supplier { get; set; } 

        [JsonProperty("supplier_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_name { get; set; } 

        [JsonProperty("claims", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<NHD_Claim>? Claims { get; set; } 

        [JsonProperty("app_colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? App_colour { get; set; } 

        [JsonProperty("emailconfirmed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Emailconfirmed { get; set; } 

        [JsonProperty("agent_app_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_app_url { get; set; } 

        [JsonProperty("imagedata", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Imagedata { get; set; } 

        [JsonProperty("webannouncement", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Webannouncement { get; set; } 

        [JsonProperty("cautomateid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Cautomateid { get; set; } 

        [JsonProperty("azure_connectionid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_connectionid { get; set; } 

        [JsonProperty("_importtoken", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtoken { get; set; } 

        [JsonProperty("jira_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_id { get; set; } 

        [JsonProperty("zapier_client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Zapier_client_name { get; set; } 

        [JsonProperty("delegation_activated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delegation_activated { get; set; } 

        [JsonProperty("delegation_timebased", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delegation_timebased { get; set; } 

        [JsonProperty("delegation_start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Delegation_start { get; set; } 

        [JsonProperty("delegation_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Delegation_end { get; set; } 

        [JsonProperty("delegation_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Delegation_user_id { get; set; } 

        [JsonProperty("delegation_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delegation_user_name { get; set; } 

        [JsonProperty("googleworkplace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Googleworkplace_id { get; set; } 

        [JsonProperty("isnhserveremaildefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isnhserveremaildefault { get; set; } 

        [JsonProperty("matchprimaryemail", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Matchprimaryemail { get; set; } 

        [JsonProperty("servicenow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_id { get; set; } 

        [JsonProperty("servicenow_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_username { get; set; } 

        [JsonProperty("site_servicenow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_servicenow_id { get; set; } 

        [JsonProperty("sgatewayid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sgatewayid { get; set; } 

        [JsonProperty("software", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<DeviceApplications>? Software { get; set; } 

        [JsonProperty("canaccessinvoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canaccessinvoices { get; set; } 

        [JsonProperty("samaccountname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Samaccountname { get; set; } 

        [JsonProperty("oktaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oktaid { get; set; } 

        [JsonProperty("okta_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Okta_status { get; set; } 

        [JsonProperty("authenticatorapp_configured", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authenticatorapp_configured { get; set; } 

        [JsonProperty("_revoke_authenticatorapp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _revoke_authenticatorapp { get; set; } 

        [JsonProperty("ulastupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Ulastupdate { get; set; } 

        [JsonProperty("_isopp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isopp { get; set; } 

        [JsonProperty("oppcompanyname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oppcompanyname { get; set; } 

        [JsonProperty("oppcontactname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oppcontactname { get; set; } 

        [JsonProperty("oppemailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Oppemailaddress { get; set; } 

        [JsonProperty("assets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Device_List>? Assets { get; set; } 

        [JsonProperty("locked", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Locked { get; set; } 

        [JsonProperty("site_guid2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_guid2 { get; set; } 

        [JsonProperty("allowviewclientdocs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowviewclientdocs { get; set; } 

        [JsonProperty("azure_tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_tenant_id { get; set; } 

        [JsonProperty("azure_last_login_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Azure_last_login_date { get; set; } 

        [JsonProperty("linked_user_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_user_id { get; set; } 

        [JsonProperty("linked_user_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Linked_user_name { get; set; } 

        [JsonProperty("hubspot_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hubspot_id { get; set; } 

        [JsonProperty("hubspot_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hubspot_url { get; set; } 

        [JsonProperty("hubspot_dont_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hubspot_dont_sync { get; set; } 

        [JsonProperty("hubspot_archived", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Hubspot_archived { get; set; } 

        [JsonProperty("passportal_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Passportal_id { get; set; } 

        [JsonProperty("passportal_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Passportal_client_id { get; set; } 

        [JsonProperty("opportunity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Opportunity_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("isuserdetails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isuserdetails { get; set; } 

        [JsonProperty("hudu_url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Hudu_url { get; set; } 

        [JsonProperty("sqlimport_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sqlimport_id { get; set; } 

        [JsonProperty("sqlimport_user", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sqlimport_user { get; set; } 

        [JsonProperty("unsubscribed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Unsubscribed { get; set; } 

        [JsonProperty("canviewopps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canviewopps { get; set; } 

        [JsonProperty("azure_tenant_domain", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_tenant_domain { get; set; } 

        [JsonProperty("servicenow_companyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Servicenow_companyid { get; set; } 

        [JsonProperty("external_links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? External_links { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

        [JsonProperty("_match_thirdparty_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_thirdparty_id { get; set; } 

        [JsonProperty("_match_integration_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _match_integration_id { get; set; } 

        [JsonProperty("_match_integration_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _match_integration_name { get; set; } 

        [JsonProperty("salesforce_dontsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Salesforce_dontsync { get; set; } 

        [JsonProperty("_hascontactsenabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _hascontactsenabled { get; set; } 

        [JsonProperty("new_site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_site_name { get; set; } 

        [JsonProperty("_isbatch", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isbatch { get; set; } 

        [JsonProperty("roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserRoles>? Roles { get; set; } 

        [JsonProperty("azure_roleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Azure_roleid { get; set; } 

        [JsonProperty("add_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserRoles>? Add_roles { get; set; } 

        [JsonProperty("facebook_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Facebook_id { get; set; } 

        [JsonProperty("facebook_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Facebook_username { get; set; } 

        [JsonProperty("twitter_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Twitter_id { get; set; } 

        [JsonProperty("twitter_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Twitter_username { get; set; } 

        [JsonProperty("_merge_user_into", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _merge_user_into { get; set; } 

        [JsonProperty("_email_collision", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _email_collision { get; set; } 

        [JsonProperty("_dont_fire_automations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _dont_fire_automations { get; set; } 

        [JsonProperty("device_access_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Device_access_level { get; set; } 

        [JsonProperty("ticket_customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Ticket_customfields { get; set; } 

        [JsonProperty("manager_email", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Manager_email { get; set; } 

        [JsonProperty("_remove_licenses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _remove_licenses { get; set; } 

        [JsonProperty("_new_usersite_only", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _new_usersite_only { get; set; } 

        [JsonProperty("thirdpartygroups", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UserThirdPartyGroup>? Thirdpartygroups { get; set; } 

        [JsonProperty("linked_sites", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ExternalLink_List>? Linked_sites { get; set; } 

        [JsonProperty("dontackemails2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dontackemails2 { get; set; } 

        [JsonProperty("instagram_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public long? Instagram_id { get; set; } 

        [JsonProperty("instagram_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Instagram_username { get; set; } 

        [JsonProperty("jira_instance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Jira_instance { get; set; } 

        [JsonProperty("jira_instance_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Jira_instance_name { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("no_manager_roleid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? No_manager_roleid { get; set; } 

        [JsonProperty("matching_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Matching_value { get; set; } 

        [JsonProperty("theme", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Theme { get; set; } 

        [JsonProperty("lang", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lang { get; set; } 

        [JsonProperty("gocardless_customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, string?>? Gocardless_customfields { get; set; } 

        [JsonProperty("service_account_overridden", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Service_account_overridden { get; set; } 

        [JsonProperty("sendaccountsemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sendaccountsemails { get; set; } 

        [JsonProperty("extratabs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Tabname>? Extratabs { get; set; } 

        [JsonProperty("informifack", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Informifack { get; set; } 

        [JsonProperty("informnewareaifack", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Informnewareaifack { get; set; } 

        [JsonProperty("marketing_unsubscribes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MarketingUnsubscribe>? Marketing_unsubscribes { get; set; } 

        [JsonProperty("new_account_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_account_name { get; set; } 

        [JsonProperty("prospect_account_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Prospect_account_id { get; set; } 

        [JsonProperty("open_opportunity_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Open_opportunity_count { get; set; } 

        [JsonProperty("_convert_phonenumbers", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _convert_phonenumbers { get; set; } 

        [JsonProperty("update_user_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Update_user_tickets { get; set; } 

        [JsonProperty("check_update_user_tickets", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Check_update_user_tickets { get; set; } 

        [JsonProperty("canuploaddocuments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Canuploaddocuments { get; set; } 

        [JsonProperty("runbook_button_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Runbook_button_id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Table { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_tax_code { get; set; } 

        [JsonProperty("automatic_sales_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Automatic_sales_tax { get; set; } 

        [JsonProperty("client_taxable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Client_taxable { get; set; } 

        [JsonProperty("overridepdftemplatequote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Overridepdftemplatequote { get; set; } 

        [JsonProperty("overridepdftemplatequote_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Overridepdftemplatequote_name { get; set; } 

        [JsonProperty("contract_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Contract_end_date { get; set; } 

        [JsonProperty("okta_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Okta_id { get; set; } 

        [JsonProperty("azure_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_id { get; set; } 

        [JsonProperty("user_with_clientsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_with_clientsite { get; set; } 

        [JsonProperty("client_automatic_callscript_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_automatic_callscript_id { get; set; } 

        [JsonProperty("neversendmarketingemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Neversendmarketingemails { get; set; } 

        [JsonProperty("is_prospect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_prospect { get; set; } 

        [JsonProperty("whatsapp_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Whatsapp_number { get; set; } 

        [JsonProperty("azureoid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azureoid { get; set; } 

        [JsonProperty("date_of_birth", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_of_birth { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Users_List
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Site_id { get; set; } 

        [JsonProperty("site_id_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Site_id_int { get; set; } 

        [JsonProperty("site_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_name { get; set; } 

        [JsonProperty("client_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_name { get; set; } 

        [JsonProperty("firstname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Firstname { get; set; } 

        [JsonProperty("surname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Surname { get; set; } 

        [JsonProperty("initials", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Initials { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Title { get; set; } 

        [JsonProperty("emailaddress", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Emailaddress { get; set; } 

        [JsonProperty("phonenumber_preferred", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phonenumber_preferred { get; set; } 

        [JsonProperty("sitephonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sitephonenumber { get; set; } 

        [JsonProperty("phonenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Phonenumber { get; set; } 

        [JsonProperty("homenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Homenumber { get; set; } 

        [JsonProperty("mobilenumber", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mobilenumber { get; set; } 

        [JsonProperty("mobilenumber2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mobilenumber2 { get; set; } 

        [JsonProperty("fax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fax { get; set; } 

        [JsonProperty("telpref", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Telpref { get; set; } 

        [JsonProperty("activedirectory_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Activedirectory_dn { get; set; } 

        [JsonProperty("onpremise_activedirectory_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Onpremise_activedirectory_dn { get; set; } 

        [JsonProperty("container_dn", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Container_dn { get; set; } 

        [JsonProperty("login", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Login { get; set; } 

        [JsonProperty("inactive", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inactive { get; set; } 

        [JsonProperty("colour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colour { get; set; } 

        [JsonProperty("isimportantcontact", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isimportantcontact { get; set; } 

        [JsonProperty("other1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other1 { get; set; } 

        [JsonProperty("other2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other2 { get; set; } 

        [JsonProperty("other3", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other3 { get; set; } 

        [JsonProperty("other4", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other4 { get; set; } 

        [JsonProperty("other5", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Other5 { get; set; } 

        [JsonProperty("notes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Notes { get; set; } 

        [JsonProperty("neversendemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Neversendemails { get; set; } 

        [JsonProperty("default_currency_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_currency_code { get; set; } 

        [JsonProperty("site_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_guid { get; set; } 

        [JsonProperty("area_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Area_guid { get; set; } 

        [JsonProperty("site_cautomate_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_cautomate_guid { get; set; } 

        [JsonProperty("priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority_id { get; set; } 

        [JsonProperty("linked_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_agent_id { get; set; } 

        [JsonProperty("covered_by_contract", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Covered_by_contract { get; set; } 

        [JsonProperty("contract_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Contract_value { get; set; } 

        [JsonProperty("software_role_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Software_role_name { get; set; } 

        [JsonProperty("customfields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomField>? Customfields { get; set; } 

        [JsonProperty("attachments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Attachment>? Attachments { get; set; } 

        [JsonProperty("custombuttons", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<CustomButton>? Custombuttons { get; set; } 

        [JsonProperty("relationship_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relationship_id { get; set; } 

        [JsonProperty("user_relationships", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeRole>? User_relationships { get; set; } 

        [JsonProperty("uddevsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uddevsite { get; set; } 

        [JsonProperty("uddevnum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uddevnum { get; set; } 

        [JsonProperty("uduserid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Uduserid { get; set; } 

        [JsonProperty("userdevicerolecount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Userdevicerolecount { get; set; } 

        [JsonProperty("site_hubspot_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site_hubspot_guid { get; set; } 

        [JsonProperty("isserviceaccount", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isserviceaccount { get; set; } 

        [JsonProperty("ignoreautomatedbilling", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Ignoreautomatedbilling { get; set; } 

        [JsonProperty("isimportantcontact2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isimportantcontact2 { get; set; } 

        [JsonProperty("connectwiseid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connectwiseid { get; set; } 

        [JsonProperty("autotaskid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Autotaskid { get; set; } 

        [JsonProperty("messagegroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Messagegroup_id { get; set; } 

        [JsonProperty("role_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Role_list { get; set; } 

        [JsonProperty("sitetimezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sitetimezone { get; set; } 

        [JsonProperty("client_account_manager_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_account_manager_id { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Key { get; set; } 

        [JsonProperty("table", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public TableEnum? Table { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_id { get; set; } 

        [JsonProperty("item_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_tax_code { get; set; } 

        [JsonProperty("automatic_sales_tax", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Automatic_sales_tax { get; set; } 

        [JsonProperty("client_taxable", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Client_taxable { get; set; } 

        [JsonProperty("overridepdftemplatequote", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Overridepdftemplatequote { get; set; } 

        [JsonProperty("overridepdftemplatequote_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Overridepdftemplatequote_name { get; set; } 

        [JsonProperty("contract_end_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Contract_end_date { get; set; } 

        [JsonProperty("okta_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Okta_id { get; set; } 

        [JsonProperty("azure_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azure_id { get; set; } 

        [JsonProperty("user_with_clientsite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? User_with_clientsite { get; set; } 

        [JsonProperty("client_automatic_callscript_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_automatic_callscript_id { get; set; } 

        [JsonProperty("neversendmarketingemails", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Neversendmarketingemails { get; set; } 

        [JsonProperty("is_prospect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_prospect { get; set; } 

        [JsonProperty("whatsapp_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Whatsapp_number { get; set; } 

        [JsonProperty("azureoid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Azureoid { get; set; } 

        [JsonProperty("date_of_birth", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Date_of_birth { get; set; } 

        [JsonProperty("_importtypeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? _importtypeid { get; set; } 

        [JsonProperty("_importthirdpartyid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importthirdpartyid { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("new_external_link", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ExternalLink_List? New_external_link { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class VMWorkspaceDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("region", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Region { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("vmworkspace_clientid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Vmworkspace_clientid { get; set; } 

        [JsonProperty("new_integration_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_integration_key { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("default_devicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicesite { get; set; } 

        [JsonProperty("default_devicesite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicesite_name { get; set; } 

        [JsonProperty("default_devicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicetype { get; set; } 

        [JsonProperty("default_devicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicetypename { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_fieldname { get; set; } 

        [JsonProperty("vmworkspace_fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Vmworkspace_fieldmappings { get; set; } 

        [JsonProperty("sitemappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationSiteMapping>? Sitemappings { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("halo_integrator_import_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Halo_integrator_import_list { get; set; } 

        [JsonProperty("halo_integrator_import_types", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Halo_integrator_import_types { get; set; } 

        [JsonProperty("delete_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete_devices { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

        [JsonProperty("dont_update_device_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_device_type { get; set; } 

        [JsonProperty("dont_move_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_site { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("default_assetgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup { get; set; } 

        [JsonProperty("default_assetgroupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroupname { get; set; } 

        [JsonProperty("assettype_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_choice { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_field { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ViewColumns
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("tile_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tile_html { get; set; } 

        [JsonProperty("columns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ViewColumnsDetails>? Columns { get; set; } 

        [JsonProperty("_temp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _temp { get; set; } 

        [JsonProperty("card_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Card_html { get; set; } 

        [JsonProperty("linked_dashboard_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linked_dashboard_id { get; set; } 

        [JsonProperty("use_dashboard", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_dashboard { get; set; } 

        [JsonProperty("include_children", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Include_children { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restriction_type { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Team_id { get; set; } 

        [JsonProperty("team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Team_guid { get; set; } 

        [JsonProperty("team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ViewColumnsDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("columns_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Columns_id { get; set; } 

        [JsonProperty("column_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Column_seq { get; set; } 

        [JsonProperty("column_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Column_name { get; set; } 

        [JsonProperty("width", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Width { get; set; } 

        [JsonProperty("order_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Order_seq { get; set; } 

        [JsonProperty("order_desc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Order_desc { get; set; } 

        [JsonProperty("column_title_override", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Column_title_override { get; set; } 

        [JsonProperty("groupbystatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Groupbystatus { get; set; } 

        [JsonProperty("columns_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Columns_guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ViewFilter
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Team_id { get; set; } 

        [JsonProperty("team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type_name { get; set; } 

        [JsonProperty("sys_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sys_id { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ViewFilterDetails>? Filters { get; set; } 

        [JsonProperty("_temp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _temp { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restriction_type { get; set; } 

        [JsonProperty("team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Team_guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ViewFilterDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("filter_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_id { get; set; } 

        [JsonProperty("list_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? List_id { get; set; } 

        [JsonProperty("itemsupplier_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itemsupplier_id { get; set; } 

        [JsonProperty("area_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Area_id { get; set; } 

        [JsonProperty("filter_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_name { get; set; } 

        [JsonProperty("filter_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_type { get; set; } 

        [JsonProperty("filter_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_value { get; set; } 

        [JsonProperty("filter_values", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair>? Filter_values { get; set; } 

        [JsonProperty("multiselect_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<MultiselectFilter>? Multiselect_value { get; set; } 

        [JsonProperty("filter_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Filter_guid { get; set; } 

        [JsonProperty("list_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? List_guid { get; set; } 

        [JsonProperty("itemsupplier_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Itemsupplier_guid { get; set; } 

        [JsonProperty("filter_value_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Filter_value_guid { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ViewListGroup
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("collapsed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Collapsed { get; set; } 

        [JsonProperty("type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type_name { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ViewLists
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Use { get; set; } 

        [JsonProperty("restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Restriction_type { get; set; } 

        [JsonProperty("agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Agent_id { get; set; } 

        [JsonProperty("agent_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Agent_name { get; set; } 

        [JsonProperty("team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Team_id { get; set; } 

        [JsonProperty("team_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Team_guid { get; set; } 

        [JsonProperty("team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Team_name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("type_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Type_name { get; set; } 

        [JsonProperty("sequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sequence { get; set; } 

        [JsonProperty("showcounts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Showcounts { get; set; } 

        [JsonProperty("column_profile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Column_profile_id { get; set; } 

        [JsonProperty("column_profile_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Column_profile_guid { get; set; } 

        [JsonProperty("filter_profile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_profile_id { get; set; } 

        [JsonProperty("filter_profile_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Filter_profile_guid { get; set; } 

        [JsonProperty("lock_view_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Lock_view_type { get; set; } 

        [JsonProperty("connectedinstance_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connectedinstance_id { get; set; } 

        [JsonProperty("connectedinstance_list_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connectedinstance_list_id { get; set; } 

        [JsonProperty("show_in_team_tree", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_in_team_tree { get; set; } 

        [JsonProperty("show_in_team_tree_team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Show_in_team_tree_team_id { get; set; } 

        [JsonProperty("show_in_team_tree_team_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Show_in_team_tree_team_name { get; set; } 

        [JsonProperty("ticket_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_count { get; set; } 

        [JsonProperty("connectedinstance_error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Connectedinstance_error { get; set; } 

        [JsonProperty("column_profile_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Column_profile_name { get; set; } 

        [JsonProperty("filter_profile_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filter_profile_name { get; set; } 

        [JsonProperty("connectedinstance_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectedinstance_name { get; set; } 

        [JsonProperty("filters", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ViewFilterDetails>? Filters { get; set; } 

        [JsonProperty("group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group { get; set; } 

        [JsonProperty("group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Group_name { get; set; } 

        [JsonProperty("group_seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_seq { get; set; } 

        [JsonProperty("group_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Group_type { get; set; } 

        [JsonProperty("group_collapsed", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Group_collapsed { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class VirimaDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("tenantid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenantid { get; set; } 

        [JsonProperty("new_integration_key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_integration_key { get; set; } 

        [JsonProperty("default_devicesite", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicesite { get; set; } 

        [JsonProperty("default_devicesite_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicesite_name { get; set; } 

        [JsonProperty("default_devicetype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_devicetype { get; set; } 

        [JsonProperty("default_devicetypename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_devicetypename { get; set; } 

        [JsonProperty("assetimportidentifier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetimportidentifier { get; set; } 

        [JsonProperty("assetimportidentifier_fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetimportidentifier_fieldname { get; set; } 

        [JsonProperty("fieldmappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Fieldmappings { get; set; } 

        [JsonProperty("sitemappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationSiteMapping>? Sitemappings { get; set; } 

        [JsonProperty("enableintegrator", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableintegrator { get; set; } 

        [JsonProperty("lastsyncdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastsyncdate { get; set; } 

        [JsonProperty("lastsyncerror", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Lastsyncerror { get; set; } 

        [JsonProperty("delete_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Delete_devices { get; set; } 

        [JsonProperty("dont_create_new_devices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_create_new_devices { get; set; } 

        [JsonProperty("dont_update_device_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_update_device_type { get; set; } 

        [JsonProperty("dont_move_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_move_site { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("mappings_xtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMapping>? Mappings_xtype { get; set; } 

        [JsonProperty("default_assetgroup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_assetgroup { get; set; } 

        [JsonProperty("default_assetgroupname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_assetgroupname { get; set; } 

        [JsonProperty("assettype_choice", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assettype_choice { get; set; } 

        [JsonProperty("assettype_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assettype_field { get; set; } 

        [JsonProperty("use_user_site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_user_site { get; set; } 

        [JsonProperty("override_site_rules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Override_site_rules { get; set; } 

        [JsonProperty("dont_remove_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_remove_users { get; set; } 

        [JsonProperty("relation_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Relation_sync { get; set; } 

        [JsonProperty("software_import_licence_matching", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Software_import_licence_matching { get; set; } 

        [JsonProperty("default_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_status { get; set; } 

        [JsonProperty("default_status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_status_name { get; set; } 

        [JsonProperty("delete_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Delete_status { get; set; } 

        [JsonProperty("delete_status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Delete_status_name { get; set; } 

        [JsonProperty("user_matching_field", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? User_matching_field { get; set; } 

        [JsonProperty("_clearlastsync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _clearlastsync { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class VirtualAgent
    {
        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("connection_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Connection_type { get; set; } 

        [JsonProperty("use", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Use { get; set; } 

        [JsonProperty("third_party_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Third_party_id { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("_connection_enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _connection_enabled { get; set; } 

        [JsonProperty("_instructions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _instructions { get; set; } 

        [JsonProperty("_model", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _model { get; set; } 

        [JsonProperty("_update_tools", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _update_tools { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Webhook
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("url", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Url { get; set; } 

        [JsonProperty("content_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Content_type { get; set; } 

        [JsonProperty("authentication_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Authentication_type { get; set; } 

        [JsonProperty("method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Method { get; set; } 

        [JsonProperty("basic_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Basic_username { get; set; } 

        [JsonProperty("basic_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Basic_password { get; set; } 

        [JsonProperty("certificate_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Certificate_id { get; set; } 

        [JsonProperty("certificate_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Certificate_name { get; set; } 

        [JsonProperty("active", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Active { get; set; } 

        [JsonProperty("events", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<UnameNotification>? Events { get; set; } 

        [JsonProperty("last_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Last_status { get; set; } 

        [JsonProperty("systemuse", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Systemuse { get; set; } 

        [JsonProperty("runbook_start_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Runbook_start_type { get; set; } 

        [JsonProperty("inbound_authentication_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Inbound_authentication_type { get; set; } 

        [JsonProperty("authentication_header", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Authentication_header { get; set; } 

        [JsonProperty("algorithm", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Algorithm { get; set; } 

        [JsonProperty("digest", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Digest { get; set; } 

        [JsonProperty("signature_prefix", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Signature_prefix { get; set; } 

        [JsonProperty("_iszapier", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _iszapier { get; set; } 

        [JsonProperty("zapier_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zapier_type { get; set; } 

        [JsonProperty("zapier_client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zapier_client_id { get; set; } 

        [JsonProperty("zapier_site_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zapier_site_id { get; set; } 

        [JsonProperty("zapier_username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Zapier_username { get; set; } 

        [JsonProperty("zapier_tickettype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zapier_tickettype_id { get; set; } 

        [JsonProperty("zapier_status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zapier_status_id { get; set; } 

        [JsonProperty("zapier_sla_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zapier_sla_id { get; set; } 

        [JsonProperty("zapier_priority_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zapier_priority_id { get; set; } 

        [JsonProperty("zapier_team_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zapier_team_id { get; set; } 

        [JsonProperty("zapier_agent_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Zapier_agent_id { get; set; } 

        [JsonProperty("mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<WebhookMapping>? Mappings { get; set; } 

        [JsonProperty("custom_payload", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Custom_payload { get; set; } 

        [JsonProperty("payload_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Payload_type { get; set; } 

        [JsonProperty("flow_chart_json", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Flow_chart_json { get; set; } 

        [JsonProperty("library_licence_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Library_licence_name { get; set; } 

        [JsonProperty("icon_base64", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon_base64 { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("major_version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Major_version_number { get; set; } 

        [JsonProperty("minor_version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Minor_version_number { get; set; } 

        [JsonProperty("patch_version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Patch_version_number { get; set; } 

        [JsonProperty("version_number", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Version_number { get; set; } 

        [JsonProperty("note", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Note { get; set; } 

        [JsonProperty("install_popup", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Install_popup { get; set; } 

        [JsonProperty("steps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FlowDetail>? Steps { get; set; } 

        [JsonProperty("input_variables", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethodValue>? Input_variables { get; set; } 

        [JsonProperty("standalone_methods", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegrationMethod>? Standalone_methods { get; set; } 

        [JsonProperty("integrations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<OutboundIntegration>? Integrations { get; set; } 

        [JsonProperty("schedule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Schedule_id { get; set; } 

        [JsonProperty("disabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Disabled { get; set; } 

        [JsonProperty("lastcreated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Lastcreated { get; set; } 

        [JsonProperty("nextcreationdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Nextcreationdate { get; set; } 

        [JsonProperty("log_retention_policy_days", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Log_retention_policy_days { get; set; } 

        [JsonProperty("batch_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Batch_method { get; set; } 

        [JsonProperty("batch_delay_seconds", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Batch_delay_seconds { get; set; } 

        [JsonProperty("batch_limit", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Batch_limit { get; set; } 

        [JsonProperty("infinite_loop_threshold", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Infinite_loop_threshold { get; set; } 

        [JsonProperty("notify_on_failure", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Notify_on_failure { get; set; } 

        [JsonProperty("_test", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _test { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WebhookEvent
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; } 

        [JsonProperty("webhook_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Webhook_id { get; set; } 

        [JsonProperty("integration_method_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Integration_method_id { get; set; } 

        [JsonProperty("integation_method_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Integation_method_name { get; set; } 

        [JsonProperty("notification_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Notification_id { get; set; } 

        [JsonProperty("timestamp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Timestamp { get; set; } 

        [JsonProperty("status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status { get; set; } 

        [JsonProperty("duration", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Duration { get; set; } 

        [JsonProperty("requestheaders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestheaders { get; set; } 

        [JsonProperty("requestbody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Requestbody { get; set; } 

        [JsonProperty("responsestatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Responsestatus { get; set; } 

        [JsonProperty("responseheaders", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Responseheaders { get; set; } 

        [JsonProperty("responsebody", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Responsebody { get; set; } 

        [JsonProperty("automation_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automation_id { get; set; } 

        [JsonProperty("automation_step", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Automation_step { get; set; } 

        [JsonProperty("automation_iteration_state", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Automation_iteration_state { get; set; } 

        [JsonProperty("entity_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Entity_id { get; set; } 

        [JsonProperty("error", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Error { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("log_retention_policy_deletion_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Log_retention_policy_deletion_date { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WebhookMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("webhookid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Webhookid { get; set; } 

        [JsonProperty("fiusage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fiusage { get; set; } 

        [JsonProperty("fiusagename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fiusagename { get; set; } 

        [JsonProperty("fiid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fiid { get; set; } 

        [JsonProperty("finame", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Finame { get; set; } 

        [JsonProperty("filabel", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Filabel { get; set; } 

        [JsonProperty("key", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Key { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum WebhookSubscriptionAction
    {

        _0 = 0,

        _1 = 1,

        _2 = 2,

        _3 = 3,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Widget
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("dashboardid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dashboardid { get; set; } 

        [JsonProperty("i", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? I { get; set; } 

        [JsonProperty("w", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? W { get; set; } 

        [JsonProperty("h", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? H { get; set; } 

        [JsonProperty("x", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? X { get; set; } 

        [JsonProperty("y", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Y { get; set; } 

        [JsonProperty("title", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Title { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("report_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Report_id { get; set; } 

        [JsonProperty("counter_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Counter_type { get; set; } 

        [JsonProperty("count_format_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Count_format_type { get; set; } 

        [JsonProperty("column_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(255)]
        public string? Column_name { get; set; } 

        [JsonProperty("ticketarea_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticketarea_id { get; set; } 

        [JsonProperty("view_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? View_type { get; set; } 

        [JsonProperty("filter_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Filter_id { get; set; } 

        [JsonProperty("tree_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tree_id { get; set; } 

        [JsonProperty("tree_id2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Tree_id2 { get; set; } 

        [JsonProperty("columns_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Columns_id { get; set; } 

        [JsonProperty("page_size", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Page_size { get; set; } 

        [JsonProperty("custom_html", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(10000)]
        public string? Custom_html { get; set; } 

        [JsonProperty("custom_html_translated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Custom_html_translated { get; set; } 

        [JsonProperty("style", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Style { get; set; } 

        [JsonProperty("custom_css", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        [System.ComponentModel.DataAnnotations.StringLength(4000)]
        public string? Custom_css { get; set; } 

        [JsonProperty("initialcolour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Initialcolour { get; set; } 

        [JsonProperty("changedcolour", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Changedcolour { get; set; } 

        [JsonProperty("thresholdvalue", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Thresholdvalue { get; set; } 

        [JsonProperty("colourchangerule", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Colourchangerule { get; set; } 

        [JsonProperty("override_drilldown_report_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Override_drilldown_report_id { get; set; } 

        [JsonProperty("default_currency_symbol", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_currency_symbol { get; set; } 

        [JsonProperty("relation", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Relation { get; set; } 

        [JsonProperty("field_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_id { get; set; } 

        [JsonProperty("outcome_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Outcome_id { get; set; } 

        [JsonProperty("field_columns", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_columns { get; set; } 

        [JsonProperty("mode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Mode { get; set; } 

        [JsonProperty("actions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TOutcome>? Actions { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("open_report_in_new_tab", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Open_report_in_new_tab { get; set; } 

        [JsonProperty("display_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Display_type { get; set; } 

        [JsonProperty("charttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Charttype { get; set; } 

        [JsonProperty("xaxis", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xaxis { get; set; } 

        [JsonProperty("yaxis", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Yaxis { get; set; } 

        [JsonProperty("xaxiscaption", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xaxiscaption { get; set; } 

        [JsonProperty("yaxiscaption", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Yaxiscaption { get; set; } 

        [JsonProperty("series", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AnalyzerProfileSeries>? Series { get; set; } 

        [JsonProperty("colours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AnalyzerProfileColour>? Colours { get; set; } 

        [JsonProperty("graphorderby", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Graphorderby { get; set; } 

        [JsonProperty("graphorder", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Graphorder { get; set; } 

        [JsonProperty("count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Count { get; set; } 

        [JsonProperty("sum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sum { get; set; } 

        [JsonProperty("average", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Average { get; set; } 

        [JsonProperty("averageaspercentage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Averageaspercentage { get; set; } 

        [JsonProperty("show_top_only", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_top_only { get; set; } 

        [JsonProperty("top_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Top_count { get; set; } 

        [JsonProperty("show_trendline", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_trendline { get; set; } 

        [JsonProperty("show_datavalues", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_datavalues { get; set; } 

        [JsonProperty("stackbars", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Stackbars { get; set; } 

        [JsonProperty("colourpallette", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Colourpallette { get; set; } 

        [JsonProperty("chart_comparison", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Chart_comparison { get; set; } 

        [JsonProperty("autosize", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Autosize { get; set; } 

        [JsonProperty("translations", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<LanguagePackTranslationsCustom>? Translations { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WordpressComLinks
    {
        [JsonProperty("counts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Counts { get; set; } 

        [JsonProperty("self", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Self { get; set; } 

        [JsonProperty("help", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Help { get; set; } 

        [JsonProperty("site", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Site { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WordpressComMeta
    {
        [JsonProperty("links", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WordpressComLinks? Links { get; set; } 

        [JsonProperty("next_page", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Next_page { get; set; } 

        [JsonProperty("wpcom", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Wpcom { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WordpressComObject
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("slug", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Slug { get; set; } 

        [JsonProperty("description", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Description { get; set; } 

        [JsonProperty("post_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Post_count { get; set; } 

        [JsonProperty("parent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Parent { get; set; } 

        [JsonProperty("meta", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public WordpressComMeta? Meta { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WordpressDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("connectionname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectionname { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _code { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("blogid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Blogid { get; set; } 

        [JsonProperty("blogurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Blogurl { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WordpressOrgDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("connectionname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Connectionname { get; set; } 

        [JsonProperty("new_integration_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_integration_method { get; set; } 

        [JsonProperty("username", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Username { get; set; } 

        [JsonProperty("new_app_password", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_app_password { get; set; } 

        [JsonProperty("enabled", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enabled { get; set; } 

        [JsonProperty("blogurl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Blogurl { get; set; } 

        [JsonProperty("import_this_tag", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Import_this_tag { get; set; } 

        [JsonProperty("post_status_to_import", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Post_status_to_import { get; set; } 

        [JsonProperty("custom_endpoint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Custom_endpoint { get; set; } 

        [JsonProperty("use_custom_endpoint", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Use_custom_endpoint { get; set; } 

        [JsonProperty("import_this_tag_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Import_this_tag_name { get; set; } 

        [JsonProperty("default_faqlist", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Default_faqlist { get; set; } 

        [JsonProperty("default_faqlist_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_faqlist_name { get; set; } 

        [JsonProperty("importcategories", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Importcategories { get; set; } 

        [JsonProperty("nocategoryupdate", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Nocategoryupdate { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WorkdayBreak
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("workday_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workday_id { get; set; } 

        [JsonProperty("start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start { get; set; } 

        [JsonProperty("end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End { get; set; } 

        [JsonProperty("incmonday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incmonday { get; set; } 

        [JsonProperty("inctuesday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inctuesday { get; set; } 

        [JsonProperty("incwednesday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incwednesday { get; set; } 

        [JsonProperty("incthursday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incthursday { get; set; } 

        [JsonProperty("incfriday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incfriday { get; set; } 

        [JsonProperty("incsaturday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incsaturday { get; set; } 

        [JsonProperty("incsunday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incsunday { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Workdays
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("timezone", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Timezone { get; set; } 

        [JsonProperty("start", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Start { get; set; } 

        [JsonProperty("end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? End { get; set; } 

        [JsonProperty("incmonday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incmonday { get; set; } 

        [JsonProperty("inctuesday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Inctuesday { get; set; } 

        [JsonProperty("incwednesday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incwednesday { get; set; } 

        [JsonProperty("incthursday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incthursday { get; set; } 

        [JsonProperty("incfriday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incfriday { get; set; } 

        [JsonProperty("incsaturday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incsaturday { get; set; } 

        [JsonProperty("incsunday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Incsunday { get; set; } 

        [JsonProperty("alldayssame", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Alldayssame { get; set; } 

        [JsonProperty("endmonday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Endmonday { get; set; } 

        [JsonProperty("endtuesday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Endtuesday { get; set; } 

        [JsonProperty("endwednesday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Endwednesday { get; set; } 

        [JsonProperty("endthursday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Endthursday { get; set; } 

        [JsonProperty("endfriday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Endfriday { get; set; } 

        [JsonProperty("endsaturday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Endsaturday { get; set; } 

        [JsonProperty("endsunday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Endsunday { get; set; } 

        [JsonProperty("startmonday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startmonday { get; set; } 

        [JsonProperty("starttuesday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Starttuesday { get; set; } 

        [JsonProperty("startwednesday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startwednesday { get; set; } 

        [JsonProperty("startthursday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startthursday { get; set; } 

        [JsonProperty("startfriday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startfriday { get; set; } 

        [JsonProperty("startsaturday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startsaturday { get; set; } 

        [JsonProperty("startsunday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Startsunday { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("holidays", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Holidays>? Holidays { get; set; } 

        [JsonProperty("timeslots", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Timeslot>? Timeslots { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("breaks", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<WorkdayBreak>? Breaks { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WorkflowHistory
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("ticket_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Ticket_id { get; set; } 

        [JsonProperty("moved_from", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Moved_from { get; set; } 

        [JsonProperty("moved_to", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Moved_to { get; set; } 

        [JsonProperty("flow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flow_id { get; set; } 

        [JsonProperty("moved_from_stage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Moved_from_stage { get; set; } 

        [JsonProperty("moved_to_stage", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Moved_to_stage { get; set; } 

        [JsonProperty("moved_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Moved_date { get; set; } 

        [JsonProperty("target_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Target_date { get; set; } 

        [JsonProperty("target_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Target_hours { get; set; } 

        [JsonProperty("actual_hours", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Actual_hours { get; set; } 

        [JsonProperty("target_met", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Target_met { get; set; } 

        [JsonProperty("override_date", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Override_date { get; set; } 

        [JsonProperty("summary", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Summary { get; set; } 

        [JsonProperty("action_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Action_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WorkflowTarget
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("flow_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flow_id { get; set; } 

        [JsonProperty("flow_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Flow_guid { get; set; } 

        [JsonProperty("target_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Target_type { get; set; } 

        [JsonProperty("start_stage_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Start_stage_id { get; set; } 

        [JsonProperty("start_stage_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Start_stage_name { get; set; } 

        [JsonProperty("end_stage_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? End_stage_id { get; set; } 

        [JsonProperty("end_stage_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? End_stage_name { get; set; } 

        [JsonProperty("start_steps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<WorkflowTargetStep>? Start_steps { get; set; } 

        [JsonProperty("end_steps", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<WorkflowTargetStep>? End_steps { get; set; } 

        [JsonProperty("target", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Target { get; set; } 

        [JsonProperty("target_units", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Target_units { get; set; } 

        [JsonProperty("workday", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workday { get; set; } 

        [JsonProperty("workday_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workday_name { get; set; } 

        [JsonProperty("rules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Autoassign>? Rules { get; set; } 

        [JsonProperty("rule_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WorkflowTargetStep
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("workflowtarget_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Workflowtarget_id { get; set; } 

        [JsonProperty("step_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Step_id { get; set; } 

        [JsonProperty("is_end", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_end { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("flowheader_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Flowheader_id { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class WorkspaceApplication
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Id { get; set; } 

        [JsonProperty("database_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Database_id { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Client_id { get; set; } 

        [JsonProperty("client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_secret { get; set; } 

        [JsonProperty("workspace_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workspace_id { get; set; } 

        [JsonProperty("workspace_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Workspace_token { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public enum XMessagePriority
    {

        _1 = 1,

        _2 = 2,

        _3 = 3,

        _4 = 4,

        _5 = 5,

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class XTypeMapping
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("typeid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Typeid { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value { get; set; } 

        [JsonProperty("thirdpartyname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Thirdpartyname { get; set; } 

        [JsonProperty("msid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Msid { get; set; } 

        [JsonProperty("isbladehost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Isbladehost { get; set; } 

        [JsonProperty("tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tags { get; set; } 

        [JsonProperty("category", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category { get; set; } 

        [JsonProperty("includesoftware", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Includesoftware { get; set; } 

        [JsonProperty("field_mappings", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<IntegrationFieldMapping>? Field_mappings { get; set; } 

        [JsonProperty("field_mapping_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Field_mapping_count { get; set; } 

        [JsonProperty("sub_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sub_type { get; set; } 

        [JsonProperty("tag_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tag_list { get; set; } 

        [JsonProperty("tag_list_pairs", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Tag_list_pairs { get; set; } 

        [JsonProperty("seq", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Seq { get; set; } 

        [JsonProperty("partial_match", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Partial_match { get; set; } 

        [JsonProperty("detailsid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Detailsid { get; set; } 

        [JsonProperty("userules", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Userules { get; set; } 

        [JsonProperty("criteria", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeMappingCriteria>? Criteria { get; set; } 

        [JsonProperty("rule_count", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rule_count { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class XTypeMappingCriteria
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("xtypemapping_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Xtypemapping_id { get; set; } 

        [JsonProperty("tablename", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tablename { get; set; } 

        [JsonProperty("fieldname", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Fieldname { get; set; } 

        [JsonProperty("value_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_type { get; set; } 

        [JsonProperty("value_int", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Value_int { get; set; } 

        [JsonProperty("value_float", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Value_float { get; set; } 

        [JsonProperty("value_string", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_string { get; set; } 

        [JsonProperty("value_datetime", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Value_datetime { get; set; } 

        [JsonProperty("value_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Value_display { get; set; } 

        [JsonProperty("type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Type { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class XTypeRole
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("xtype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Xtype_id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class XTypeStatus
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("xtype_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Xtype_id { get; set; } 

        [JsonProperty("xtype_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Xtype_name { get; set; } 

        [JsonProperty("status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_id { get; set; } 

        [JsonProperty("status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_name { get; set; } 

        [JsonProperty("allowafterallstatuses", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowafterallstatuses { get; set; } 

        [JsonProperty("allowedafterstatus", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeStatusRestrictions>? Allowedafterstatus { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class XTypeStatusRestrictions
    {
        [JsonProperty("xtypestatus_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Xtypestatus_id { get; set; } 

        [JsonProperty("status_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_id { get; set; } 

        [JsonProperty("status_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Status_name { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class XeroDetails
    {
        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("tenant_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant_id { get; set; } 

        [JsonProperty("tenant_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tenant_name { get; set; } 

        [JsonProperty("new_access_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_access_token { get; set; } 

        [JsonProperty("new_refresh_token", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_refresh_token { get; set; } 

        [JsonProperty("token_expiry", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? Token_expiry { get; set; } 

        [JsonProperty("authorized", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Authorized { get; set; } 

        [JsonProperty("redirect_uri", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Redirect_uri { get; set; } 

        [JsonProperty("code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Code { get; set; } 

        [JsonProperty("_exchangecode", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _exchangecode { get; set; } 

        [JsonProperty("_disconnect", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _disconnect { get; set; } 

        [JsonProperty("client_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Client_top_level { get; set; } 

        [JsonProperty("client_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_top_level_name { get; set; } 

        [JsonProperty("item_group", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Item_group { get; set; } 

        [JsonProperty("item_group_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_group_name { get; set; } 

        [JsonProperty("isdefault", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Isdefault { get; set; } 

        [JsonProperty("enablesync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enablesync { get; set; } 

        [JsonProperty("default_item_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_item_code { get; set; } 

        [JsonProperty("show_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_message { get; set; } 

        [JsonProperty("_importtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _importtype { get; set; } 

        [JsonProperty("client_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Client_id { get; set; } 

        [JsonProperty("new_client_secret", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_client_secret { get; set; } 

        [JsonProperty("sync_entities", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Sync_entities { get; set; } 

        [JsonProperty("sync_entities_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<KeyPair2>? Sync_entities_list { get; set; } 

        [JsonProperty("supplier_top_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier_top_level { get; set; } 

        [JsonProperty("supplier_top_level_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Supplier_top_level_name { get; set; } 

        [JsonProperty("archive_contacts", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Archive_contacts { get; set; } 

        [JsonProperty("default_order_item_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_order_item_code { get; set; } 

        [JsonProperty("rounding_adjustment_account_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Rounding_adjustment_account_code { get; set; } 

        [JsonProperty("group_rounding_adjustments", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Group_rounding_adjustments { get; set; } 

        [JsonProperty("new_method", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? New_method { get; set; } 

        [JsonProperty("receive_client_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_client_created { get; set; } 

        [JsonProperty("receive_client_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_client_updated { get; set; } 

        [JsonProperty("receive_invoice_created", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_invoice_created { get; set; } 

        [JsonProperty("receive_invoice_updated", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Receive_invoice_updated { get; set; } 

        [JsonProperty("default_creditnote_item_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Default_creditnote_item_code { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("sync_currency_for_invoices", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Sync_currency_for_invoices { get; set; } 

        [JsonProperty("no_item_group_sync", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? No_item_group_sync { get; set; } 

        [JsonProperty("invoice_description_data", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Invoice_description_data { get; set; } 

        [JsonProperty("dont_sync_cost_tracking_lines", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Dont_sync_cost_tracking_lines { get; set; } 

        [JsonProperty("organisation_version", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Organisation_version { get; set; } 

        [JsonProperty("no_tax_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? No_tax_code { get; set; } 

        [JsonProperty("category_1_keypair", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Category_1_keypair { get; set; } 

        [JsonProperty("category_2_keypair", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public KeyPair2? Category_2_keypair { get; set; } 

        [JsonProperty("category_1_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_1_name { get; set; } 

        [JsonProperty("category_1_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_1_id { get; set; } 

        [JsonProperty("category_2_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_2_name { get; set; } 

        [JsonProperty("category_2_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Category_2_id { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class XeroWebhookEvent
    {
        [JsonProperty("resourceUrl", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ResourceUrl { get; set; } 

        [JsonProperty("resourceId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? ResourceId { get; set; } 

        [JsonProperty("eventDateUtc", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.DateTimeOffset? EventDateUtc { get; set; } 

        [JsonProperty("eventType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EventType { get; set; } 

        [JsonProperty("eventCategory", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? EventCategory { get; set; } 

        [JsonProperty("tenantId", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TenantId { get; set; } 

        [JsonProperty("tenantType", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? TenantType { get; set; } 

        [JsonProperty("resourceObject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public object? ResourceObject { get; set; } 

        [JsonProperty("eventTypeNum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public RelayEventType? EventTypeNum { get; set; } 

        [JsonProperty("eventCategoryNum", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public RelayEventCategory? EventCategoryNum { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class Xtype
    {
        [JsonProperty("guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Guid { get; set; } 

        [JsonProperty("intent", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Intent { get; set; } 

        [JsonProperty("id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Id { get; set; } 

        [JsonProperty("name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Name { get; set; } 

        [JsonProperty("assetgroup_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Assetgroup_id { get; set; } 

        [JsonProperty("assetgroup_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Assetgroup_guid { get; set; } 

        [JsonProperty("assetgroup_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Assetgroup_name { get; set; } 

        [JsonProperty("keyfield_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Keyfield_id { get; set; } 

        [JsonProperty("keyfield_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Keyfield_name { get; set; } 

        [JsonProperty("keyfield2_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Keyfield2_id { get; set; } 

        [JsonProperty("keyfield2_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Keyfield2_name { get; set; } 

        [JsonProperty("keyfield3_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Keyfield3_id { get; set; } 

        [JsonProperty("keyfield3_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Keyfield3_name { get; set; } 

        [JsonProperty("memo", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Memo { get; set; } 

        [JsonProperty("manufacturer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Manufacturer { get; set; } 

        [JsonProperty("supplier1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Supplier1 { get; set; } 

        [JsonProperty("itemno", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Itemno { get; set; } 

        [JsonProperty("cost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Cost { get; set; } 

        [JsonProperty("useteamviewer", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Useteamviewer { get; set; } 

        [JsonProperty("accountscode1", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountscode1 { get; set; } 

        [JsonProperty("accountscode2", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Accountscode2 { get; set; } 

        [JsonProperty("weeklycost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Weeklycost { get; set; } 

        [JsonProperty("monthlycost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Monthlycost { get; set; } 

        [JsonProperty("quarterlycost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Quarterlycost { get; set; } 

        [JsonProperty("sixmonthlycost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Sixmonthlycost { get; set; } 

        [JsonProperty("yearlycost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Yearlycost { get; set; } 

        [JsonProperty("twoyearlycost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Twoyearlycost { get; set; } 

        [JsonProperty("threeyearlycost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Threeyearlycost { get; set; } 

        [JsonProperty("fouryearlycost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Fouryearlycost { get; set; } 

        [JsonProperty("fiveyearlycost", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Fiveyearlycost { get; set; } 

        [JsonProperty("kaseyaid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Kaseyaid { get; set; } 

        [JsonProperty("icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Icon { get; set; } 

        [JsonProperty("show_to_users", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Show_to_users { get; set; } 

        [JsonProperty("fields", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TypeInfo>? Fields { get; set; } 

        [JsonProperty("field_list", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Field>? Field_list { get; set; } 

        [JsonProperty("item_code", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Item_code { get; set; } 

        [JsonProperty("defaultsequence", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Defaultsequence { get; set; } 

        [JsonProperty("tagprefix", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Tagprefix { get; set; } 

        [JsonProperty("column_profile_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Column_profile_id { get; set; } 

        [JsonProperty("column_profile_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Column_profile_guid { get; set; } 

        [JsonProperty("columnprofileoverride_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Columnprofileoverride_name { get; set; } 

        [JsonProperty("enableresourcebooking", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Enableresourcebooking { get; set; } 

        [JsonProperty("resourcebooking_workdays_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resourcebooking_workdays_id { get; set; } 

        [JsonProperty("resourcebooking_workdays_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Resourcebooking_workdays_name { get; set; } 

        [JsonProperty("resourcebooking_allow_asset_selection", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Resourcebooking_allow_asset_selection { get; set; } 

        [JsonProperty("resourcebooking_asset_restriction_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resourcebooking_asset_restriction_type { get; set; } 

        [JsonProperty("resourcebooking_min_hours_advance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Resourcebooking_min_hours_advance { get; set; } 

        [JsonProperty("resourcebooking_max_days_advance", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public double? Resourcebooking_max_days_advance { get; set; } 

        [JsonProperty("bookingtypes", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<BookingType>? Bookingtypes { get; set; } 

        [JsonProperty("timeslots", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<BookingTypeTimeslot>? Timeslots { get; set; } 

        [JsonProperty("timeslot_bookingtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Timeslot_bookingtype { get; set; } 

        [JsonProperty("_isimport", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? _isimport { get; set; } 

        [JsonProperty("_warning", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? _warning { get; set; } 

        [JsonProperty("linkedcontracttype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Linkedcontracttype { get; set; } 

        [JsonProperty("fiid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Fiid { get; set; } 

        [JsonProperty("fiid_guid", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public System.Guid? Fiid_guid { get; set; } 

        [JsonProperty("finame", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Finame { get; set; } 

        [JsonProperty("new_icon", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? New_icon { get; set; } 

        [JsonProperty("xtype_roles", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeRole>? Xtype_roles { get; set; } 

        [JsonProperty("asset_details_tab_display", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Asset_details_tab_display { get; set; } 

        [JsonProperty("tab_config", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<TabConfig>? Tab_config { get; set; } 

        [JsonProperty("resourcebookingtype", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resourcebookingtype { get; set; } 

        [JsonProperty("allowed_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<XTypeStatus>? Allowed_status { get; set; } 

        [JsonProperty("allowall_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allowall_status { get; set; } 

        [JsonProperty("businessowner_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Businessowner_visibility { get; set; } 

        [JsonProperty("technicalowner_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Technicalowner_visibility { get; set; } 

        [JsonProperty("sla_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Sla_visibility { get; set; } 

        [JsonProperty("priority_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Priority_visibility { get; set; } 

        [JsonProperty("status_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Status_visibility { get; set; } 

        [JsonProperty("services_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Services_visibility { get; set; } 

        [JsonProperty("dependencies_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Dependencies_visibility { get; set; } 

        [JsonProperty("notes_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Notes_visibility { get; set; } 

        [JsonProperty("visibility_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Visibility_level { get; set; } 

        [JsonProperty("resourcebooking_site_selection_type", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Resourcebooking_site_selection_type { get; set; } 

        [JsonProperty("booking_sites", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<Site_List>? Booking_sites { get; set; } 

        [JsonProperty("access_control", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<AccessControl>? Access_control { get; set; } 

        [JsonProperty("newticket_priority", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Newticket_priority { get; set; } 

        [JsonProperty("access_control_level", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Access_control_level { get; set; } 

        [JsonProperty("licence_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Licence_visibility { get; set; } 

        [JsonProperty("allow_all_view", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Allow_all_view { get; set; } 

        [JsonProperty("criticality_visibility", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Criticality_visibility { get; set; } 

        [JsonProperty("is_service", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_service { get; set; } 

        [JsonProperty("is_businessapp", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public bool? Is_businessapp { get; set; } 

        [JsonProperty("service_category_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public int? Service_category_id { get; set; } 

        [JsonProperty("service_category_name", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Service_category_name { get; set; } 

        [JsonProperty("services", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<ServSite_List>? Services { get; set; } 

        [JsonProperty("field_restrictions", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public ICollection<FieldRoleRestriction>? Field_restrictions { get; set; } 

    }

    [GeneratedCode("NJsonSchema", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ZabbixWebhook
    {
        [JsonProperty("alert_message", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alert_message { get; set; } 

        [JsonProperty("alert_subject", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Alert_subject { get; set; } 

        [JsonProperty("event_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event_id { get; set; } 

        [JsonProperty("event_nseverity", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event_nseverity { get; set; } 

        [JsonProperty("event_source", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event_source { get; set; } 

        [JsonProperty("event_tags", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event_tags { get; set; } 

        [JsonProperty("event_update_status", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event_update_status { get; set; } 

        [JsonProperty("event_value", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Event_value { get; set; } 

        [JsonProperty("trigger_id", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Trigger_id { get; set; } 

        [JsonProperty("host", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public string? Host { get; set; } 

        [JsonProperty("params", Required = Required.Default, NullValueHandling = NullValueHandling.Ignore)]
        public IDictionary<string, string?>? Params { get; set; } 

    }

    [GeneratedCode("NSwag", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class FileParameter
    {
        public FileParameter(System.IO.Stream data)
            : this (data, null, null)
        {
        }

        public FileParameter(System.IO.Stream data, string? fileName)
            : this (data, fileName, null)
        {
        }

        public FileParameter(System.IO.Stream data, string? fileName, string? contentType)
        {
            Data = data;
            FileName = fileName;
            ContentType = contentType;
        }

        public System.IO.Stream Data { get; private set; }

        public string? FileName { get; private set; }

        public string? ContentType { get; private set; }
    }



    [GeneratedCode("NSwag", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ApiException : System.Exception
    {
        public int StatusCode { get; private set; }

        public string? Response { get; private set; }

        public IReadOnlyDictionary<string, IEnumerable<string>> Headers { get; private set; }

        public ApiException(string message, int statusCode, string? response, IReadOnlyDictionary<string, IEnumerable<string>> headers, System.Exception? innerException)
            : base(message + "\n\nStatus: " + statusCode + "\nResponse: \n" + ((response == null) ? "(null)" : response.Substring(0, response.Length >= 512 ? 512 : response.Length)), innerException)
        {
            StatusCode = statusCode;
            Response = response;
            Headers = headers;
        }

        public override string ToString()
        {
            return string.Format("HTTP Response: \n\n{0}\n\n{1}", Response, base.ToString());
        }
    }

    [GeneratedCode("NSwag", "14.3.0.0 (NJsonSchema v11.2.0.0 (Newtonsoft.Json v13.0.0.0))")]
    public class ApiException<TResult> : ApiException
    {
        public TResult Result { get; private set; }

        public ApiException(string message, int statusCode, string? response, IReadOnlyDictionary<string, IEnumerable<string>> headers, TResult result, System.Exception? innerException)
            : base(message, statusCode, response, headers, innerException)
        {
            Result = result;
        }
    }

}

#pragma warning restore  108
#pragma warning restore  114
#pragma warning restore  472
#pragma warning restore  612
#pragma warning restore 1573
#pragma warning restore 1591
#pragma warning restore 8073
#pragma warning restore 3016
#pragma warning restore 8600
#pragma warning restore 8602
#pragma warning restore 8603
#pragma warning restore 8604
#pragma warning restore 8625